### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.Application"
  id: "Application"
  parent: "fr.axa.automation"
  children:
  - "fr.axa.automation.Application.Application(fr.axa.automation.webengine.logger.LoggerService,fr.axa.automation.webengine.boot.BootProject)"
  - "fr.axa.automation.Application.main(java.lang.String[])"
  - "fr.axa.automation.Application.run(java.lang.String...)"
  langs:
  - "java"
  name: "Application"
  nameWithType: "Application"
  fullName: "fr.axa.automation.Application"
  type: "Class"
  package: "fr.axa.automation"
  syntax:
    content: "public class Application implements CommandLineRunner"
  inheritance:
  - "java.lang.Object"
  implements:
  - "org.springframework.boot.CommandLineRunner"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.Application.Application(fr.axa.automation.webengine.logger.LoggerService,fr.axa.automation.webengine.boot.BootProject)"
  id: "Application(fr.axa.automation.webengine.logger.LoggerService,fr.axa.automation.webengine.boot.BootProject)"
  parent: "fr.axa.automation.Application"
  langs:
  - "java"
  name: "Application(LoggerService loggerService, BootProject bootProject)"
  nameWithType: "Application.Application(LoggerService loggerService, BootProject bootProject)"
  fullName: "fr.axa.automation.Application.Application(LoggerService loggerService, BootProject bootProject)"
  overload: "fr.axa.automation.Application.Application*"
  type: "Constructor"
  package: "fr.axa.automation"
  syntax:
    content: "public Application(LoggerService loggerService, BootProject bootProject)"
    parameters:
    - id: "loggerService"
      type: "fr.axa.automation.webengine.logger.LoggerService"
    - id: "bootProject"
      type: "fr.axa.automation.webengine.boot.BootProject"
- uid: "fr.axa.automation.Application.main(java.lang.String[])"
  id: "main(java.lang.String[])"
  parent: "fr.axa.automation.Application"
  langs:
  - "java"
  name: "main(String[] args)"
  nameWithType: "Application.main(String[] args)"
  fullName: "fr.axa.automation.Application.main(String[] args)"
  overload: "fr.axa.automation.Application.main*"
  type: "Method"
  package: "fr.axa.automation"
  syntax:
    content: "public static void main(String[] args)"
    parameters:
    - id: "args"
      type: "java.lang.String[]"
- uid: "fr.axa.automation.Application.run(java.lang.String...)"
  id: "run(java.lang.String...)"
  parent: "fr.axa.automation.Application"
  langs:
  - "java"
  name: "run(String[] args)"
  nameWithType: "Application.run(String[] args)"
  fullName: "fr.axa.automation.Application.run(String[] args)"
  overload: "fr.axa.automation.Application.run*"
  type: "Method"
  package: "fr.axa.automation"
  syntax:
    content: "public void run(String[] args)"
    parameters:
    - id: "args"
      type: "java.lang.String[]"
  exceptions:
  - type: "java.lang.Exception"
references:
- uid: "fr.axa.automation.webengine.logger.LoggerService"
  name: "LoggerService"
  nameWithType: "LoggerService"
  fullName: "fr.axa.automation.webengine.logger.LoggerService"
- uid: "fr.axa.automation.webengine.boot.BootProject"
  name: "BootProject"
  nameWithType: "BootProject"
  fullName: "fr.axa.automation.webengine.boot.BootProject"
- uid: "fr.axa.automation.Application.Application*"
  name: "Application"
  nameWithType: "Application.Application"
  fullName: "fr.axa.automation.Application.Application"
  package: "fr.axa.automation"
- uid: "java.lang.String[]"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: "[]"
    fullName: "[]"
- uid: "fr.axa.automation.Application.main*"
  name: "main"
  nameWithType: "Application.main"
  fullName: "fr.axa.automation.Application.main"
  package: "fr.axa.automation"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "fr.axa.automation.Application.run*"
  name: "run"
  nameWithType: "Application.run"
  fullName: "fr.axa.automation.Application.run"
  package: "fr.axa.automation"
- uid: "org.springframework.boot.CommandLineRunner"
  name: "CommandLineRunner"
  nameWithType: "CommandLineRunner"
  fullName: "org.springframework.boot.CommandLineRunner"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
