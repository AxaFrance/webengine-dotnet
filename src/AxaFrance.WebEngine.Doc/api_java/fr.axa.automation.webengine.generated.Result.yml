### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.generated.Result"
  id: "Result"
  parent: "fr.axa.automation.webengine.generated"
  children:
  - "fr.axa.automation.webengine.generated.Result.CRITICAL_ERROR"
  - "fr.axa.automation.webengine.generated.Result.FAILED"
  - "fr.axa.automation.webengine.generated.Result.IGNORED"
  - "fr.axa.automation.webengine.generated.Result.NONE"
  - "fr.axa.automation.webengine.generated.Result.PASSED"
  - "fr.axa.automation.webengine.generated.Result.fromValue(java.lang.String)"
  - "fr.axa.automation.webengine.generated.Result.value()"
  - "fr.axa.automation.webengine.generated.Result.valueOf(java.lang.String)"
  - "fr.axa.automation.webengine.generated.Result.values()"
  langs:
  - "java"
  name: "Result"
  nameWithType: "Result"
  fullName: "fr.axa.automation.webengine.generated.Result"
  type: "Enum"
  package: "fr.axa.automation.webengine.generated"
  summary: "Java class for Result.\n\nThe following schema fragment specifies the expected content contained within this class.\n\n```java\n<simpleType name=\"Result\">\n   <restriction base=\"{http://www.w3.org/2001/XMLSchema}string\">\n     <enumeration value=\"None\"/>\n     <enumeration value=\"Passed\"/>\n     <enumeration value=\"Failed\"/>\n     <enumeration value=\"CriticalError\"/>\n     <enumeration value=\"Ignored\"/>\n   </restriction>\n </simpleType>\n```"
  syntax:
    content: "public enum Result extends Enum<Result>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.generated.Result.CRITICAL_ERROR"
  id: "CRITICAL_ERROR"
  parent: "fr.axa.automation.webengine.generated.Result"
  langs:
  - "java"
  name: "CRITICAL_ERROR"
  nameWithType: "Result.CRITICAL_ERROR"
  fullName: "fr.axa.automation.webengine.generated.Result.CRITICAL_ERROR"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "public static final Result CRITICAL_ERROR"
    return:
      type: "fr.axa.automation.webengine.generated.Result"
- uid: "fr.axa.automation.webengine.generated.Result.FAILED"
  id: "FAILED"
  parent: "fr.axa.automation.webengine.generated.Result"
  langs:
  - "java"
  name: "FAILED"
  nameWithType: "Result.FAILED"
  fullName: "fr.axa.automation.webengine.generated.Result.FAILED"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "public static final Result FAILED"
    return:
      type: "fr.axa.automation.webengine.generated.Result"
- uid: "fr.axa.automation.webengine.generated.Result.IGNORED"
  id: "IGNORED"
  parent: "fr.axa.automation.webengine.generated.Result"
  langs:
  - "java"
  name: "IGNORED"
  nameWithType: "Result.IGNORED"
  fullName: "fr.axa.automation.webengine.generated.Result.IGNORED"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "public static final Result IGNORED"
    return:
      type: "fr.axa.automation.webengine.generated.Result"
- uid: "fr.axa.automation.webengine.generated.Result.NONE"
  id: "NONE"
  parent: "fr.axa.automation.webengine.generated.Result"
  langs:
  - "java"
  name: "NONE"
  nameWithType: "Result.NONE"
  fullName: "fr.axa.automation.webengine.generated.Result.NONE"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "public static final Result NONE"
    return:
      type: "fr.axa.automation.webengine.generated.Result"
- uid: "fr.axa.automation.webengine.generated.Result.PASSED"
  id: "PASSED"
  parent: "fr.axa.automation.webengine.generated.Result"
  langs:
  - "java"
  name: "PASSED"
  nameWithType: "Result.PASSED"
  fullName: "fr.axa.automation.webengine.generated.Result.PASSED"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "public static final Result PASSED"
    return:
      type: "fr.axa.automation.webengine.generated.Result"
- uid: "fr.axa.automation.webengine.generated.Result.Result(java.lang.String)"
  id: "Result(java.lang.String)"
  parent: "fr.axa.automation.webengine.generated.Result"
  langs:
  - "java"
  name: "Result(String v)"
  nameWithType: "Result.Result(String v)"
  fullName: "fr.axa.automation.webengine.generated.Result.Result(String v)"
  overload: "fr.axa.automation.webengine.generated.Result.Result*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "private Result(String v)"
    parameters:
    - id: "v"
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.generated.Result.fromValue(java.lang.String)"
  id: "fromValue(java.lang.String)"
  parent: "fr.axa.automation.webengine.generated.Result"
  langs:
  - "java"
  name: "fromValue(String v)"
  nameWithType: "Result.fromValue(String v)"
  fullName: "fr.axa.automation.webengine.generated.Result.fromValue(String v)"
  overload: "fr.axa.automation.webengine.generated.Result.fromValue*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "public static Result fromValue(String v)"
    parameters:
    - id: "v"
      type: "java.lang.String"
    return:
      type: "fr.axa.automation.webengine.generated.Result"
- uid: "fr.axa.automation.webengine.generated.Result.value()"
  id: "value()"
  parent: "fr.axa.automation.webengine.generated.Result"
  langs:
  - "java"
  name: "value()"
  nameWithType: "Result.value()"
  fullName: "fr.axa.automation.webengine.generated.Result.value()"
  overload: "fr.axa.automation.webengine.generated.Result.value*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "public String value()"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.generated.Result.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "fr.axa.automation.webengine.generated.Result"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "Result.valueOf(String name)"
  fullName: "fr.axa.automation.webengine.generated.Result.valueOf(String name)"
  overload: "fr.axa.automation.webengine.generated.Result.valueOf*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "public static Result valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "fr.axa.automation.webengine.generated.Result"
- uid: "fr.axa.automation.webengine.generated.Result.values()"
  id: "values()"
  parent: "fr.axa.automation.webengine.generated.Result"
  langs:
  - "java"
  name: "values()"
  nameWithType: "Result.values()"
  fullName: "fr.axa.automation.webengine.generated.Result.values()"
  overload: "fr.axa.automation.webengine.generated.Result.values*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "public static Result[] values()"
    return:
      type: "fr.axa.automation.webengine.generated.Result[]"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.generated.Result.Result*"
  name: "Result"
  nameWithType: "Result.Result"
  fullName: "fr.axa.automation.webengine.generated.Result.Result"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.Result[]"
  spec.java:
  - uid: "fr.axa.automation.webengine.generated.Result"
    name: "Result"
    fullName: "fr.axa.automation.webengine.generated.Result"
  - name: "[]"
    fullName: "[]"
- uid: "fr.axa.automation.webengine.generated.Result.values*"
  name: "values"
  nameWithType: "Result.values"
  fullName: "fr.axa.automation.webengine.generated.Result.values"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.Result.valueOf*"
  name: "valueOf"
  nameWithType: "Result.valueOf"
  fullName: "fr.axa.automation.webengine.generated.Result.valueOf"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.Result.value*"
  name: "value"
  nameWithType: "Result.value"
  fullName: "fr.axa.automation.webengine.generated.Result.value"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.Result.fromValue*"
  name: "fromValue"
  nameWithType: "Result.fromValue"
  fullName: "fr.axa.automation.webengine.generated.Result.fromValue"
  package: "fr.axa.automation.webengine.generated"
- uid: "java.lang.Enum<fr.axa.automation.webengine.generated.Result>"
  name: "Enum<Result>"
  nameWithType: "Enum<Result>"
  fullName: "java.lang.Enum<fr.axa.automation.webengine.generated.Result>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
