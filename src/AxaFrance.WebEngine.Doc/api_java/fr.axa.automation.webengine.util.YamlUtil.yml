### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.util.YamlUtil"
  id: "YamlUtil"
  parent: "fr.axa.automation.webengine.util"
  children:
  - "fr.axa.automation.webengine.util.YamlUtil.<T>getYaml(java.lang.Class<T>)"
  - "fr.axa.automation.webengine.util.YamlUtil.<T>loadYaml(java.lang.Class<T>,java.io.InputStream)"
  langs:
  - "java"
  name: "YamlUtil"
  nameWithType: "YamlUtil"
  fullName: "fr.axa.automation.webengine.util.YamlUtil"
  type: "Class"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public final class YamlUtil"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.util.YamlUtil.<T>getYaml(java.lang.Class<T>)"
  id: "<T>getYaml(java.lang.Class<T>)"
  parent: "fr.axa.automation.webengine.util.YamlUtil"
  langs:
  - "java"
  name: "<T>getYaml(Class<T> clazz)"
  nameWithType: "YamlUtil.<T>getYaml(Class<T> clazz)"
  fullName: "fr.axa.automation.webengine.util.YamlUtil.<T>getYaml(Class<T> clazz)"
  overload: "fr.axa.automation.webengine.util.YamlUtil.getYaml*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Yaml <T>getYaml(Class<T> clazz)"
    parameters:
    - id: "clazz"
      type: "java.lang.Class<T>"
    return:
      type: "org.yaml.snakeyaml.Yaml"
- uid: "fr.axa.automation.webengine.util.YamlUtil.<T>loadYaml(java.lang.Class<T>,java.io.InputStream)"
  id: "<T>loadYaml(java.lang.Class<T>,java.io.InputStream)"
  parent: "fr.axa.automation.webengine.util.YamlUtil"
  langs:
  - "java"
  name: "<T>loadYaml(Class<T> clazz, InputStream inputStream)"
  nameWithType: "YamlUtil.<T>loadYaml(Class<T> clazz, InputStream inputStream)"
  fullName: "fr.axa.automation.webengine.util.YamlUtil.<T>loadYaml(Class<T> clazz, InputStream inputStream)"
  overload: "fr.axa.automation.webengine.util.YamlUtil.loadYaml*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static T <T>loadYaml(Class<T> clazz, InputStream inputStream)"
    parameters:
    - id: "clazz"
      type: "java.lang.Class<T>"
    - id: "inputStream"
      type: "java.io.InputStream"
    return:
      type: "T"
- uid: "fr.axa.automation.webengine.util.YamlUtil.YamlUtil()"
  id: "YamlUtil()"
  parent: "fr.axa.automation.webengine.util.YamlUtil"
  langs:
  - "java"
  name: "YamlUtil()"
  nameWithType: "YamlUtil.YamlUtil()"
  fullName: "fr.axa.automation.webengine.util.YamlUtil.YamlUtil()"
  overload: "fr.axa.automation.webengine.util.YamlUtil.YamlUtil*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "private YamlUtil()"
references:
- uid: "fr.axa.automation.webengine.util.YamlUtil.YamlUtil*"
  name: "YamlUtil"
  nameWithType: "YamlUtil.YamlUtil"
  fullName: "fr.axa.automation.webengine.util.YamlUtil.YamlUtil"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "org.yaml.snakeyaml.Yaml"
  spec.java:
  - uid: "org.yaml.snakeyaml.Yaml"
    name: "Yaml"
    fullName: "org.yaml.snakeyaml.Yaml"
- uid: "fr.axa.automation.webengine.util.YamlUtil.getYaml*"
  name: "<T>getYaml"
  nameWithType: "YamlUtil.<T>getYaml"
  fullName: "fr.axa.automation.webengine.util.YamlUtil.<T>getYaml"
  package: "fr.axa.automation.webengine.util"
- uid: "java.io.InputStream"
  spec.java:
  - uid: "java.io.InputStream"
    name: "InputStream"
    fullName: "java.io.InputStream"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "fr.axa.automation.webengine.util.YamlUtil.loadYaml*"
  name: "<T>loadYaml"
  nameWithType: "YamlUtil.<T>loadYaml"
  fullName: "fr.axa.automation.webengine.util.YamlUtil.<T>loadYaml"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
