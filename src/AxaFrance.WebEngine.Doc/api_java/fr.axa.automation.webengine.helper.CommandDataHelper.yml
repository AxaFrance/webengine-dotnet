### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.helper.CommandDataHelper"
  id: "CommandDataHelper"
  parent: "fr.axa.automation.webengine.helper"
  children:
  - "fr.axa.automation.webengine.helper.CommandDataHelper.CommandDataHelper()"
  - "fr.axa.automation.webengine.helper.CommandDataHelper.canExecuteDataTestColumn(java.util.List<java.lang.String>,java.lang.String)"
  - "fr.axa.automation.webengine.helper.CommandDataHelper.getCommandDataByName(fr.axa.automation.webengine.object.TestCaseDataNoCode,fr.axa.automation.webengine.cmd.CommandName)"
  - "fr.axa.automation.webengine.helper.CommandDataHelper.mergeLists(java.util.List<java.lang.String>,java.util.List<java.lang.String>)"
  langs:
  - "java"
  name: "CommandDataHelper"
  nameWithType: "CommandDataHelper"
  fullName: "fr.axa.automation.webengine.helper.CommandDataHelper"
  type: "Class"
  package: "fr.axa.automation.webengine.helper"
  syntax:
    content: "public class CommandDataHelper"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.helper.CommandDataHelper.CommandDataHelper()"
  id: "CommandDataHelper()"
  parent: "fr.axa.automation.webengine.helper.CommandDataHelper"
  langs:
  - "java"
  name: "CommandDataHelper()"
  nameWithType: "CommandDataHelper.CommandDataHelper()"
  fullName: "fr.axa.automation.webengine.helper.CommandDataHelper.CommandDataHelper()"
  overload: "fr.axa.automation.webengine.helper.CommandDataHelper.CommandDataHelper*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.helper"
  syntax:
    content: "public CommandDataHelper()"
- uid: "fr.axa.automation.webengine.helper.CommandDataHelper.canExecuteDataTestColumn(java.util.List<java.lang.String>,java.lang.String)"
  id: "canExecuteDataTestColumn(java.util.List<java.lang.String>,java.lang.String)"
  parent: "fr.axa.automation.webengine.helper.CommandDataHelper"
  langs:
  - "java"
  name: "canExecuteDataTestColumn(List<String> dataTestRefList, String dataTestColumnName)"
  nameWithType: "CommandDataHelper.canExecuteDataTestColumn(List<String> dataTestRefList, String dataTestColumnName)"
  fullName: "fr.axa.automation.webengine.helper.CommandDataHelper.canExecuteDataTestColumn(List<String> dataTestRefList, String dataTestColumnName)"
  overload: "fr.axa.automation.webengine.helper.CommandDataHelper.canExecuteDataTestColumn*"
  type: "Method"
  package: "fr.axa.automation.webengine.helper"
  syntax:
    content: "public static boolean canExecuteDataTestColumn(List<String> dataTestRefList, String dataTestColumnName)"
    parameters:
    - id: "dataTestRefList"
      type: "java.util.List<java.lang.String>"
    - id: "dataTestColumnName"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "fr.axa.automation.webengine.helper.CommandDataHelper.getCommandDataByName(fr.axa.automation.webengine.object.TestCaseDataNoCode,fr.axa.automation.webengine.cmd.CommandName)"
  id: "getCommandDataByName(fr.axa.automation.webengine.object.TestCaseDataNoCode,fr.axa.automation.webengine.cmd.CommandName)"
  parent: "fr.axa.automation.webengine.helper.CommandDataHelper"
  langs:
  - "java"
  name: "getCommandDataByName(TestCaseDataNoCode testCaseData, CommandName commandName)"
  nameWithType: "CommandDataHelper.getCommandDataByName(TestCaseDataNoCode testCaseData, CommandName commandName)"
  fullName: "fr.axa.automation.webengine.helper.CommandDataHelper.getCommandDataByName(TestCaseDataNoCode testCaseData, CommandName commandName)"
  overload: "fr.axa.automation.webengine.helper.CommandDataHelper.getCommandDataByName*"
  type: "Method"
  package: "fr.axa.automation.webengine.helper"
  syntax:
    content: "public static List<CommandDataNoCode> getCommandDataByName(TestCaseDataNoCode testCaseData, CommandName commandName)"
    parameters:
    - id: "testCaseData"
      type: "fr.axa.automation.webengine.object.TestCaseDataNoCode"
    - id: "commandName"
      type: "fr.axa.automation.webengine.cmd.CommandName"
    return:
      type: "java.util.List<fr.axa.automation.webengine.object.CommandDataNoCode>"
- uid: "fr.axa.automation.webengine.helper.CommandDataHelper.mergeLists(java.util.List<java.lang.String>,java.util.List<java.lang.String>)"
  id: "mergeLists(java.util.List<java.lang.String>,java.util.List<java.lang.String>)"
  parent: "fr.axa.automation.webengine.helper.CommandDataHelper"
  langs:
  - "java"
  name: "mergeLists(List<String> list1, List<String> list2)"
  nameWithType: "CommandDataHelper.mergeLists(List<String> list1, List<String> list2)"
  fullName: "fr.axa.automation.webengine.helper.CommandDataHelper.mergeLists(List<String> list1, List<String> list2)"
  overload: "fr.axa.automation.webengine.helper.CommandDataHelper.mergeLists*"
  type: "Method"
  package: "fr.axa.automation.webengine.helper"
  syntax:
    content: "public static List<String> mergeLists(List<String> list1, List<String> list2)"
    parameters:
    - id: "list1"
      type: "java.util.List<java.lang.String>"
    - id: "list2"
      type: "java.util.List<java.lang.String>"
    return:
      type: "java.util.List<java.lang.String>"
references:
- uid: "fr.axa.automation.webengine.helper.CommandDataHelper.CommandDataHelper*"
  name: "CommandDataHelper"
  nameWithType: "CommandDataHelper.CommandDataHelper"
  fullName: "fr.axa.automation.webengine.helper.CommandDataHelper.CommandDataHelper"
  package: "fr.axa.automation.webengine.helper"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.helper.CommandDataHelper.mergeLists*"
  name: "mergeLists"
  nameWithType: "CommandDataHelper.mergeLists"
  fullName: "fr.axa.automation.webengine.helper.CommandDataHelper.mergeLists"
  package: "fr.axa.automation.webengine.helper"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "fr.axa.automation.webengine.helper.CommandDataHelper.canExecuteDataTestColumn*"
  name: "canExecuteDataTestColumn"
  nameWithType: "CommandDataHelper.canExecuteDataTestColumn"
  fullName: "fr.axa.automation.webengine.helper.CommandDataHelper.canExecuteDataTestColumn"
  package: "fr.axa.automation.webengine.helper"
- uid: "fr.axa.automation.webengine.object.TestCaseDataNoCode"
  name: "TestCaseDataNoCode"
  nameWithType: "TestCaseDataNoCode"
  fullName: "fr.axa.automation.webengine.object.TestCaseDataNoCode"
- uid: "fr.axa.automation.webengine.cmd.CommandName"
  name: "CommandName"
  nameWithType: "CommandName"
  fullName: "fr.axa.automation.webengine.cmd.CommandName"
- uid: "java.util.List<fr.axa.automation.webengine.object.CommandDataNoCode>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.webengine.object.CommandDataNoCode"
    name: "CommandDataNoCode"
    fullName: "fr.axa.automation.webengine.object.CommandDataNoCode"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.helper.CommandDataHelper.getCommandDataByName*"
  name: "getCommandDataByName"
  nameWithType: "CommandDataHelper.getCommandDataByName"
  fullName: "fr.axa.automation.webengine.helper.CommandDataHelper.getCommandDataByName"
  package: "fr.axa.automation.webengine.helper"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "fr.axa.automation.webengine.object.CommandDataNoCode"
  name: "CommandDataNoCode"
  nameWithType: "CommandDataNoCode"
  fullName: "fr.axa.automation.webengine.object.CommandDataNoCode"
