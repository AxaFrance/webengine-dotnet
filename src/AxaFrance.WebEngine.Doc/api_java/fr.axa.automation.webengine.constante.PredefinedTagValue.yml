### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  id: "PredefinedTagValue"
  parent: "fr.axa.automation.webengine.constante"
  children:
  - "fr.axa.automation.webengine.constante.PredefinedTagValue.CHECKED"
  - "fr.axa.automation.webengine.constante.PredefinedTagValue.DISPLAYED"
  - "fr.axa.automation.webengine.constante.PredefinedTagValue.EMPTY"
  - "fr.axa.automation.webengine.constante.PredefinedTagValue.EXISTS"
  - "fr.axa.automation.webengine.constante.PredefinedTagValue.NOT_CHECKED"
  - "fr.axa.automation.webengine.constante.PredefinedTagValue.NOT_DISPLAYED"
  - "fr.axa.automation.webengine.constante.PredefinedTagValue.NOT_EMPTY"
  - "fr.axa.automation.webengine.constante.PredefinedTagValue.NOT_EXISTS"
  - "fr.axa.automation.webengine.constante.PredefinedTagValue.getTagValueList()"
  - "fr.axa.automation.webengine.constante.PredefinedTagValue.isContainsPredefinedTagValue(java.lang.String)"
  - "fr.axa.automation.webengine.constante.PredefinedTagValue.valueOf(java.lang.String)"
  - "fr.axa.automation.webengine.constante.PredefinedTagValue.values()"
  langs:
  - "java"
  name: "PredefinedTagValue"
  nameWithType: "PredefinedTagValue"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  type: "Enum"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public enum PredefinedTagValue extends Enum<PredefinedTagValue>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.CHECKED"
  id: "CHECKED"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "CHECKED"
  nameWithType: "PredefinedTagValue.CHECKED"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.CHECKED"
  type: "Field"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public static final PredefinedTagValue CHECKED"
    return:
      type: "fr.axa.automation.webengine.constante.PredefinedTagValue"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.DISPLAYED"
  id: "DISPLAYED"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "DISPLAYED"
  nameWithType: "PredefinedTagValue.DISPLAYED"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.DISPLAYED"
  type: "Field"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public static final PredefinedTagValue DISPLAYED"
    return:
      type: "fr.axa.automation.webengine.constante.PredefinedTagValue"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.EMPTY"
  id: "EMPTY"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "EMPTY"
  nameWithType: "PredefinedTagValue.EMPTY"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.EMPTY"
  type: "Field"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public static final PredefinedTagValue EMPTY"
    return:
      type: "fr.axa.automation.webengine.constante.PredefinedTagValue"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.EXISTS"
  id: "EXISTS"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "EXISTS"
  nameWithType: "PredefinedTagValue.EXISTS"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.EXISTS"
  type: "Field"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public static final PredefinedTagValue EXISTS"
    return:
      type: "fr.axa.automation.webengine.constante.PredefinedTagValue"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.NOT_CHECKED"
  id: "NOT_CHECKED"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "NOT_CHECKED"
  nameWithType: "PredefinedTagValue.NOT_CHECKED"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.NOT_CHECKED"
  type: "Field"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public static final PredefinedTagValue NOT_CHECKED"
    return:
      type: "fr.axa.automation.webengine.constante.PredefinedTagValue"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.NOT_DISPLAYED"
  id: "NOT_DISPLAYED"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "NOT_DISPLAYED"
  nameWithType: "PredefinedTagValue.NOT_DISPLAYED"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.NOT_DISPLAYED"
  type: "Field"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public static final PredefinedTagValue NOT_DISPLAYED"
    return:
      type: "fr.axa.automation.webengine.constante.PredefinedTagValue"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.NOT_EMPTY"
  id: "NOT_EMPTY"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "NOT_EMPTY"
  nameWithType: "PredefinedTagValue.NOT_EMPTY"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.NOT_EMPTY"
  type: "Field"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public static final PredefinedTagValue NOT_EMPTY"
    return:
      type: "fr.axa.automation.webengine.constante.PredefinedTagValue"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.NOT_EXISTS"
  id: "NOT_EXISTS"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "NOT_EXISTS"
  nameWithType: "PredefinedTagValue.NOT_EXISTS"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.NOT_EXISTS"
  type: "Field"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public static final PredefinedTagValue NOT_EXISTS"
    return:
      type: "fr.axa.automation.webengine.constante.PredefinedTagValue"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.PredefinedTagValue()"
  id: "PredefinedTagValue()"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "PredefinedTagValue()"
  nameWithType: "PredefinedTagValue.PredefinedTagValue()"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.PredefinedTagValue()"
  overload: "fr.axa.automation.webengine.constante.PredefinedTagValue.PredefinedTagValue*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "private PredefinedTagValue()"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.getTagValueList()"
  id: "getTagValueList()"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "getTagValueList()"
  nameWithType: "PredefinedTagValue.getTagValueList()"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.getTagValueList()"
  overload: "fr.axa.automation.webengine.constante.PredefinedTagValue.getTagValueList*"
  type: "Method"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public static List<String> getTagValueList()"
    return:
      type: "java.util.List<java.lang.String>"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.isContainsPredefinedTagValue(java.lang.String)"
  id: "isContainsPredefinedTagValue(java.lang.String)"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "isContainsPredefinedTagValue(String value)"
  nameWithType: "PredefinedTagValue.isContainsPredefinedTagValue(String value)"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.isContainsPredefinedTagValue(String value)"
  overload: "fr.axa.automation.webengine.constante.PredefinedTagValue.isContainsPredefinedTagValue*"
  type: "Method"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public static boolean isContainsPredefinedTagValue(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "PredefinedTagValue.valueOf(String name)"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.valueOf(String name)"
  overload: "fr.axa.automation.webengine.constante.PredefinedTagValue.valueOf*"
  type: "Method"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public static PredefinedTagValue valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "fr.axa.automation.webengine.constante.PredefinedTagValue"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.values()"
  id: "values()"
  parent: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  langs:
  - "java"
  name: "values()"
  nameWithType: "PredefinedTagValue.values()"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.values()"
  overload: "fr.axa.automation.webengine.constante.PredefinedTagValue.values*"
  type: "Method"
  package: "fr.axa.automation.webengine.constante"
  syntax:
    content: "public static PredefinedTagValue[] values()"
    return:
      type: "fr.axa.automation.webengine.constante.PredefinedTagValue[]"
references:
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.PredefinedTagValue*"
  name: "PredefinedTagValue"
  nameWithType: "PredefinedTagValue.PredefinedTagValue"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.PredefinedTagValue"
  package: "fr.axa.automation.webengine.constante"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue[]"
  spec.java:
  - uid: "fr.axa.automation.webengine.constante.PredefinedTagValue"
    name: "PredefinedTagValue"
    fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue"
  - name: "[]"
    fullName: "[]"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.values*"
  name: "values"
  nameWithType: "PredefinedTagValue.values"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.values"
  package: "fr.axa.automation.webengine.constante"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.valueOf*"
  name: "valueOf"
  nameWithType: "PredefinedTagValue.valueOf"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.valueOf"
  package: "fr.axa.automation.webengine.constante"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.getTagValueList*"
  name: "getTagValueList"
  nameWithType: "PredefinedTagValue.getTagValueList"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.getTagValueList"
  package: "fr.axa.automation.webengine.constante"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "fr.axa.automation.webengine.constante.PredefinedTagValue.isContainsPredefinedTagValue*"
  name: "isContainsPredefinedTagValue"
  nameWithType: "PredefinedTagValue.isContainsPredefinedTagValue"
  fullName: "fr.axa.automation.webengine.constante.PredefinedTagValue.isContainsPredefinedTagValue"
  package: "fr.axa.automation.webengine.constante"
- uid: "java.lang.Enum<fr.axa.automation.webengine.constante.PredefinedTagValue>"
  name: "Enum<PredefinedTagValue>"
  nameWithType: "Enum<PredefinedTagValue>"
  fullName: "java.lang.Enum<fr.axa.automation.webengine.constante.PredefinedTagValue>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
