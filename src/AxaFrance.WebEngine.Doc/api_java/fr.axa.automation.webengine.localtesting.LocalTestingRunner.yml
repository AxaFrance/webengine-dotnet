### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.localtesting.LocalTestingRunner"
  id: "LocalTestingRunner"
  parent: "fr.axa.automation.webengine.localtesting"
  children:
  - "fr.axa.automation.webengine.localtesting.LocalTestingRunner.KEY"
  - "fr.axa.automation.webengine.localtesting.LocalTestingRunner.LocalTestingRunner()"
  - "fr.axa.automation.webengine.localtesting.LocalTestingRunner.LocalTestingRunner(fr.axa.automation.webengine.logger.ILoggerService,fr.axa.automation.webengine.properties.GlobalConfiguration)"
  - "fr.axa.automation.webengine.localtesting.LocalTestingRunner.startLocalTesting()"
  - "fr.axa.automation.webengine.localtesting.LocalTestingRunner.startLocalTesting(java.lang.String)"
  - "fr.axa.automation.webengine.localtesting.LocalTestingRunner.stopLocalTesting()"
  langs:
  - "java"
  name: "LocalTestingRunner"
  nameWithType: "LocalTestingRunner"
  fullName: "fr.axa.automation.webengine.localtesting.LocalTestingRunner"
  type: "Class"
  package: "fr.axa.automation.webengine.localtesting"
  syntax:
    content: "public class LocalTestingRunner implements ILocalTestingRunner"
  inheritance:
  - "java.lang.Object"
  implements:
  - "fr.axa.automation.webengine.localtesting.ILocalTestingRunner"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.KEY"
  id: "KEY"
  parent: "fr.axa.automation.webengine.localtesting.LocalTestingRunner"
  langs:
  - "java"
  name: "KEY"
  nameWithType: "LocalTestingRunner.KEY"
  fullName: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.KEY"
  type: "Field"
  package: "fr.axa.automation.webengine.localtesting"
  syntax:
    content: "public static final String KEY"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.LocalTestingRunner()"
  id: "LocalTestingRunner()"
  parent: "fr.axa.automation.webengine.localtesting.LocalTestingRunner"
  langs:
  - "java"
  name: "LocalTestingRunner()"
  nameWithType: "LocalTestingRunner.LocalTestingRunner()"
  fullName: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.LocalTestingRunner()"
  overload: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.LocalTestingRunner*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.localtesting"
  syntax:
    content: "public LocalTestingRunner()"
- uid: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.LocalTestingRunner(fr.axa.automation.webengine.logger.ILoggerService,fr.axa.automation.webengine.properties.GlobalConfiguration)"
  id: "LocalTestingRunner(fr.axa.automation.webengine.logger.ILoggerService,fr.axa.automation.webengine.properties.GlobalConfiguration)"
  parent: "fr.axa.automation.webengine.localtesting.LocalTestingRunner"
  langs:
  - "java"
  name: "LocalTestingRunner(ILoggerService loggerService, GlobalConfiguration globalConfiguration)"
  nameWithType: "LocalTestingRunner.LocalTestingRunner(ILoggerService loggerService, GlobalConfiguration globalConfiguration)"
  fullName: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.LocalTestingRunner(ILoggerService loggerService, GlobalConfiguration globalConfiguration)"
  overload: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.LocalTestingRunner*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.localtesting"
  syntax:
    content: "public LocalTestingRunner(ILoggerService loggerService, GlobalConfiguration globalConfiguration)"
    parameters:
    - id: "loggerService"
      type: "fr.axa.automation.webengine.logger.ILoggerService"
    - id: "globalConfiguration"
      type: "fr.axa.automation.webengine.properties.GlobalConfiguration"
- uid: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.startLocalTesting()"
  id: "startLocalTesting()"
  parent: "fr.axa.automation.webengine.localtesting.LocalTestingRunner"
  langs:
  - "java"
  name: "startLocalTesting()"
  nameWithType: "LocalTestingRunner.startLocalTesting()"
  fullName: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.startLocalTesting()"
  overload: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.startLocalTesting*"
  type: "Method"
  package: "fr.axa.automation.webengine.localtesting"
  syntax:
    content: "public void startLocalTesting()"
- uid: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.startLocalTesting(java.lang.String)"
  id: "startLocalTesting(java.lang.String)"
  parent: "fr.axa.automation.webengine.localtesting.LocalTestingRunner"
  langs:
  - "java"
  name: "startLocalTesting(String resourceNameOrPathAndFileName)"
  nameWithType: "LocalTestingRunner.startLocalTesting(String resourceNameOrPathAndFileName)"
  fullName: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.startLocalTesting(String resourceNameOrPathAndFileName)"
  overload: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.startLocalTesting*"
  type: "Method"
  package: "fr.axa.automation.webengine.localtesting"
  syntax:
    content: "public void startLocalTesting(String resourceNameOrPathAndFileName)"
    parameters:
    - id: "resourceNameOrPathAndFileName"
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.stopLocalTesting()"
  id: "stopLocalTesting()"
  parent: "fr.axa.automation.webengine.localtesting.LocalTestingRunner"
  langs:
  - "java"
  name: "stopLocalTesting()"
  nameWithType: "LocalTestingRunner.stopLocalTesting()"
  fullName: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.stopLocalTesting()"
  overload: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.stopLocalTesting*"
  type: "Method"
  package: "fr.axa.automation.webengine.localtesting"
  syntax:
    content: "public void stopLocalTesting()"
references:
- uid: "fr.axa.automation.webengine.logger.ILoggerService"
  name: "ILoggerService"
  nameWithType: "ILoggerService"
  fullName: "fr.axa.automation.webengine.logger.ILoggerService"
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration"
  name: "GlobalConfiguration"
  nameWithType: "GlobalConfiguration"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration"
- uid: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.LocalTestingRunner*"
  name: "LocalTestingRunner"
  nameWithType: "LocalTestingRunner.LocalTestingRunner"
  fullName: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.LocalTestingRunner"
  package: "fr.axa.automation.webengine.localtesting"
- uid: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.startLocalTesting*"
  name: "startLocalTesting"
  nameWithType: "LocalTestingRunner.startLocalTesting"
  fullName: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.startLocalTesting"
  package: "fr.axa.automation.webengine.localtesting"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.stopLocalTesting*"
  name: "stopLocalTesting"
  nameWithType: "LocalTestingRunner.stopLocalTesting"
  fullName: "fr.axa.automation.webengine.localtesting.LocalTestingRunner.stopLocalTesting"
  package: "fr.axa.automation.webengine.localtesting"
- uid: "fr.axa.automation.webengine.localtesting.ILocalTestingRunner"
  name: "ILocalTestingRunner"
  nameWithType: "ILocalTestingRunner"
  fullName: "fr.axa.automation.webengine.localtesting.ILocalTestingRunner"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
