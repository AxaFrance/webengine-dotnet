### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.util.FunctionUtil"
  id: "FunctionUtil"
  parent: "fr.axa.automation.webengine.util"
  children:
  - "fr.axa.automation.webengine.util.FunctionUtil.<T,R>perform(java.util.function.Function<T,R>)"
  - "fr.axa.automation.webengine.util.FunctionUtil.<T,R>perform(java.util.function.Function<T,R>,T)"
  - "fr.axa.automation.webengine.util.FunctionUtil.<T,R>retry(fr.axa.automation.webengine.api.IFunction<T,R>,T)"
  - "fr.axa.automation.webengine.util.FunctionUtil.<T,R>retry(fr.axa.automation.webengine.api.IFunction<T,R>,T,java.lang.Integer)"
  - "fr.axa.automation.webengine.util.FunctionUtil.FunctionUtil()"
  langs:
  - "java"
  name: "FunctionUtil"
  nameWithType: "FunctionUtil"
  fullName: "fr.axa.automation.webengine.util.FunctionUtil"
  type: "Class"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public final class FunctionUtil"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.util.FunctionUtil.<T,R>perform(java.util.function.Function<T,R>)"
  id: "<T,R>perform(java.util.function.Function<T,R>)"
  parent: "fr.axa.automation.webengine.util.FunctionUtil"
  langs:
  - "java"
  name: "<T,R>perform(Function<T,R> function)"
  nameWithType: "FunctionUtil.<T,R>perform(Function<T,R> function)"
  fullName: "fr.axa.automation.webengine.util.FunctionUtil.<T,R>perform(Function<T,R> function)"
  overload: "fr.axa.automation.webengine.util.FunctionUtil.perform*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static R <T,R>perform(Function<T,R> function)"
    parameters:
    - id: "function"
      type: "java.util.function.Function<T,R>"
    return:
      type: "R"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.util.FunctionUtil.<T,R>perform(java.util.function.Function<T,R>,T)"
  id: "<T,R>perform(java.util.function.Function<T,R>,T)"
  parent: "fr.axa.automation.webengine.util.FunctionUtil"
  langs:
  - "java"
  name: "<T,R>perform(Function<T,R> function, T param)"
  nameWithType: "FunctionUtil.<T,R>perform(Function<T,R> function, T param)"
  fullName: "fr.axa.automation.webengine.util.FunctionUtil.<T,R>perform(Function<T,R> function, T param)"
  overload: "fr.axa.automation.webengine.util.FunctionUtil.perform*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static R <T,R>perform(Function<T,R> function, T param)"
    parameters:
    - id: "function"
      type: "java.util.function.Function<T,R>"
    - id: "param"
      type: "T"
    return:
      type: "R"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.util.FunctionUtil.<T,R>retry(fr.axa.automation.webengine.api.IFunction<T,R>,T)"
  id: "<T,R>retry(fr.axa.automation.webengine.api.IFunction<T,R>,T)"
  parent: "fr.axa.automation.webengine.util.FunctionUtil"
  langs:
  - "java"
  name: "<T,R>retry(IFunction<T,R> function, T param)"
  nameWithType: "FunctionUtil.<T,R>retry(IFunction<T,R> function, T param)"
  fullName: "fr.axa.automation.webengine.util.FunctionUtil.<T,R>retry(IFunction<T,R> function, T param)"
  overload: "fr.axa.automation.webengine.util.FunctionUtil.retry*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static R <T,R>retry(IFunction<T,R> function, T param)"
    parameters:
    - id: "function"
      type: "fr.axa.automation.webengine.api.IFunction<T,R>"
    - id: "param"
      type: "T"
    return:
      type: "R"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.util.FunctionUtil.<T,R>retry(fr.axa.automation.webengine.api.IFunction<T,R>,T,java.lang.Integer)"
  id: "<T,R>retry(fr.axa.automation.webengine.api.IFunction<T,R>,T,java.lang.Integer)"
  parent: "fr.axa.automation.webengine.util.FunctionUtil"
  langs:
  - "java"
  name: "<T,R>retry(IFunction<T,R> function, T param, Integer timeOutInSeconds)"
  nameWithType: "FunctionUtil.<T,R>retry(IFunction<T,R> function, T param, Integer timeOutInSeconds)"
  fullName: "fr.axa.automation.webengine.util.FunctionUtil.<T,R>retry(IFunction<T,R> function, T param, Integer timeOutInSeconds)"
  overload: "fr.axa.automation.webengine.util.FunctionUtil.retry*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static R <T,R>retry(IFunction<T,R> function, T param, Integer timeOutInSeconds)"
    parameters:
    - id: "function"
      type: "fr.axa.automation.webengine.api.IFunction<T,R>"
    - id: "param"
      type: "T"
    - id: "timeOutInSeconds"
      type: "java.lang.Integer"
    return:
      type: "R"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.util.FunctionUtil.FunctionUtil()"
  id: "FunctionUtil()"
  parent: "fr.axa.automation.webengine.util.FunctionUtil"
  langs:
  - "java"
  name: "FunctionUtil()"
  nameWithType: "FunctionUtil.FunctionUtil()"
  fullName: "fr.axa.automation.webengine.util.FunctionUtil.FunctionUtil()"
  overload: "fr.axa.automation.webengine.util.FunctionUtil.FunctionUtil*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public FunctionUtil()"
references:
- uid: "fr.axa.automation.webengine.util.FunctionUtil.FunctionUtil*"
  name: "FunctionUtil"
  nameWithType: "FunctionUtil.FunctionUtil"
  fullName: "fr.axa.automation.webengine.util.FunctionUtil.FunctionUtil"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "java.util.function.Function<T,R>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ","
    fullName: ","
  - uid: "R"
    name: "R"
    fullName: "R"
  - name: ">"
    fullName: ">"
- uid: "R"
  spec.java:
  - uid: "R"
    name: "R"
    fullName: "R"
- uid: "fr.axa.automation.webengine.util.FunctionUtil.perform*"
  name: "<T,R>perform"
  nameWithType: "FunctionUtil.<T,R>perform"
  fullName: "fr.axa.automation.webengine.util.FunctionUtil.<T,R>perform"
  package: "fr.axa.automation.webengine.util"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "fr.axa.automation.webengine.api.IFunction<T,R>"
  spec.java:
  - uid: "fr.axa.automation.webengine.api.IFunction"
    name: "IFunction"
    fullName: "fr.axa.automation.webengine.api.IFunction"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ","
    fullName: ","
  - uid: "R"
    name: "R"
    fullName: "R"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.util.FunctionUtil.retry*"
  name: "<T,R>retry"
  nameWithType: "FunctionUtil.<T,R>retry"
  fullName: "fr.axa.automation.webengine.util.FunctionUtil.<T,R>retry"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "T,R"
  name: "T,R"
  nameWithType: "T,R"
  fullName: "T,R"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "fr.axa.automation.webengine.api.IFunction"
  name: "IFunction"
  nameWithType: "IFunction"
  fullName: "fr.axa.automation.webengine.api.IFunction"
