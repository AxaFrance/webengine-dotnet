### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.cmd.CommandFactory"
  id: "CommandFactory"
  parent: "fr.axa.automation.webengine.cmd"
  children:
  - "fr.axa.automation.webengine.cmd.CommandFactory.CommandFactory()"
  - "fr.axa.automation.webengine.cmd.CommandFactory.getCommand(fr.axa.automation.webengine.object.CommandDataNoCode)"
  langs:
  - "java"
  name: "CommandFactory"
  nameWithType: "CommandFactory"
  fullName: "fr.axa.automation.webengine.cmd.CommandFactory"
  type: "Class"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "public class CommandFactory"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.cmd.CommandFactory.CommandFactory()"
  id: "CommandFactory()"
  parent: "fr.axa.automation.webengine.cmd.CommandFactory"
  langs:
  - "java"
  name: "CommandFactory()"
  nameWithType: "CommandFactory.CommandFactory()"
  fullName: "fr.axa.automation.webengine.cmd.CommandFactory.CommandFactory()"
  overload: "fr.axa.automation.webengine.cmd.CommandFactory.CommandFactory*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "public CommandFactory()"
- uid: "fr.axa.automation.webengine.cmd.CommandFactory.getCommand(fr.axa.automation.webengine.object.CommandDataNoCode)"
  id: "getCommand(fr.axa.automation.webengine.object.CommandDataNoCode)"
  parent: "fr.axa.automation.webengine.cmd.CommandFactory"
  langs:
  - "java"
  name: "getCommand(CommandDataNoCode commandData)"
  nameWithType: "CommandFactory.getCommand(CommandDataNoCode commandData)"
  fullName: "fr.axa.automation.webengine.cmd.CommandFactory.getCommand(CommandDataNoCode commandData)"
  overload: "fr.axa.automation.webengine.cmd.CommandFactory.getCommand*"
  type: "Method"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "public static AbstractDriverCommand getCommand(CommandDataNoCode commandData)"
    parameters:
    - id: "commandData"
      type: "fr.axa.automation.webengine.object.CommandDataNoCode"
    return:
      type: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  exceptions:
  - type: "java.lang.IllegalArgumentException"
references:
- uid: "fr.axa.automation.webengine.cmd.CommandFactory.CommandFactory*"
  name: "CommandFactory"
  nameWithType: "CommandFactory.CommandFactory"
  fullName: "fr.axa.automation.webengine.cmd.CommandFactory.CommandFactory"
  package: "fr.axa.automation.webengine.cmd"
- uid: "java.lang.IllegalArgumentException"
  spec.java:
  - uid: "java.lang.IllegalArgumentException"
    name: "IllegalArgumentException"
    fullName: "java.lang.IllegalArgumentException"
- uid: "fr.axa.automation.webengine.object.CommandDataNoCode"
  name: "CommandDataNoCode"
  nameWithType: "CommandDataNoCode"
  fullName: "fr.axa.automation.webengine.object.CommandDataNoCode"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  name: "AbstractDriverCommand"
  nameWithType: "AbstractDriverCommand"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
- uid: "fr.axa.automation.webengine.cmd.CommandFactory.getCommand*"
  name: "getCommand"
  nameWithType: "CommandFactory.getCommand"
  fullName: "fr.axa.automation.webengine.cmd.CommandFactory.getCommand"
  package: "fr.axa.automation.webengine.cmd"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
