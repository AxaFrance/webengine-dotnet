### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.core.AbstractElement"
  id: "AbstractElement"
  parent: "fr.axa.automation.webengine.core"
  children:
  - "fr.axa.automation.webengine.core.AbstractElement.<T,R>retry(fr.axa.automation.webengine.api.IFunction<T,R>,T)"
  - "fr.axa.automation.webengine.core.AbstractElement.<T,R>retry(fr.axa.automation.webengine.api.IFunction<T,R>,T,java.lang.Integer)"
  - "fr.axa.automation.webengine.core.AbstractElement.AbstractElement()"
  - "fr.axa.automation.webengine.core.AbstractElement.AbstractElement(org.openqa.selenium.WebDriver)"
  - "fr.axa.automation.webengine.core.AbstractElement.getScreenshot()"
  - "fr.axa.automation.webengine.core.AbstractElement.internalGetScreenshot()"
  - "fr.axa.automation.webengine.core.AbstractElement.populateDriver(org.openqa.selenium.WebDriver)"
  - "fr.axa.automation.webengine.core.AbstractElement.useDriver"
  - "fr.axa.automation.webengine.core.AbstractElement.waitInMillisecondes(java.lang.Long)"
  langs:
  - "java"
  name: "AbstractElement"
  nameWithType: "AbstractElement"
  fullName: "fr.axa.automation.webengine.core.AbstractElement"
  type: "Class"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public abstract class AbstractElement"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.core.AbstractElement.<T,R>retry(fr.axa.automation.webengine.api.IFunction<T,R>,T)"
  id: "<T,R>retry(fr.axa.automation.webengine.api.IFunction<T,R>,T)"
  parent: "fr.axa.automation.webengine.core.AbstractElement"
  langs:
  - "java"
  name: "<T,R>retry(IFunction<T,R> function, T param)"
  nameWithType: "AbstractElement.<T,R>retry(IFunction<T,R> function, T param)"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.<T,R>retry(IFunction<T,R> function, T param)"
  overload: "fr.axa.automation.webengine.core.AbstractElement.retry*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected R <T,R>retry(IFunction<T,R> function, T param)"
    parameters:
    - id: "function"
      type: "fr.axa.automation.webengine.api.IFunction<T,R>"
    - id: "param"
      type: "T"
    return:
      type: "R"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.core.AbstractElement.<T,R>retry(fr.axa.automation.webengine.api.IFunction<T,R>,T,java.lang.Integer)"
  id: "<T,R>retry(fr.axa.automation.webengine.api.IFunction<T,R>,T,java.lang.Integer)"
  parent: "fr.axa.automation.webengine.core.AbstractElement"
  langs:
  - "java"
  name: "<T,R>retry(IFunction<T,R> function, T param, Integer timeout)"
  nameWithType: "AbstractElement.<T,R>retry(IFunction<T,R> function, T param, Integer timeout)"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.<T,R>retry(IFunction<T,R> function, T param, Integer timeout)"
  overload: "fr.axa.automation.webengine.core.AbstractElement.retry*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected R <T,R>retry(IFunction<T,R> function, T param, Integer timeout)"
    parameters:
    - id: "function"
      type: "fr.axa.automation.webengine.api.IFunction<T,R>"
    - id: "param"
      type: "T"
    - id: "timeout"
      type: "java.lang.Integer"
    return:
      type: "R"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.core.AbstractElement.AbstractElement()"
  id: "AbstractElement()"
  parent: "fr.axa.automation.webengine.core.AbstractElement"
  langs:
  - "java"
  name: "AbstractElement()"
  nameWithType: "AbstractElement.AbstractElement()"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.AbstractElement()"
  overload: "fr.axa.automation.webengine.core.AbstractElement.AbstractElement*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public AbstractElement()"
- uid: "fr.axa.automation.webengine.core.AbstractElement.AbstractElement(org.openqa.selenium.WebDriver)"
  id: "AbstractElement(org.openqa.selenium.WebDriver)"
  parent: "fr.axa.automation.webengine.core.AbstractElement"
  langs:
  - "java"
  name: "AbstractElement(WebDriver webDriver)"
  nameWithType: "AbstractElement.AbstractElement(WebDriver webDriver)"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.AbstractElement(WebDriver webDriver)"
  overload: "fr.axa.automation.webengine.core.AbstractElement.AbstractElement*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public AbstractElement(WebDriver webDriver)"
    parameters:
    - id: "webDriver"
      type: "org.openqa.selenium.WebDriver"
- uid: "fr.axa.automation.webengine.core.AbstractElement.getScreenshot()"
  id: "getScreenshot()"
  parent: "fr.axa.automation.webengine.core.AbstractElement"
  langs:
  - "java"
  name: "getScreenshot()"
  nameWithType: "AbstractElement.getScreenshot()"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.getScreenshot()"
  overload: "fr.axa.automation.webengine.core.AbstractElement.getScreenshot*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public byte[] getScreenshot()"
    return:
      type: "byte[]"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.core.AbstractElement.internalGetScreenshot()"
  id: "internalGetScreenshot()"
  parent: "fr.axa.automation.webengine.core.AbstractElement"
  langs:
  - "java"
  name: "internalGetScreenshot()"
  nameWithType: "AbstractElement.internalGetScreenshot()"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.internalGetScreenshot()"
  overload: "fr.axa.automation.webengine.core.AbstractElement.internalGetScreenshot*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected abstract Function<Void,byte[]> internalGetScreenshot()"
    return:
      type: "java.util.function.Function<java.lang.Void,byte[]>"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.core.AbstractElement.populateDriver(org.openqa.selenium.WebDriver)"
  id: "populateDriver(org.openqa.selenium.WebDriver)"
  parent: "fr.axa.automation.webengine.core.AbstractElement"
  langs:
  - "java"
  name: "populateDriver(WebDriver webDriver)"
  nameWithType: "AbstractElement.populateDriver(WebDriver webDriver)"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.populateDriver(WebDriver webDriver)"
  overload: "fr.axa.automation.webengine.core.AbstractElement.populateDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public AbstractElement populateDriver(WebDriver webDriver)"
    parameters:
    - id: "webDriver"
      type: "org.openqa.selenium.WebDriver"
    return:
      type: "fr.axa.automation.webengine.core.AbstractElement"
- uid: "fr.axa.automation.webengine.core.AbstractElement.useDriver"
  id: "useDriver"
  parent: "fr.axa.automation.webengine.core.AbstractElement"
  langs:
  - "java"
  name: "useDriver"
  nameWithType: "AbstractElement.useDriver"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.useDriver"
  type: "Field"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected WebDriver useDriver"
    return:
      type: "org.openqa.selenium.WebDriver"
- uid: "fr.axa.automation.webengine.core.AbstractElement.waitInMillisecondes(java.lang.Long)"
  id: "waitInMillisecondes(java.lang.Long)"
  parent: "fr.axa.automation.webengine.core.AbstractElement"
  langs:
  - "java"
  name: "waitInMillisecondes(Long milliseconds)"
  nameWithType: "AbstractElement.waitInMillisecondes(Long milliseconds)"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.waitInMillisecondes(Long milliseconds)"
  overload: "fr.axa.automation.webengine.core.AbstractElement.waitInMillisecondes*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public void waitInMillisecondes(Long milliseconds)"
    parameters:
    - id: "milliseconds"
      type: "java.lang.Long"
  exceptions:
  - type: "java.lang.InterruptedException"
references:
- uid: "fr.axa.automation.webengine.core.AbstractElement.AbstractElement*"
  name: "AbstractElement"
  nameWithType: "AbstractElement.AbstractElement"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.AbstractElement"
  package: "fr.axa.automation.webengine.core"
- uid: "org.openqa.selenium.WebDriver"
  spec.java:
  - uid: "org.openqa.selenium.WebDriver"
    name: "WebDriver"
    fullName: "org.openqa.selenium.WebDriver"
- uid: "fr.axa.automation.webengine.core.AbstractElement.populateDriver*"
  name: "populateDriver"
  nameWithType: "AbstractElement.populateDriver"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.populateDriver"
  package: "fr.axa.automation.webengine.core"
- uid: "java.lang.InterruptedException"
  spec.java:
  - uid: "java.lang.InterruptedException"
    name: "InterruptedException"
    fullName: "java.lang.InterruptedException"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "fr.axa.automation.webengine.core.AbstractElement.waitInMillisecondes*"
  name: "waitInMillisecondes"
  nameWithType: "AbstractElement.waitInMillisecondes"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.waitInMillisecondes"
  package: "fr.axa.automation.webengine.core"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "fr.axa.automation.webengine.core.AbstractElement.getScreenshot*"
  name: "getScreenshot"
  nameWithType: "AbstractElement.getScreenshot"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.getScreenshot"
  package: "fr.axa.automation.webengine.core"
- uid: "java.util.function.Function<java.lang.Void,byte[]>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ","
    fullName: ","
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.core.AbstractElement.internalGetScreenshot*"
  name: "internalGetScreenshot"
  nameWithType: "AbstractElement.internalGetScreenshot"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.internalGetScreenshot"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.api.IFunction<T,R>"
  spec.java:
  - uid: "fr.axa.automation.webengine.api.IFunction"
    name: "IFunction"
    fullName: "fr.axa.automation.webengine.api.IFunction"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ","
    fullName: ","
  - uid: "R"
    name: "R"
    fullName: "R"
  - name: ">"
    fullName: ">"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "R"
  spec.java:
  - uid: "R"
    name: "R"
    fullName: "R"
- uid: "fr.axa.automation.webengine.core.AbstractElement.retry*"
  name: "<T,R>retry"
  nameWithType: "AbstractElement.<T,R>retry"
  fullName: "fr.axa.automation.webengine.core.AbstractElement.<T,R>retry"
  package: "fr.axa.automation.webengine.core"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Void,byte[]"
  name: "Void,byte[]"
  nameWithType: "Void,byte[]"
  fullName: "java.lang.Void,byte[]"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "fr.axa.automation.webengine.api.IFunction"
  name: "IFunction"
  nameWithType: "IFunction"
  fullName: "fr.axa.automation.webengine.api.IFunction"
- uid: "T,R"
  name: "T,R"
  nameWithType: "T,R"
  fullName: "T,R"
