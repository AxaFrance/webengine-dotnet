### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.util.XmlUtil"
  id: "XmlUtil"
  parent: "fr.axa.automation.webengine.util"
  children:
  - "fr.axa.automation.webengine.util.XmlUtil.<T>unmarshall(java.lang.String,java.lang.Class<T>)"
  - "fr.axa.automation.webengine.util.XmlUtil.marshall(fr.axa.automation.webengine.dto.InputMarshallDTO)"
  langs:
  - "java"
  name: "XmlUtil"
  nameWithType: "XmlUtil"
  fullName: "fr.axa.automation.webengine.util.XmlUtil"
  type: "Class"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public final class XmlUtil"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.util.XmlUtil.<T>unmarshall(java.lang.String,java.lang.Class<T>)"
  id: "<T>unmarshall(java.lang.String,java.lang.Class<T>)"
  parent: "fr.axa.automation.webengine.util.XmlUtil"
  langs:
  - "java"
  name: "<T>unmarshall(String filePath, Class<T> returnType)"
  nameWithType: "XmlUtil.<T>unmarshall(String filePath, Class<T> returnType)"
  fullName: "fr.axa.automation.webengine.util.XmlUtil.<T>unmarshall(String filePath, Class<T> returnType)"
  overload: "fr.axa.automation.webengine.util.XmlUtil.unmarshall*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static T <T>unmarshall(String filePath, Class<T> returnType)"
    parameters:
    - id: "filePath"
      type: "java.lang.String"
    - id: "returnType"
      type: "java.lang.Class<T>"
    return:
      type: "T"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.XmlUtil.XmlUtil()"
  id: "XmlUtil()"
  parent: "fr.axa.automation.webengine.util.XmlUtil"
  langs:
  - "java"
  name: "XmlUtil()"
  nameWithType: "XmlUtil.XmlUtil()"
  fullName: "fr.axa.automation.webengine.util.XmlUtil.XmlUtil()"
  overload: "fr.axa.automation.webengine.util.XmlUtil.XmlUtil*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "private XmlUtil()"
- uid: "fr.axa.automation.webengine.util.XmlUtil.marshall(fr.axa.automation.webengine.dto.InputMarshallDTO)"
  id: "marshall(fr.axa.automation.webengine.dto.InputMarshallDTO)"
  parent: "fr.axa.automation.webengine.util.XmlUtil"
  langs:
  - "java"
  name: "marshall(InputMarshallDTO inputMarshallDTO)"
  nameWithType: "XmlUtil.marshall(InputMarshallDTO inputMarshallDTO)"
  fullName: "fr.axa.automation.webengine.util.XmlUtil.marshall(InputMarshallDTO inputMarshallDTO)"
  overload: "fr.axa.automation.webengine.util.XmlUtil.marshall*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static File marshall(InputMarshallDTO inputMarshallDTO)"
    parameters:
    - id: "inputMarshallDTO"
      type: "fr.axa.automation.webengine.dto.InputMarshallDTO"
    return:
      type: "java.io.File"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
references:
- uid: "fr.axa.automation.webengine.util.XmlUtil.XmlUtil*"
  name: "XmlUtil"
  nameWithType: "XmlUtil.XmlUtil"
  fullName: "fr.axa.automation.webengine.util.XmlUtil.XmlUtil"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.exception.WebEngineException"
  name: "WebEngineException"
  nameWithType: "WebEngineException"
  fullName: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "fr.axa.automation.webengine.util.XmlUtil.unmarshall*"
  name: "<T>unmarshall"
  nameWithType: "XmlUtil.<T>unmarshall"
  fullName: "fr.axa.automation.webengine.util.XmlUtil.<T>unmarshall"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.dto.InputMarshallDTO"
  name: "InputMarshallDTO"
  nameWithType: "InputMarshallDTO"
  fullName: "fr.axa.automation.webengine.dto.InputMarshallDTO"
- uid: "java.io.File"
  spec.java:
  - uid: "java.io.File"
    name: "File"
    fullName: "java.io.File"
- uid: "fr.axa.automation.webengine.util.XmlUtil.marshall*"
  name: "marshall"
  nameWithType: "XmlUtil.marshall"
  fullName: "fr.axa.automation.webengine.util.XmlUtil.marshall"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
