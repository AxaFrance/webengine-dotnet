### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.util.CommonClassUtil"
  id: "CommonClassUtil"
  parent: "fr.axa.automation.webengine.util"
  children:
  - "fr.axa.automation.webengine.util.CommonClassUtil.<T>create(java.lang.Class<T>)"
  - "fr.axa.automation.webengine.util.CommonClassUtil.<T>create(java.lang.Class<T>,java.lang.Object[],java.lang.Class[])"
  - "fr.axa.automation.webengine.util.CommonClassUtil.<T>createAndCallMethod(java.lang.Class,java.lang.String,java.lang.Object...)"
  - "fr.axa.automation.webengine.util.CommonClassUtil.<T>findAllClass(java.lang.Class<T>)"
  langs:
  - "java"
  name: "CommonClassUtil"
  nameWithType: "CommonClassUtil"
  fullName: "fr.axa.automation.webengine.util.CommonClassUtil"
  type: "Class"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public final class CommonClassUtil"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.util.CommonClassUtil.<T>create(java.lang.Class<T>)"
  id: "<T>create(java.lang.Class<T>)"
  parent: "fr.axa.automation.webengine.util.CommonClassUtil"
  langs:
  - "java"
  name: "<T>create(Class<T> clazz)"
  nameWithType: "CommonClassUtil.<T>create(Class<T> clazz)"
  fullName: "fr.axa.automation.webengine.util.CommonClassUtil.<T>create(Class<T> clazz)"
  overload: "fr.axa.automation.webengine.util.CommonClassUtil.create*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static T <T>create(Class<T> clazz)"
    parameters:
    - id: "clazz"
      type: "java.lang.Class<T>"
    return:
      type: "T"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.CommonClassUtil.<T>create(java.lang.Class<T>,java.lang.Object[],java.lang.Class[])"
  id: "<T>create(java.lang.Class<T>,java.lang.Object[],java.lang.Class[])"
  parent: "fr.axa.automation.webengine.util.CommonClassUtil"
  langs:
  - "java"
  name: "<T>create(Class<T> clazz, Object[] object, Class[] constructor1)"
  nameWithType: "CommonClassUtil.<T>create(Class<T> clazz, Object[] object, Class[] constructor1)"
  fullName: "fr.axa.automation.webengine.util.CommonClassUtil.<T>create(Class<T> clazz, Object[] object, Class[] constructor1)"
  overload: "fr.axa.automation.webengine.util.CommonClassUtil.create*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static T <T>create(Class<T> clazz, Object[] object, Class[] constructor1)"
    parameters:
    - id: "clazz"
      type: "java.lang.Class<T>"
    - id: "object"
      type: "java.lang.Object[]"
    - id: "constructor1"
      type: "java.lang.Class[]"
    return:
      type: "T"
  exceptions:
  - type: "java.lang.ClassNotFoundException"
  - type: "java.lang.NoSuchMethodException"
  - type: "java.lang.IllegalAccessException"
  - type: "java.lang.reflect.InvocationTargetException"
  - type: "java.lang.InstantiationException"
- uid: "fr.axa.automation.webengine.util.CommonClassUtil.<T>createAndCallMethod(java.lang.Class,java.lang.String,java.lang.Object...)"
  id: "<T>createAndCallMethod(java.lang.Class,java.lang.String,java.lang.Object...)"
  parent: "fr.axa.automation.webengine.util.CommonClassUtil"
  langs:
  - "java"
  name: "<T>createAndCallMethod(Class clazz, String methodName, Object[] parameters)"
  nameWithType: "CommonClassUtil.<T>createAndCallMethod(Class clazz, String methodName, Object[] parameters)"
  fullName: "fr.axa.automation.webengine.util.CommonClassUtil.<T>createAndCallMethod(Class clazz, String methodName, Object[] parameters)"
  overload: "fr.axa.automation.webengine.util.CommonClassUtil.createAndCallMethod*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static T <T>createAndCallMethod(Class clazz, String methodName, Object[] parameters)"
    parameters:
    - id: "clazz"
      type: "java.lang.Class"
    - id: "methodName"
      type: "java.lang.String"
    - id: "parameters"
      type: "java.lang.Object[]"
    return:
      type: "T"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.CommonClassUtil.<T>findAllClass(java.lang.Class<T>)"
  id: "<T>findAllClass(java.lang.Class<T>)"
  parent: "fr.axa.automation.webengine.util.CommonClassUtil"
  langs:
  - "java"
  name: "<T>findAllClass(Class<T> clazz)"
  nameWithType: "CommonClassUtil.<T>findAllClass(Class<T> clazz)"
  fullName: "fr.axa.automation.webengine.util.CommonClassUtil.<T>findAllClass(Class<T> clazz)"
  overload: "fr.axa.automation.webengine.util.CommonClassUtil.findAllClass*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Set<Class<? extends T>> <T>findAllClass(Class<T> clazz)"
    parameters:
    - id: "clazz"
      type: "java.lang.Class<T>"
    return:
      type: "java.util.Set<java.lang.Class<? extends T>>"
- uid: "fr.axa.automation.webengine.util.CommonClassUtil.CommonClassUtil()"
  id: "CommonClassUtil()"
  parent: "fr.axa.automation.webengine.util.CommonClassUtil"
  langs:
  - "java"
  name: "CommonClassUtil()"
  nameWithType: "CommonClassUtil.CommonClassUtil()"
  fullName: "fr.axa.automation.webengine.util.CommonClassUtil.CommonClassUtil()"
  overload: "fr.axa.automation.webengine.util.CommonClassUtil.CommonClassUtil*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "private CommonClassUtil()"
references:
- uid: "fr.axa.automation.webengine.util.CommonClassUtil.CommonClassUtil*"
  name: "CommonClassUtil"
  nameWithType: "CommonClassUtil.CommonClassUtil"
  fullName: "fr.axa.automation.webengine.util.CommonClassUtil.CommonClassUtil"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.exception.WebEngineException"
  name: "WebEngineException"
  nameWithType: "WebEngineException"
  fullName: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "fr.axa.automation.webengine.util.CommonClassUtil.create*"
  name: "<T>create"
  nameWithType: "CommonClassUtil.<T>create"
  fullName: "fr.axa.automation.webengine.util.CommonClassUtil.<T>create"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.ClassNotFoundException"
  spec.java:
  - uid: "java.lang.ClassNotFoundException"
    name: "ClassNotFoundException"
    fullName: "java.lang.ClassNotFoundException"
- uid: "java.lang.NoSuchMethodException"
  spec.java:
  - uid: "java.lang.NoSuchMethodException"
    name: "NoSuchMethodException"
    fullName: "java.lang.NoSuchMethodException"
- uid: "java.lang.IllegalAccessException"
  spec.java:
  - uid: "java.lang.IllegalAccessException"
    name: "IllegalAccessException"
    fullName: "java.lang.IllegalAccessException"
- uid: "java.lang.reflect.InvocationTargetException"
  spec.java:
  - uid: "java.lang.reflect.InvocationTargetException"
    name: "InvocationTargetException"
    fullName: "java.lang.reflect.InvocationTargetException"
- uid: "java.lang.InstantiationException"
  spec.java:
  - uid: "java.lang.InstantiationException"
    name: "InstantiationException"
    fullName: "java.lang.InstantiationException"
- uid: "java.lang.Object[]"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: "[]"
    fullName: "[]"
- uid: "java.lang.Class[]"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "[]"
    fullName: "[]"
- uid: "java.lang.Class"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.util.CommonClassUtil.createAndCallMethod*"
  name: "<T>createAndCallMethod"
  nameWithType: "CommonClassUtil.<T>createAndCallMethod"
  fullName: "fr.axa.automation.webengine.util.CommonClassUtil.<T>createAndCallMethod"
  package: "fr.axa.automation.webengine.util"
- uid: "java.util.Set<java.lang.Class<? extends T>>"
  spec.java:
  - uid: "java.util.Set"
    name: "Set"
    fullName: "java.util.Set"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "? extends T"
    name: "? extends T"
    fullName: "? extends T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.util.CommonClassUtil.findAllClass*"
  name: "<T>findAllClass"
  nameWithType: "CommonClassUtil.<T>findAllClass"
  fullName: "fr.axa.automation.webengine.util.CommonClassUtil.<T>findAllClass"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "? extends T"
  name: "? extends T"
  nameWithType: "? extends T"
  fullName: "? extends T"
- uid: "java.util.Set"
  name: "Set"
  nameWithType: "Set"
  fullName: "java.util.Set"
