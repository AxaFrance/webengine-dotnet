### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  id: "AbstractActionWebBase"
  parent: "fr.axa.automation.webengine.core"
  children:
  - "fr.axa.automation.webengine.core.AbstractActionWebBase.AbstractActionWebBase()"
  - "fr.axa.automation.webengine.core.AbstractActionWebBase.AbstractActionWebBase(fr.axa.automation.webengine.global.ActionContext)"
  - "fr.axa.automation.webengine.core.AbstractActionWebBase.addInformation(java.lang.String)"
  - "fr.axa.automation.webengine.core.AbstractActionWebBase.getEnvironnementValue(java.lang.String)"
  - "fr.axa.automation.webengine.core.AbstractActionWebBase.getEnvironnementValueWithException(java.lang.String)"
  - "fr.axa.automation.webengine.core.AbstractActionWebBase.getParameter(java.lang.String)"
  - "fr.axa.automation.webengine.core.AbstractActionWebBase.getParameterWithException(java.lang.String)"
  - "fr.axa.automation.webengine.core.AbstractActionWebBase.getWebDriver()"
  - "fr.axa.automation.webengine.core.AbstractActionWebBase.runAction()"
  - "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot()"
  - "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot(fr.axa.automation.webengine.core.AbstractWebElement)"
  - "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot(java.lang.String)"
  langs:
  - "java"
  name: "AbstractActionWebBase"
  nameWithType: "AbstractActionWebBase"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  type: "Class"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public abstract class AbstractActionWebBase extends AbstractActionBase"
  inheritance:
  - "java.lang.Object"
  - "fr.axa.automation.webengine.core.AbstractActionBase"
  inheritedMembers:
  - "fr.axa.automation.webengine.core.AbstractActionBase.getContexteValue(java.lang.String)"
  - "fr.axa.automation.webengine.core.AbstractActionBase.isResultFailedOrCriticalError()"
  - "fr.axa.automation.webengine.core.AbstractActionBase.runAction()"
  - "fr.axa.automation.webengine.core.AbstractActionBase.runCheckpoint()"
  - "fr.axa.automation.webengine.core.AbstractActionBase.setContextValue(fr.axa.automation.webengine.generated.Variable)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.AbstractActionWebBase()"
  id: "AbstractActionWebBase()"
  parent: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  langs:
  - "java"
  name: "AbstractActionWebBase()"
  nameWithType: "AbstractActionWebBase.AbstractActionWebBase()"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.AbstractActionWebBase()"
  overload: "fr.axa.automation.webengine.core.AbstractActionWebBase.AbstractActionWebBase*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected AbstractActionWebBase()"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.AbstractActionWebBase(fr.axa.automation.webengine.global.ActionContext)"
  id: "AbstractActionWebBase(fr.axa.automation.webengine.global.ActionContext)"
  parent: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  langs:
  - "java"
  name: "AbstractActionWebBase(ActionContext actionDetailContext)"
  nameWithType: "AbstractActionWebBase.AbstractActionWebBase(ActionContext actionDetailContext)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.AbstractActionWebBase(ActionContext actionDetailContext)"
  overload: "fr.axa.automation.webengine.core.AbstractActionWebBase.AbstractActionWebBase*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected AbstractActionWebBase(ActionContext actionDetailContext)"
    parameters:
    - id: "actionDetailContext"
      type: "fr.axa.automation.webengine.global.ActionContext"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.addInformation(java.lang.String)"
  id: "addInformation(java.lang.String)"
  parent: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  langs:
  - "java"
  name: "addInformation(String information)"
  nameWithType: "AbstractActionWebBase.addInformation(String information)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.addInformation(String information)"
  overload: "fr.axa.automation.webengine.core.AbstractActionWebBase.addInformation*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected void addInformation(String information)"
    parameters:
    - id: "information"
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.getEnvironnementValue(java.lang.String)"
  id: "getEnvironnementValue(java.lang.String)"
  parent: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  langs:
  - "java"
  name: "getEnvironnementValue(String name)"
  nameWithType: "AbstractActionWebBase.getEnvironnementValue(String name)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.getEnvironnementValue(String name)"
  overload: "fr.axa.automation.webengine.core.AbstractActionWebBase.getEnvironnementValue*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected Optional<String> getEnvironnementValue(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "java.util.Optional<java.lang.String>"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.getEnvironnementValueWithException(java.lang.String)"
  id: "getEnvironnementValueWithException(java.lang.String)"
  parent: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  langs:
  - "java"
  name: "getEnvironnementValueWithException(String name)"
  nameWithType: "AbstractActionWebBase.getEnvironnementValueWithException(String name)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.getEnvironnementValueWithException(String name)"
  overload: "fr.axa.automation.webengine.core.AbstractActionWebBase.getEnvironnementValueWithException*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected String getEnvironnementValueWithException(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.getParameter(java.lang.String)"
  id: "getParameter(java.lang.String)"
  parent: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  langs:
  - "java"
  name: "getParameter(String name)"
  nameWithType: "AbstractActionWebBase.getParameter(String name)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.getParameter(String name)"
  overload: "fr.axa.automation.webengine.core.AbstractActionWebBase.getParameter*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected Optional<String> getParameter(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "java.util.Optional<java.lang.String>"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.getParameterWithException(java.lang.String)"
  id: "getParameterWithException(java.lang.String)"
  parent: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  langs:
  - "java"
  name: "getParameterWithException(String name)"
  nameWithType: "AbstractActionWebBase.getParameterWithException(String name)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.getParameterWithException(String name)"
  overload: "fr.axa.automation.webengine.core.AbstractActionWebBase.getParameterWithException*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected String getParameterWithException(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.getWebDriver()"
  id: "getWebDriver()"
  parent: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  langs:
  - "java"
  name: "getWebDriver()"
  nameWithType: "AbstractActionWebBase.getWebDriver()"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.getWebDriver()"
  overload: "fr.axa.automation.webengine.core.AbstractActionWebBase.getWebDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected WebDriver getWebDriver()"
    return:
      type: "org.openqa.selenium.WebDriver"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.runAction()"
  id: "runAction()"
  parent: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  langs:
  - "java"
  name: "runAction()"
  nameWithType: "AbstractActionWebBase.runAction()"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.runAction()"
  overload: "fr.axa.automation.webengine.core.AbstractActionWebBase.runAction*"
  overridden: "fr.axa.automation.webengine.core.AbstractActionBase.runAction()"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public ActionReport runAction()"
    return:
      type: "fr.axa.automation.webengine.generated.ActionReport"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot()"
  id: "screenShot()"
  parent: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  langs:
  - "java"
  name: "screenShot()"
  nameWithType: "AbstractActionWebBase.screenShot()"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot()"
  overload: "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public void screenShot()"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot(fr.axa.automation.webengine.core.AbstractWebElement)"
  id: "screenShot(fr.axa.automation.webengine.core.AbstractWebElement)"
  parent: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  langs:
  - "java"
  name: "screenShot(AbstractWebElement elementDescription)"
  nameWithType: "AbstractActionWebBase.screenShot(AbstractWebElement elementDescription)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot(AbstractWebElement elementDescription)"
  overload: "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public void screenShot(AbstractWebElement elementDescription)"
    parameters:
    - id: "elementDescription"
      type: "fr.axa.automation.webengine.core.AbstractWebElement"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot(java.lang.String)"
  id: "screenShot(java.lang.String)"
  parent: "fr.axa.automation.webengine.core.AbstractActionWebBase"
  langs:
  - "java"
  name: "screenShot(String name)"
  nameWithType: "AbstractActionWebBase.screenShot(String name)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot(String name)"
  overload: "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public void screenShot(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
references:
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.AbstractActionWebBase*"
  name: "AbstractActionWebBase"
  nameWithType: "AbstractActionWebBase.AbstractActionWebBase"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.AbstractActionWebBase"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.global.ActionContext"
  name: "ActionContext"
  nameWithType: "ActionContext"
  fullName: "fr.axa.automation.webengine.global.ActionContext"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.generated.ActionReport"
  name: "ActionReport"
  nameWithType: "ActionReport"
  fullName: "fr.axa.automation.webengine.generated.ActionReport"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.runAction*"
  name: "runAction"
  nameWithType: "AbstractActionWebBase.runAction"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.runAction"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.exception.WebEngineException"
  name: "WebEngineException"
  nameWithType: "WebEngineException"
  fullName: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot*"
  name: "screenShot"
  nameWithType: "AbstractActionWebBase.screenShot"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.screenShot"
  package: "fr.axa.automation.webengine.core"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.core.AbstractWebElement"
  name: "AbstractWebElement"
  nameWithType: "AbstractWebElement"
  fullName: "fr.axa.automation.webengine.core.AbstractWebElement"
- uid: "java.util.Optional<java.lang.String>"
  spec.java:
  - uid: "java.util.Optional"
    name: "Optional"
    fullName: "java.util.Optional"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.getEnvironnementValue*"
  name: "getEnvironnementValue"
  nameWithType: "AbstractActionWebBase.getEnvironnementValue"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.getEnvironnementValue"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.getParameter*"
  name: "getParameter"
  nameWithType: "AbstractActionWebBase.getParameter"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.getParameter"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.getEnvironnementValueWithException*"
  name: "getEnvironnementValueWithException"
  nameWithType: "AbstractActionWebBase.getEnvironnementValueWithException"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.getEnvironnementValueWithException"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.getParameterWithException*"
  name: "getParameterWithException"
  nameWithType: "AbstractActionWebBase.getParameterWithException"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.getParameterWithException"
  package: "fr.axa.automation.webengine.core"
- uid: "org.openqa.selenium.WebDriver"
  spec.java:
  - uid: "org.openqa.selenium.WebDriver"
    name: "WebDriver"
    fullName: "org.openqa.selenium.WebDriver"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.getWebDriver*"
  name: "getWebDriver"
  nameWithType: "AbstractActionWebBase.getWebDriver"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.getWebDriver"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.AbstractActionWebBase.addInformation*"
  name: "addInformation"
  nameWithType: "AbstractActionWebBase.addInformation"
  fullName: "fr.axa.automation.webengine.core.AbstractActionWebBase.addInformation"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase"
  name: "AbstractActionBase"
  nameWithType: "AbstractActionBase"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.runAction()"
  name: "AbstractActionBase.runAction()"
  nameWithType: "AbstractActionBase.runAction()"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.runAction()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.isResultFailedOrCriticalError()"
  name: "AbstractActionBase.isResultFailedOrCriticalError()"
  nameWithType: "AbstractActionBase.isResultFailedOrCriticalError()"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.isResultFailedOrCriticalError()"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.runCheckpoint()"
  name: "AbstractActionBase.runCheckpoint()"
  nameWithType: "AbstractActionBase.runCheckpoint()"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.runCheckpoint()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.getContexteValue(java.lang.String)"
  name: "AbstractActionBase.getContexteValue(String)"
  nameWithType: "AbstractActionBase.getContexteValue(String)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.getContexteValue(java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.setContextValue(fr.axa.automation.webengine.generated.Variable)"
  name: "AbstractActionBase.setContextValue(Variable)"
  nameWithType: "AbstractActionBase.setContextValue(Variable)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.setContextValue(fr.axa.automation.webengine.generated.Variable)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.util.Optional"
  name: "Optional"
  nameWithType: "Optional"
  fullName: "java.util.Optional"
