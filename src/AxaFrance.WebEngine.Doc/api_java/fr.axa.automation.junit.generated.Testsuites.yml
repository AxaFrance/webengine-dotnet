### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.junit.generated.Testsuites"
  id: "Testsuites"
  parent: "fr.axa.automation.junit.generated"
  children:
  - "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  - "fr.axa.automation.junit.generated.Testsuites.Testsuites()"
  - "fr.axa.automation.junit.generated.Testsuites.getTestsuites()"
  - "fr.axa.automation.junit.generated.Testsuites.testsuites"
  langs:
  - "java"
  name: "Testsuites"
  nameWithType: "Testsuites"
  fullName: "fr.axa.automation.junit.generated.Testsuites"
  type: "Class"
  package: "fr.axa.automation.junit.generated"
  summary: "Java class for anonymous complex type.\n\nThe following schema fragment specifies the expected content contained within this class.\n\n```java\n<complexType>\n   <complexContent>\n     <restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">\n       <sequence>\n         <element name=\"testsuite\" maxOccurs=\"unbounded\" minOccurs=\"0\">\n           <complexType>\n             <complexContent>\n               <extension base=\"{}testsuite\">\n                 <attribute name=\"package\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}token\" />\n                 <attribute name=\"id\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}int\" />\n               </extension>\n             </complexContent>\n           </complexType>\n         </element>\n       </sequence>\n     </restriction>\n   </complexContent>\n </complexType>\n```"
  syntax:
    content: "public class Testsuites"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuites()"
  id: "Testsuites()"
  parent: "fr.axa.automation.junit.generated.Testsuites"
  langs:
  - "java"
  name: "Testsuites()"
  nameWithType: "Testsuites.Testsuites()"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuites()"
  overload: "fr.axa.automation.junit.generated.Testsuites.Testsuites*"
  type: "Constructor"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "public Testsuites()"
- uid: "fr.axa.automation.junit.generated.Testsuites.getTestsuites()"
  id: "getTestsuites()"
  parent: "fr.axa.automation.junit.generated.Testsuites"
  langs:
  - "java"
  name: "getTestsuites()"
  nameWithType: "Testsuites.getTestsuites()"
  fullName: "fr.axa.automation.junit.generated.Testsuites.getTestsuites()"
  overload: "fr.axa.automation.junit.generated.Testsuites.getTestsuites*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the testsuites property.\n\nThis accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a `set` method for the testsuites property.\n\nFor example, to add a new item, do as follows:\n\n```java\ngetTestsuites().add(newItem);\n```\n\nObjects of the following type(s) are allowed in the list <xref uid=\"fr.axa.automation.junit.generated.Testsuites.Testsuite\" data-throw-if-not-resolved=\"false\">Testsuites.Testsuite</xref>"
  syntax:
    content: "public List<Testsuites.Testsuite> getTestsuites()"
    return:
      type: "java.util.List<fr.axa.automation.junit.generated.Testsuites.Testsuite>"
- uid: "fr.axa.automation.junit.generated.Testsuites.testsuites"
  id: "testsuites"
  parent: "fr.axa.automation.junit.generated.Testsuites"
  langs:
  - "java"
  name: "testsuites"
  nameWithType: "Testsuites.testsuites"
  fullName: "fr.axa.automation.junit.generated.Testsuites.testsuites"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected List<Testsuites.Testsuite> testsuites"
    return:
      type: "java.util.List<fr.axa.automation.junit.generated.Testsuites.Testsuite>"
references:
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuites*"
  name: "Testsuites"
  nameWithType: "Testsuites.Testsuites"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuites"
  package: "fr.axa.automation.junit.generated"
- uid: "java.util.List<fr.axa.automation.junit.generated.Testsuites.Testsuite>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
    name: "Testsuite"
    fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.junit.generated.Testsuites.getTestsuites*"
  name: "getTestsuites"
  nameWithType: "Testsuites.getTestsuites"
  fullName: "fr.axa.automation.junit.generated.Testsuites.getTestsuites"
  package: "fr.axa.automation.junit.generated"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  name: "Testsuites.Testsuite"
  nameWithType: "Testsuites.Testsuite"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
