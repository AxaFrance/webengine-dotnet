### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.junit.generated.Testsuite"
  id: "Testsuite"
  parent: "fr.axa.automation.junit.generated"
  children:
  - "fr.axa.automation.junit.generated.Testsuite.Properties"
  - "fr.axa.automation.junit.generated.Testsuite.Testcase"
  - "fr.axa.automation.junit.generated.Testsuite.Testsuite()"
  - "fr.axa.automation.junit.generated.Testsuite.errors"
  - "fr.axa.automation.junit.generated.Testsuite.failures"
  - "fr.axa.automation.junit.generated.Testsuite.getErrors()"
  - "fr.axa.automation.junit.generated.Testsuite.getFailures()"
  - "fr.axa.automation.junit.generated.Testsuite.getHostname()"
  - "fr.axa.automation.junit.generated.Testsuite.getName()"
  - "fr.axa.automation.junit.generated.Testsuite.getProperties()"
  - "fr.axa.automation.junit.generated.Testsuite.getSkipped()"
  - "fr.axa.automation.junit.generated.Testsuite.getSystemErr()"
  - "fr.axa.automation.junit.generated.Testsuite.getSystemOut()"
  - "fr.axa.automation.junit.generated.Testsuite.getTestcases()"
  - "fr.axa.automation.junit.generated.Testsuite.getTests()"
  - "fr.axa.automation.junit.generated.Testsuite.getTime()"
  - "fr.axa.automation.junit.generated.Testsuite.getTimestamp()"
  - "fr.axa.automation.junit.generated.Testsuite.hostname"
  - "fr.axa.automation.junit.generated.Testsuite.name"
  - "fr.axa.automation.junit.generated.Testsuite.properties"
  - "fr.axa.automation.junit.generated.Testsuite.setErrors(int)"
  - "fr.axa.automation.junit.generated.Testsuite.setFailures(int)"
  - "fr.axa.automation.junit.generated.Testsuite.setHostname(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.setName(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.setProperties(fr.axa.automation.junit.generated.Testsuite.Properties)"
  - "fr.axa.automation.junit.generated.Testsuite.setSkipped(java.lang.Integer)"
  - "fr.axa.automation.junit.generated.Testsuite.setSystemErr(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.setSystemOut(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.setTests(int)"
  - "fr.axa.automation.junit.generated.Testsuite.setTime(java.math.BigDecimal)"
  - "fr.axa.automation.junit.generated.Testsuite.setTimestamp(java.util.Calendar)"
  - "fr.axa.automation.junit.generated.Testsuite.skipped"
  - "fr.axa.automation.junit.generated.Testsuite.systemErr"
  - "fr.axa.automation.junit.generated.Testsuite.systemOut"
  - "fr.axa.automation.junit.generated.Testsuite.testcases"
  - "fr.axa.automation.junit.generated.Testsuite.tests"
  - "fr.axa.automation.junit.generated.Testsuite.time"
  - "fr.axa.automation.junit.generated.Testsuite.timestamp"
  langs:
  - "java"
  name: "Testsuite"
  nameWithType: "Testsuite"
  fullName: "fr.axa.automation.junit.generated.Testsuite"
  type: "Class"
  package: "fr.axa.automation.junit.generated"
  summary: "Contains the results of executing a testsuite\n\nJava class for testsuite complex type.\n\nThe following schema fragment specifies the expected content contained within this class.\n\n```java\n<complexType name=\"testsuite\">\n   <complexContent>\n     <restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">\n       <sequence>\n         <element name=\"properties\">\n           <complexType>\n             <complexContent>\n               <restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">\n                 <sequence>\n                   <element name=\"property\" maxOccurs=\"unbounded\" minOccurs=\"0\">\n                     <complexType>\n                       <complexContent>\n                         <restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">\n                           <attribute name=\"name\" use=\"required\">\n                             <simpleType>\n                               <restriction base=\"{http://www.w3.org/2001/XMLSchema}token\">\n                                 <minLength value=\"1\"/>\n                               </restriction>\n                             </simpleType>\n                           </attribute>\n                           <attribute name=\"value\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n                         </restriction>\n                       </complexContent>\n                     </complexType>\n                   </element>\n                 </sequence>\n               </restriction>\n             </complexContent>\n           </complexType>\n         </element>\n         <element name=\"testcase\" maxOccurs=\"unbounded\" minOccurs=\"0\">\n           <complexType>\n             <complexContent>\n               <restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">\n                 <choice minOccurs=\"0\">\n                   <element name=\"skipped\" minOccurs=\"0\">\n                     <complexType>\n                       <simpleContent>\n                         <extension base=\"<>pre-string\">\n                           <attribute name=\"message\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n                         </extension>\n                       </simpleContent>\n                     </complexType>\n                   </element>\n                   <element name=\"error\" minOccurs=\"0\">\n                     <complexType>\n                       <simpleContent>\n                         <extension base=\"<>pre-string\">\n                           <attribute name=\"message\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n                           <attribute name=\"type\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n                         </extension>\n                       </simpleContent>\n                     </complexType>\n                   </element>\n                   <element name=\"failure\">\n                     <complexType>\n                       <simpleContent>\n                         <extension base=\"<>pre-string\">\n                           <attribute name=\"message\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n                           <attribute name=\"type\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n                         </extension>\n                       </simpleContent>\n                     </complexType>\n                   </element>\n                 </choice>\n                 <attribute name=\"name\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}token\" />\n                 <attribute name=\"classname\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}token\" />\n                 <attribute name=\"time\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}decimal\" />\n               </restriction>\n             </complexContent>\n           </complexType>\n         </element>\n         <element name=\"system-out\">\n           <simpleType>\n             <restriction base=\"{}pre-string\">\n               <whiteSpace value=\"preserve\"/>\n             </restriction>\n           </simpleType>\n         </element>\n         <element name=\"system-err\">\n           <simpleType>\n             <restriction base=\"{}pre-string\">\n               <whiteSpace value=\"preserve\"/>\n             </restriction>\n           </simpleType>\n         </element>\n       </sequence>\n       <attribute name=\"name\" use=\"required\">\n         <simpleType>\n           <restriction base=\"{http://www.w3.org/2001/XMLSchema}token\">\n             <minLength value=\"1\"/>\n           </restriction>\n         </simpleType>\n       </attribute>\n       <attribute name=\"timestamp\" use=\"required\" type=\"{}ISO8601_DATETIME_PATTERN\" />\n       <attribute name=\"hostname\" use=\"required\">\n         <simpleType>\n           <restriction base=\"{http://www.w3.org/2001/XMLSchema}token\">\n             <minLength value=\"1\"/>\n           </restriction>\n         </simpleType>\n       </attribute>\n       <attribute name=\"tests\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}int\" />\n       <attribute name=\"failures\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}int\" />\n       <attribute name=\"errors\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}int\" />\n       <attribute name=\"skipped\" type=\"{http://www.w3.org/2001/XMLSchema}int\" />\n       <attribute name=\"time\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}decimal\" />\n     </restriction>\n   </complexContent>\n </complexType>\n```"
  syntax:
    content: "public class Testsuite"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testsuite()"
  id: "Testsuite()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "Testsuite()"
  nameWithType: "Testsuite.Testsuite()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testsuite()"
  overload: "fr.axa.automation.junit.generated.Testsuite.Testsuite*"
  type: "Constructor"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "public Testsuite()"
- uid: "fr.axa.automation.junit.generated.Testsuite.errors"
  id: "errors"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "errors"
  nameWithType: "Testsuite.errors"
  fullName: "fr.axa.automation.junit.generated.Testsuite.errors"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected int errors"
    return:
      type: "int"
- uid: "fr.axa.automation.junit.generated.Testsuite.failures"
  id: "failures"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "failures"
  nameWithType: "Testsuite.failures"
  fullName: "fr.axa.automation.junit.generated.Testsuite.failures"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected int failures"
    return:
      type: "int"
- uid: "fr.axa.automation.junit.generated.Testsuite.getErrors()"
  id: "getErrors()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "getErrors()"
  nameWithType: "Testsuite.getErrors()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getErrors()"
  overload: "fr.axa.automation.junit.generated.Testsuite.getErrors*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the errors property."
  syntax:
    content: "public int getErrors()"
    return:
      type: "int"
- uid: "fr.axa.automation.junit.generated.Testsuite.getFailures()"
  id: "getFailures()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "getFailures()"
  nameWithType: "Testsuite.getFailures()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getFailures()"
  overload: "fr.axa.automation.junit.generated.Testsuite.getFailures*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the failures property."
  syntax:
    content: "public int getFailures()"
    return:
      type: "int"
- uid: "fr.axa.automation.junit.generated.Testsuite.getHostname()"
  id: "getHostname()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "getHostname()"
  nameWithType: "Testsuite.getHostname()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getHostname()"
  overload: "fr.axa.automation.junit.generated.Testsuite.getHostname*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the hostname property."
  syntax:
    content: "public String getHostname()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.getName()"
  id: "getName()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "Testsuite.getName()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getName()"
  overload: "fr.axa.automation.junit.generated.Testsuite.getName*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the name property."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.getProperties()"
  id: "getProperties()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "Testsuite.getProperties()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getProperties()"
  overload: "fr.axa.automation.junit.generated.Testsuite.getProperties*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the properties property."
  syntax:
    content: "public Testsuite.Properties getProperties()"
    return:
      type: "fr.axa.automation.junit.generated.Testsuite.Properties"
      description: "possible object is\n     <xref uid=\"fr.axa.automation.junit.generated.Testsuite.Properties\" data-throw-if-not-resolved=\"false\">Testsuite.Properties</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.getSkipped()"
  id: "getSkipped()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "getSkipped()"
  nameWithType: "Testsuite.getSkipped()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getSkipped()"
  overload: "fr.axa.automation.junit.generated.Testsuite.getSkipped*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the skipped property."
  syntax:
    content: "public Integer getSkipped()"
    return:
      type: "java.lang.Integer"
      description: "possible object is\n     <xref uid=\"java.lang.Integer\" data-throw-if-not-resolved=\"false\">Integer</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.getSystemErr()"
  id: "getSystemErr()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "getSystemErr()"
  nameWithType: "Testsuite.getSystemErr()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getSystemErr()"
  overload: "fr.axa.automation.junit.generated.Testsuite.getSystemErr*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the systemErr property."
  syntax:
    content: "public String getSystemErr()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.getSystemOut()"
  id: "getSystemOut()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "getSystemOut()"
  nameWithType: "Testsuite.getSystemOut()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getSystemOut()"
  overload: "fr.axa.automation.junit.generated.Testsuite.getSystemOut*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the systemOut property."
  syntax:
    content: "public String getSystemOut()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.getTestcases()"
  id: "getTestcases()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "getTestcases()"
  nameWithType: "Testsuite.getTestcases()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getTestcases()"
  overload: "fr.axa.automation.junit.generated.Testsuite.getTestcases*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the testcases property.\n\nThis accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside the JAXB object. This is why there is not a `set` method for the testcases property.\n\nFor example, to add a new item, do as follows:\n\n```java\ngetTestcases().add(newItem);\n```\n\nObjects of the following type(s) are allowed in the list <xref uid=\"fr.axa.automation.junit.generated.Testsuite.Testcase\" data-throw-if-not-resolved=\"false\">Testsuite.Testcase</xref>"
  syntax:
    content: "public List<Testsuite.Testcase> getTestcases()"
    return:
      type: "java.util.List<fr.axa.automation.junit.generated.Testsuite.Testcase>"
- uid: "fr.axa.automation.junit.generated.Testsuite.getTests()"
  id: "getTests()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "getTests()"
  nameWithType: "Testsuite.getTests()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getTests()"
  overload: "fr.axa.automation.junit.generated.Testsuite.getTests*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the tests property."
  syntax:
    content: "public int getTests()"
    return:
      type: "int"
- uid: "fr.axa.automation.junit.generated.Testsuite.getTime()"
  id: "getTime()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "getTime()"
  nameWithType: "Testsuite.getTime()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getTime()"
  overload: "fr.axa.automation.junit.generated.Testsuite.getTime*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the time property."
  syntax:
    content: "public BigDecimal getTime()"
    return:
      type: "java.math.BigDecimal"
      description: "possible object is\n     <xref uid=\"java.math.BigDecimal\" data-throw-if-not-resolved=\"false\">BigDecimal</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.getTimestamp()"
  id: "getTimestamp()"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "getTimestamp()"
  nameWithType: "Testsuite.getTimestamp()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getTimestamp()"
  overload: "fr.axa.automation.junit.generated.Testsuite.getTimestamp*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the timestamp property."
  syntax:
    content: "public Calendar getTimestamp()"
    return:
      type: "java.util.Calendar"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.hostname"
  id: "hostname"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "hostname"
  nameWithType: "Testsuite.hostname"
  fullName: "fr.axa.automation.junit.generated.Testsuite.hostname"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected String hostname"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.junit.generated.Testsuite.name"
  id: "name"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "name"
  nameWithType: "Testsuite.name"
  fullName: "fr.axa.automation.junit.generated.Testsuite.name"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected String name"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.junit.generated.Testsuite.properties"
  id: "properties"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "properties"
  nameWithType: "Testsuite.properties"
  fullName: "fr.axa.automation.junit.generated.Testsuite.properties"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected Testsuite.Properties properties"
    return:
      type: "fr.axa.automation.junit.generated.Testsuite.Properties"
- uid: "fr.axa.automation.junit.generated.Testsuite.setErrors(int)"
  id: "setErrors(int)"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "setErrors(int value)"
  nameWithType: "Testsuite.setErrors(int value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setErrors(int value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.setErrors*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the errors property."
  syntax:
    content: "public void setErrors(int value)"
    parameters:
    - id: "value"
      type: "int"
- uid: "fr.axa.automation.junit.generated.Testsuite.setFailures(int)"
  id: "setFailures(int)"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "setFailures(int value)"
  nameWithType: "Testsuite.setFailures(int value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setFailures(int value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.setFailures*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the failures property."
  syntax:
    content: "public void setFailures(int value)"
    parameters:
    - id: "value"
      type: "int"
- uid: "fr.axa.automation.junit.generated.Testsuite.setHostname(java.lang.String)"
  id: "setHostname(java.lang.String)"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "setHostname(String value)"
  nameWithType: "Testsuite.setHostname(String value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setHostname(String value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.setHostname*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the hostname property."
  syntax:
    content: "public void setHostname(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.setName(java.lang.String)"
  id: "setName(java.lang.String)"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "setName(String value)"
  nameWithType: "Testsuite.setName(String value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setName(String value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.setName*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the name property."
  syntax:
    content: "public void setName(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.setProperties(fr.axa.automation.junit.generated.Testsuite.Properties)"
  id: "setProperties(fr.axa.automation.junit.generated.Testsuite.Properties)"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "setProperties(Testsuite.Properties value)"
  nameWithType: "Testsuite.setProperties(Testsuite.Properties value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setProperties(Testsuite.Properties value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.setProperties*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the properties property."
  syntax:
    content: "public void setProperties(Testsuite.Properties value)"
    parameters:
    - id: "value"
      type: "fr.axa.automation.junit.generated.Testsuite.Properties"
      description: "allowed object is\n     <xref uid=\"fr.axa.automation.junit.generated.Testsuite.Properties\" data-throw-if-not-resolved=\"false\">Testsuite.Properties</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.setSkipped(java.lang.Integer)"
  id: "setSkipped(java.lang.Integer)"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "setSkipped(Integer value)"
  nameWithType: "Testsuite.setSkipped(Integer value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setSkipped(Integer value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.setSkipped*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the skipped property."
  syntax:
    content: "public void setSkipped(Integer value)"
    parameters:
    - id: "value"
      type: "java.lang.Integer"
      description: "allowed object is\n     <xref uid=\"java.lang.Integer\" data-throw-if-not-resolved=\"false\">Integer</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.setSystemErr(java.lang.String)"
  id: "setSystemErr(java.lang.String)"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "setSystemErr(String value)"
  nameWithType: "Testsuite.setSystemErr(String value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setSystemErr(String value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.setSystemErr*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the systemErr property."
  syntax:
    content: "public void setSystemErr(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.setSystemOut(java.lang.String)"
  id: "setSystemOut(java.lang.String)"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "setSystemOut(String value)"
  nameWithType: "Testsuite.setSystemOut(String value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setSystemOut(String value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.setSystemOut*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the systemOut property."
  syntax:
    content: "public void setSystemOut(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.setTests(int)"
  id: "setTests(int)"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "setTests(int value)"
  nameWithType: "Testsuite.setTests(int value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setTests(int value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.setTests*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the tests property."
  syntax:
    content: "public void setTests(int value)"
    parameters:
    - id: "value"
      type: "int"
- uid: "fr.axa.automation.junit.generated.Testsuite.setTime(java.math.BigDecimal)"
  id: "setTime(java.math.BigDecimal)"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "setTime(BigDecimal value)"
  nameWithType: "Testsuite.setTime(BigDecimal value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setTime(BigDecimal value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.setTime*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the time property."
  syntax:
    content: "public void setTime(BigDecimal value)"
    parameters:
    - id: "value"
      type: "java.math.BigDecimal"
      description: "allowed object is\n     <xref uid=\"java.math.BigDecimal\" data-throw-if-not-resolved=\"false\">BigDecimal</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.setTimestamp(java.util.Calendar)"
  id: "setTimestamp(java.util.Calendar)"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "setTimestamp(Calendar value)"
  nameWithType: "Testsuite.setTimestamp(Calendar value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setTimestamp(Calendar value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.setTimestamp*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the timestamp property."
  syntax:
    content: "public void setTimestamp(Calendar value)"
    parameters:
    - id: "value"
      type: "java.util.Calendar"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.skipped"
  id: "skipped"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "skipped"
  nameWithType: "Testsuite.skipped"
  fullName: "fr.axa.automation.junit.generated.Testsuite.skipped"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected Integer skipped"
    return:
      type: "java.lang.Integer"
- uid: "fr.axa.automation.junit.generated.Testsuite.systemErr"
  id: "systemErr"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "systemErr"
  nameWithType: "Testsuite.systemErr"
  fullName: "fr.axa.automation.junit.generated.Testsuite.systemErr"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected String systemErr"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.junit.generated.Testsuite.systemOut"
  id: "systemOut"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "systemOut"
  nameWithType: "Testsuite.systemOut"
  fullName: "fr.axa.automation.junit.generated.Testsuite.systemOut"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected String systemOut"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.junit.generated.Testsuite.testcases"
  id: "testcases"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "testcases"
  nameWithType: "Testsuite.testcases"
  fullName: "fr.axa.automation.junit.generated.Testsuite.testcases"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected List<Testsuite.Testcase> testcases"
    return:
      type: "java.util.List<fr.axa.automation.junit.generated.Testsuite.Testcase>"
- uid: "fr.axa.automation.junit.generated.Testsuite.tests"
  id: "tests"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "tests"
  nameWithType: "Testsuite.tests"
  fullName: "fr.axa.automation.junit.generated.Testsuite.tests"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected int tests"
    return:
      type: "int"
- uid: "fr.axa.automation.junit.generated.Testsuite.time"
  id: "time"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "time"
  nameWithType: "Testsuite.time"
  fullName: "fr.axa.automation.junit.generated.Testsuite.time"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected BigDecimal time"
    return:
      type: "java.math.BigDecimal"
- uid: "fr.axa.automation.junit.generated.Testsuite.timestamp"
  id: "timestamp"
  parent: "fr.axa.automation.junit.generated.Testsuite"
  langs:
  - "java"
  name: "timestamp"
  nameWithType: "Testsuite.timestamp"
  fullName: "fr.axa.automation.junit.generated.Testsuite.timestamp"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected Calendar timestamp"
    return:
      type: "java.util.Calendar"
references:
- uid: "fr.axa.automation.junit.generated.Testsuite.Testsuite*"
  name: "Testsuite"
  nameWithType: "Testsuite.Testsuite"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testsuite"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties"
  name: "Testsuite.Properties"
  nameWithType: "Testsuite.Properties"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties"
- uid: "fr.axa.automation.junit.generated.Testsuite.getProperties*"
  name: "getProperties"
  nameWithType: "Testsuite.getProperties"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getProperties"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.setProperties*"
  name: "setProperties"
  nameWithType: "Testsuite.setProperties"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setProperties"
  package: "fr.axa.automation.junit.generated"
- uid: "java.util.List<fr.axa.automation.junit.generated.Testsuite.Testcase>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.junit.generated.Testsuite.Testcase"
    name: "Testcase"
    fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.junit.generated.Testsuite.getTestcases*"
  name: "getTestcases"
  nameWithType: "Testsuite.getTestcases"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getTestcases"
  package: "fr.axa.automation.junit.generated"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.junit.generated.Testsuite.getSystemOut*"
  name: "getSystemOut"
  nameWithType: "Testsuite.getSystemOut"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getSystemOut"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.setSystemOut*"
  name: "setSystemOut"
  nameWithType: "Testsuite.setSystemOut"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setSystemOut"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.getSystemErr*"
  name: "getSystemErr"
  nameWithType: "Testsuite.getSystemErr"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getSystemErr"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.setSystemErr*"
  name: "setSystemErr"
  nameWithType: "Testsuite.setSystemErr"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setSystemErr"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.getName*"
  name: "getName"
  nameWithType: "Testsuite.getName"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getName"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.setName*"
  name: "setName"
  nameWithType: "Testsuite.setName"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setName"
  package: "fr.axa.automation.junit.generated"
- uid: "java.util.Calendar"
  spec.java:
  - uid: "java.util.Calendar"
    name: "Calendar"
    fullName: "java.util.Calendar"
- uid: "fr.axa.automation.junit.generated.Testsuite.getTimestamp*"
  name: "getTimestamp"
  nameWithType: "Testsuite.getTimestamp"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getTimestamp"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.setTimestamp*"
  name: "setTimestamp"
  nameWithType: "Testsuite.setTimestamp"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setTimestamp"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.getHostname*"
  name: "getHostname"
  nameWithType: "Testsuite.getHostname"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getHostname"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.setHostname*"
  name: "setHostname"
  nameWithType: "Testsuite.setHostname"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setHostname"
  package: "fr.axa.automation.junit.generated"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "fr.axa.automation.junit.generated.Testsuite.getTests*"
  name: "getTests"
  nameWithType: "Testsuite.getTests"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getTests"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.setTests*"
  name: "setTests"
  nameWithType: "Testsuite.setTests"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setTests"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.getFailures*"
  name: "getFailures"
  nameWithType: "Testsuite.getFailures"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getFailures"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.setFailures*"
  name: "setFailures"
  nameWithType: "Testsuite.setFailures"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setFailures"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.getErrors*"
  name: "getErrors"
  nameWithType: "Testsuite.getErrors"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getErrors"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.setErrors*"
  name: "setErrors"
  nameWithType: "Testsuite.setErrors"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setErrors"
  package: "fr.axa.automation.junit.generated"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "fr.axa.automation.junit.generated.Testsuite.getSkipped*"
  name: "getSkipped"
  nameWithType: "Testsuite.getSkipped"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getSkipped"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.setSkipped*"
  name: "setSkipped"
  nameWithType: "Testsuite.setSkipped"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setSkipped"
  package: "fr.axa.automation.junit.generated"
- uid: "java.math.BigDecimal"
  spec.java:
  - uid: "java.math.BigDecimal"
    name: "BigDecimal"
    fullName: "java.math.BigDecimal"
- uid: "fr.axa.automation.junit.generated.Testsuite.getTime*"
  name: "getTime"
  nameWithType: "Testsuite.getTime"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getTime"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.setTime*"
  name: "setTime"
  nameWithType: "Testsuite.setTime"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setTime"
  package: "fr.axa.automation.junit.generated"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase"
  name: "Testsuite.Testcase"
  nameWithType: "Testsuite.Testcase"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
