### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.util.PropertiesUtil"
  id: "PropertiesUtil"
  parent: "fr.axa.automation.webengine.util"
  children:
  - "fr.axa.automation.webengine.util.PropertiesUtil.<T>loadPropertiesFile(java.lang.String,java.lang.Class<T>)"
  langs:
  - "java"
  name: "PropertiesUtil"
  nameWithType: "PropertiesUtil"
  fullName: "fr.axa.automation.webengine.util.PropertiesUtil"
  type: "Class"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public final class PropertiesUtil"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.util.PropertiesUtil.<T>loadPropertiesFile(java.lang.String,java.lang.Class<T>)"
  id: "<T>loadPropertiesFile(java.lang.String,java.lang.Class<T>)"
  parent: "fr.axa.automation.webengine.util.PropertiesUtil"
  langs:
  - "java"
  name: "<T>loadPropertiesFile(String pathfileName, Class<T> clazz)"
  nameWithType: "PropertiesUtil.<T>loadPropertiesFile(String pathfileName, Class<T> clazz)"
  fullName: "fr.axa.automation.webengine.util.PropertiesUtil.<T>loadPropertiesFile(String pathfileName, Class<T> clazz)"
  overload: "fr.axa.automation.webengine.util.PropertiesUtil.loadPropertiesFile*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static T <T>loadPropertiesFile(String pathfileName, Class<T> clazz)"
    parameters:
    - id: "pathfileName"
      type: "java.lang.String"
    - id: "clazz"
      type: "java.lang.Class<T>"
    return:
      type: "T"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.PropertiesUtil.PropertiesUtil()"
  id: "PropertiesUtil()"
  parent: "fr.axa.automation.webengine.util.PropertiesUtil"
  langs:
  - "java"
  name: "PropertiesUtil()"
  nameWithType: "PropertiesUtil.PropertiesUtil()"
  fullName: "fr.axa.automation.webengine.util.PropertiesUtil.PropertiesUtil()"
  overload: "fr.axa.automation.webengine.util.PropertiesUtil.PropertiesUtil*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "private PropertiesUtil()"
references:
- uid: "fr.axa.automation.webengine.util.PropertiesUtil.PropertiesUtil*"
  name: "PropertiesUtil"
  nameWithType: "PropertiesUtil.PropertiesUtil"
  fullName: "fr.axa.automation.webengine.util.PropertiesUtil.PropertiesUtil"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.exception.WebEngineException"
  name: "WebEngineException"
  nameWithType: "WebEngineException"
  fullName: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "fr.axa.automation.webengine.util.PropertiesUtil.loadPropertiesFile*"
  name: "<T>loadPropertiesFile"
  nameWithType: "PropertiesUtil.<T>loadPropertiesFile"
  fullName: "fr.axa.automation.webengine.util.PropertiesUtil.<T>loadPropertiesFile"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
