### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration"
  id: "GlobalConfiguration"
  parent: "fr.axa.automation.webengine.properties"
  children:
  - "fr.axa.automation.webengine.properties.GlobalConfiguration.GlobalConfiguration()"
  - "fr.axa.automation.webengine.properties.GlobalConfiguration.getBrowser()"
  - "fr.axa.automation.webengine.properties.GlobalConfiguration.getOutputDir()"
  - "fr.axa.automation.webengine.properties.GlobalConfiguration.getPlateform()"
  - "fr.axa.automation.webengine.properties.GlobalConfiguration.isLocalTestingConfExist()"
  langs:
  - "java"
  name: "GlobalConfiguration"
  nameWithType: "GlobalConfiguration"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration"
  type: "Class"
  package: "fr.axa.automation.webengine.properties"
  syntax:
    content: "public class GlobalConfiguration"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration.GlobalConfiguration()"
  id: "GlobalConfiguration()"
  parent: "fr.axa.automation.webengine.properties.GlobalConfiguration"
  langs:
  - "java"
  name: "GlobalConfiguration()"
  nameWithType: "GlobalConfiguration.GlobalConfiguration()"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration.GlobalConfiguration()"
  overload: "fr.axa.automation.webengine.properties.GlobalConfiguration.GlobalConfiguration*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.properties"
  syntax:
    content: "public GlobalConfiguration()"
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration.getBrowser()"
  id: "getBrowser()"
  parent: "fr.axa.automation.webengine.properties.GlobalConfiguration"
  langs:
  - "java"
  name: "getBrowser()"
  nameWithType: "GlobalConfiguration.getBrowser()"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration.getBrowser()"
  overload: "fr.axa.automation.webengine.properties.GlobalConfiguration.getBrowser*"
  type: "Method"
  package: "fr.axa.automation.webengine.properties"
  syntax:
    content: "public String getBrowser()"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration.getOutputDir()"
  id: "getOutputDir()"
  parent: "fr.axa.automation.webengine.properties.GlobalConfiguration"
  langs:
  - "java"
  name: "getOutputDir()"
  nameWithType: "GlobalConfiguration.getOutputDir()"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration.getOutputDir()"
  overload: "fr.axa.automation.webengine.properties.GlobalConfiguration.getOutputDir*"
  type: "Method"
  package: "fr.axa.automation.webengine.properties"
  syntax:
    content: "public String getOutputDir()"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration.getPlateform()"
  id: "getPlateform()"
  parent: "fr.axa.automation.webengine.properties.GlobalConfiguration"
  langs:
  - "java"
  name: "getPlateform()"
  nameWithType: "GlobalConfiguration.getPlateform()"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration.getPlateform()"
  overload: "fr.axa.automation.webengine.properties.GlobalConfiguration.getPlateform*"
  type: "Method"
  package: "fr.axa.automation.webengine.properties"
  syntax:
    content: "public String getPlateform()"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration.isLocalTestingConfExist()"
  id: "isLocalTestingConfExist()"
  parent: "fr.axa.automation.webengine.properties.GlobalConfiguration"
  langs:
  - "java"
  name: "isLocalTestingConfExist()"
  nameWithType: "GlobalConfiguration.isLocalTestingConfExist()"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration.isLocalTestingConfExist()"
  overload: "fr.axa.automation.webengine.properties.GlobalConfiguration.isLocalTestingConfExist*"
  type: "Method"
  package: "fr.axa.automation.webengine.properties"
  syntax:
    content: "public boolean isLocalTestingConfExist()"
    return:
      type: "boolean"
references:
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration.GlobalConfiguration*"
  name: "GlobalConfiguration"
  nameWithType: "GlobalConfiguration.GlobalConfiguration"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration.GlobalConfiguration"
  package: "fr.axa.automation.webengine.properties"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration.isLocalTestingConfExist*"
  name: "isLocalTestingConfExist"
  nameWithType: "GlobalConfiguration.isLocalTestingConfExist"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration.isLocalTestingConfExist"
  package: "fr.axa.automation.webengine.properties"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration.getPlateform*"
  name: "getPlateform"
  nameWithType: "GlobalConfiguration.getPlateform"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration.getPlateform"
  package: "fr.axa.automation.webengine.properties"
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration.getBrowser*"
  name: "getBrowser"
  nameWithType: "GlobalConfiguration.getBrowser"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration.getBrowser"
  package: "fr.axa.automation.webengine.properties"
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration.getOutputDir*"
  name: "getOutputDir"
  nameWithType: "GlobalConfiguration.getOutputDir"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration.getOutputDir"
  package: "fr.axa.automation.webengine.properties"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
