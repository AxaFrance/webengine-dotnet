### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.util.FileUtil"
  id: "FileUtil"
  parent: "fr.axa.automation.webengine.util"
  children:
  - "fr.axa.automation.webengine.util.FileUtil.TARGET_DIRECTORY"
  - "fr.axa.automation.webengine.util.FileUtil.assertContent(java.io.File,java.io.File)"
  - "fr.axa.automation.webengine.util.FileUtil.copyDirectory(java.lang.String,java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.copyFileFromResource(java.io.InputStream,java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.copyFileFromResource(java.lang.String,java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.createDirectories(java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.createDirectoryInTarget(java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.createDirectoryInTmpDirectory(java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.displayContent(java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.fileToText(java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.getCurrentPath()"
  - "fr.axa.automation.webengine.util.FileUtil.getFileByPathOrResource(java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.getFileFromResource(java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.getInputStreamByPathOrResource(java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.getInputStreamFromResource(java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.getPathInTargetDirectory(java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.getPathTargetDirectory(java.nio.file.Path)"
  - "fr.axa.automation.webengine.util.FileUtil.getResourceFiles(java.lang.String)"
  - "fr.axa.automation.webengine.util.FileUtil.isTargetDirectory(java.nio.file.Path)"
  - "fr.axa.automation.webengine.util.FileUtil.loggerService"
  - "fr.axa.automation.webengine.util.FileUtil.saveAsImage(java.nio.file.Path,byte[])"
  - "fr.axa.automation.webengine.util.FileUtil.saveAsXml(fr.axa.automation.webengine.dto.InputMarshallDTO)"
  langs:
  - "java"
  name: "FileUtil"
  nameWithType: "FileUtil"
  fullName: "fr.axa.automation.webengine.util.FileUtil"
  type: "Class"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public final class FileUtil"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.util.FileUtil.FileUtil()"
  id: "FileUtil()"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "FileUtil()"
  nameWithType: "FileUtil.FileUtil()"
  fullName: "fr.axa.automation.webengine.util.FileUtil.FileUtil()"
  overload: "fr.axa.automation.webengine.util.FileUtil.FileUtil*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "private FileUtil()"
- uid: "fr.axa.automation.webengine.util.FileUtil.TARGET_DIRECTORY"
  id: "TARGET_DIRECTORY"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "TARGET_DIRECTORY"
  nameWithType: "FileUtil.TARGET_DIRECTORY"
  fullName: "fr.axa.automation.webengine.util.FileUtil.TARGET_DIRECTORY"
  type: "Field"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static final String TARGET_DIRECTORY"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.util.FileUtil.assertContent(java.io.File,java.io.File)"
  id: "assertContent(java.io.File,java.io.File)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "assertContent(File fileContentExpected, File fileContentResult)"
  nameWithType: "FileUtil.assertContent(File fileContentExpected, File fileContentResult)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.assertContent(File fileContentExpected, File fileContentResult)"
  overload: "fr.axa.automation.webengine.util.FileUtil.assertContent*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static boolean assertContent(File fileContentExpected, File fileContentResult)"
    parameters:
    - id: "fileContentExpected"
      type: "java.io.File"
    - id: "fileContentResult"
      type: "java.io.File"
    return:
      type: "boolean"
  exceptions:
  - type: "java.io.IOException"
- uid: "fr.axa.automation.webengine.util.FileUtil.copyDirectory(java.lang.String,java.lang.String)"
  id: "copyDirectory(java.lang.String,java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "copyDirectory(String sourceDirectoryLocation, String destinationDirectoryLocation)"
  nameWithType: "FileUtil.copyDirectory(String sourceDirectoryLocation, String destinationDirectoryLocation)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.copyDirectory(String sourceDirectoryLocation, String destinationDirectoryLocation)"
  overload: "fr.axa.automation.webengine.util.FileUtil.copyDirectory*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static void copyDirectory(String sourceDirectoryLocation, String destinationDirectoryLocation)"
    parameters:
    - id: "sourceDirectoryLocation"
      type: "java.lang.String"
    - id: "destinationDirectoryLocation"
      type: "java.lang.String"
  exceptions:
  - type: "java.io.IOException"
- uid: "fr.axa.automation.webengine.util.FileUtil.copyFileFromResource(java.io.InputStream,java.lang.String)"
  id: "copyFileFromResource(java.io.InputStream,java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "copyFileFromResource(InputStream source, String target)"
  nameWithType: "FileUtil.copyFileFromResource(InputStream source, String target)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.copyFileFromResource(InputStream source, String target)"
  overload: "fr.axa.automation.webengine.util.FileUtil.copyFileFromResource*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static void copyFileFromResource(InputStream source, String target)"
    parameters:
    - id: "source"
      type: "java.io.InputStream"
    - id: "target"
      type: "java.lang.String"
  exceptions:
  - type: "java.io.IOException"
- uid: "fr.axa.automation.webengine.util.FileUtil.copyFileFromResource(java.lang.String,java.lang.String)"
  id: "copyFileFromResource(java.lang.String,java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "copyFileFromResource(String source, String target)"
  nameWithType: "FileUtil.copyFileFromResource(String source, String target)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.copyFileFromResource(String source, String target)"
  overload: "fr.axa.automation.webengine.util.FileUtil.copyFileFromResource*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static void copyFileFromResource(String source, String target)"
    parameters:
    - id: "source"
      type: "java.lang.String"
    - id: "target"
      type: "java.lang.String"
  exceptions:
  - type: "java.io.IOException"
- uid: "fr.axa.automation.webengine.util.FileUtil.createDirectories(java.lang.String)"
  id: "createDirectories(java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "createDirectories(String path)"
  nameWithType: "FileUtil.createDirectories(String path)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.createDirectories(String path)"
  overload: "fr.axa.automation.webengine.util.FileUtil.createDirectories*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Path createDirectories(String path)"
    parameters:
    - id: "path"
      type: "java.lang.String"
    return:
      type: "java.nio.file.Path"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.FileUtil.createDirectoryInTarget(java.lang.String)"
  id: "createDirectoryInTarget(java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "createDirectoryInTarget(String subDirectory)"
  nameWithType: "FileUtil.createDirectoryInTarget(String subDirectory)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.createDirectoryInTarget(String subDirectory)"
  overload: "fr.axa.automation.webengine.util.FileUtil.createDirectoryInTarget*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static String createDirectoryInTarget(String subDirectory)"
    parameters:
    - id: "subDirectory"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.FileUtil.createDirectoryInTmpDirectory(java.lang.String)"
  id: "createDirectoryInTmpDirectory(java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "createDirectoryInTmpDirectory(String directoryName)"
  nameWithType: "FileUtil.createDirectoryInTmpDirectory(String directoryName)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.createDirectoryInTmpDirectory(String directoryName)"
  overload: "fr.axa.automation.webengine.util.FileUtil.createDirectoryInTmpDirectory*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static File createDirectoryInTmpDirectory(String directoryName)"
    parameters:
    - id: "directoryName"
      type: "java.lang.String"
    return:
      type: "java.io.File"
- uid: "fr.axa.automation.webengine.util.FileUtil.displayContent(java.lang.String)"
  id: "displayContent(java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "displayContent(String fileName)"
  nameWithType: "FileUtil.displayContent(String fileName)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.displayContent(String fileName)"
  overload: "fr.axa.automation.webengine.util.FileUtil.displayContent*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static void displayContent(String fileName)"
    parameters:
    - id: "fileName"
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.util.FileUtil.fileToText(java.lang.String)"
  id: "fileToText(java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "fileToText(String fileName)"
  nameWithType: "FileUtil.fileToText(String fileName)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.fileToText(String fileName)"
  overload: "fr.axa.automation.webengine.util.FileUtil.fileToText*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static StringBuilder fileToText(String fileName)"
    parameters:
    - id: "fileName"
      type: "java.lang.String"
    return:
      type: "java.lang.StringBuilder"
  exceptions:
  - type: "java.io.IOException"
- uid: "fr.axa.automation.webengine.util.FileUtil.getCurrentPath()"
  id: "getCurrentPath()"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "getCurrentPath()"
  nameWithType: "FileUtil.getCurrentPath()"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getCurrentPath()"
  overload: "fr.axa.automation.webengine.util.FileUtil.getCurrentPath*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static String getCurrentPath()"
    return:
      type: "java.lang.String"
  exceptions:
  - type: "java.io.IOException"
- uid: "fr.axa.automation.webengine.util.FileUtil.getFileByPathOrResource(java.lang.String)"
  id: "getFileByPathOrResource(java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "getFileByPathOrResource(String fileOrResource)"
  nameWithType: "FileUtil.getFileByPathOrResource(String fileOrResource)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getFileByPathOrResource(String fileOrResource)"
  overload: "fr.axa.automation.webengine.util.FileUtil.getFileByPathOrResource*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static File getFileByPathOrResource(String fileOrResource)"
    parameters:
    - id: "fileOrResource"
      type: "java.lang.String"
    return:
      type: "java.io.File"
  exceptions:
  - type: "java.io.IOException"
- uid: "fr.axa.automation.webengine.util.FileUtil.getFileFromResource(java.lang.String)"
  id: "getFileFromResource(java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "getFileFromResource(String fileName)"
  nameWithType: "FileUtil.getFileFromResource(String fileName)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getFileFromResource(String fileName)"
  overload: "fr.axa.automation.webengine.util.FileUtil.getFileFromResource*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static File getFileFromResource(String fileName)"
    parameters:
    - id: "fileName"
      type: "java.lang.String"
    return:
      type: "java.io.File"
  exceptions:
  - type: "java.net.URISyntaxException"
- uid: "fr.axa.automation.webengine.util.FileUtil.getInputStreamByPathOrResource(java.lang.String)"
  id: "getInputStreamByPathOrResource(java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "getInputStreamByPathOrResource(String fileOrResource)"
  nameWithType: "FileUtil.getInputStreamByPathOrResource(String fileOrResource)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getInputStreamByPathOrResource(String fileOrResource)"
  overload: "fr.axa.automation.webengine.util.FileUtil.getInputStreamByPathOrResource*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static InputStream getInputStreamByPathOrResource(String fileOrResource)"
    parameters:
    - id: "fileOrResource"
      type: "java.lang.String"
    return:
      type: "java.io.InputStream"
  exceptions:
  - type: "java.io.IOException"
- uid: "fr.axa.automation.webengine.util.FileUtil.getInputStreamFromResource(java.lang.String)"
  id: "getInputStreamFromResource(java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "getInputStreamFromResource(String resourceName)"
  nameWithType: "FileUtil.getInputStreamFromResource(String resourceName)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getInputStreamFromResource(String resourceName)"
  overload: "fr.axa.automation.webengine.util.FileUtil.getInputStreamFromResource*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static InputStream getInputStreamFromResource(String resourceName)"
    parameters:
    - id: "resourceName"
      type: "java.lang.String"
    return:
      type: "java.io.InputStream"
  exceptions:
  - type: "java.io.FileNotFoundException"
- uid: "fr.axa.automation.webengine.util.FileUtil.getPathInTargetDirectory(java.lang.String)"
  id: "getPathInTargetDirectory(java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "getPathInTargetDirectory(String directoryToCreate)"
  nameWithType: "FileUtil.getPathInTargetDirectory(String directoryToCreate)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getPathInTargetDirectory(String directoryToCreate)"
  overload: "fr.axa.automation.webengine.util.FileUtil.getPathInTargetDirectory*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static String getPathInTargetDirectory(String directoryToCreate)"
    parameters:
    - id: "directoryToCreate"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.util.FileUtil.getPathTargetDirectory(java.nio.file.Path)"
  id: "getPathTargetDirectory(java.nio.file.Path)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "getPathTargetDirectory(Path path)"
  nameWithType: "FileUtil.getPathTargetDirectory(Path path)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getPathTargetDirectory(Path path)"
  overload: "fr.axa.automation.webengine.util.FileUtil.getPathTargetDirectory*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static String getPathTargetDirectory(Path path)"
    parameters:
    - id: "path"
      type: "java.nio.file.Path"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.util.FileUtil.getResourceFiles(java.lang.String)"
  id: "getResourceFiles(java.lang.String)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "getResourceFiles(String path)"
  nameWithType: "FileUtil.getResourceFiles(String path)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getResourceFiles(String path)"
  overload: "fr.axa.automation.webengine.util.FileUtil.getResourceFiles*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static List<String> getResourceFiles(String path)"
    parameters:
    - id: "path"
      type: "java.lang.String"
    return:
      type: "java.util.List<java.lang.String>"
  exceptions:
  - type: "java.io.IOException"
- uid: "fr.axa.automation.webengine.util.FileUtil.isTargetDirectory(java.nio.file.Path)"
  id: "isTargetDirectory(java.nio.file.Path)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "isTargetDirectory(Path currentAbsolutePath)"
  nameWithType: "FileUtil.isTargetDirectory(Path currentAbsolutePath)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.isTargetDirectory(Path currentAbsolutePath)"
  overload: "fr.axa.automation.webengine.util.FileUtil.isTargetDirectory*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static boolean isTargetDirectory(Path currentAbsolutePath)"
    parameters:
    - id: "currentAbsolutePath"
      type: "java.nio.file.Path"
    return:
      type: "boolean"
- uid: "fr.axa.automation.webengine.util.FileUtil.loggerService"
  id: "loggerService"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "loggerService"
  nameWithType: "FileUtil.loggerService"
  fullName: "fr.axa.automation.webengine.util.FileUtil.loggerService"
  type: "Field"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static final ILoggerService loggerService"
    return:
      type: "fr.axa.automation.webengine.logger.ILoggerService"
- uid: "fr.axa.automation.webengine.util.FileUtil.saveAsImage(java.nio.file.Path,byte[])"
  id: "saveAsImage(java.nio.file.Path,byte[])"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "saveAsImage(Path path, byte[] base64Data)"
  nameWithType: "FileUtil.saveAsImage(Path path, byte[] base64Data)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.saveAsImage(Path path, byte[] base64Data)"
  overload: "fr.axa.automation.webengine.util.FileUtil.saveAsImage*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static void saveAsImage(Path path, byte[] base64Data)"
    parameters:
    - id: "path"
      type: "java.nio.file.Path"
    - id: "base64Data"
      type: "byte[]"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.FileUtil.saveAsXml(fr.axa.automation.webengine.dto.InputMarshallDTO)"
  id: "saveAsXml(fr.axa.automation.webengine.dto.InputMarshallDTO)"
  parent: "fr.axa.automation.webengine.util.FileUtil"
  langs:
  - "java"
  name: "saveAsXml(InputMarshallDTO inputMarshallDTO)"
  nameWithType: "FileUtil.saveAsXml(InputMarshallDTO inputMarshallDTO)"
  fullName: "fr.axa.automation.webengine.util.FileUtil.saveAsXml(InputMarshallDTO inputMarshallDTO)"
  overload: "fr.axa.automation.webengine.util.FileUtil.saveAsXml*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static String saveAsXml(InputMarshallDTO inputMarshallDTO)"
    parameters:
    - id: "inputMarshallDTO"
      type: "fr.axa.automation.webengine.dto.InputMarshallDTO"
    return:
      type: "java.lang.String"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
references:
- uid: "fr.axa.automation.webengine.util.FileUtil.FileUtil*"
  name: "FileUtil"
  nameWithType: "FileUtil.FileUtil"
  fullName: "fr.axa.automation.webengine.util.FileUtil.FileUtil"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.exception.WebEngineException"
  name: "WebEngineException"
  nameWithType: "WebEngineException"
  fullName: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.nio.file.Path"
  spec.java:
  - uid: "java.nio.file.Path"
    name: "Path"
    fullName: "java.nio.file.Path"
- uid: "fr.axa.automation.webengine.util.FileUtil.createDirectories*"
  name: "createDirectories"
  nameWithType: "FileUtil.createDirectories"
  fullName: "fr.axa.automation.webengine.util.FileUtil.createDirectories"
  package: "fr.axa.automation.webengine.util"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "fr.axa.automation.webengine.util.FileUtil.copyFileFromResource*"
  name: "copyFileFromResource"
  nameWithType: "FileUtil.copyFileFromResource"
  fullName: "fr.axa.automation.webengine.util.FileUtil.copyFileFromResource"
  package: "fr.axa.automation.webengine.util"
- uid: "java.io.InputStream"
  spec.java:
  - uid: "java.io.InputStream"
    name: "InputStream"
    fullName: "java.io.InputStream"
- uid: "fr.axa.automation.webengine.util.FileUtil.copyDirectory*"
  name: "copyDirectory"
  nameWithType: "FileUtil.copyDirectory"
  fullName: "fr.axa.automation.webengine.util.FileUtil.copyDirectory"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.dto.InputMarshallDTO"
  name: "InputMarshallDTO"
  nameWithType: "InputMarshallDTO"
  fullName: "fr.axa.automation.webengine.dto.InputMarshallDTO"
- uid: "fr.axa.automation.webengine.util.FileUtil.saveAsXml*"
  name: "saveAsXml"
  nameWithType: "FileUtil.saveAsXml"
  fullName: "fr.axa.automation.webengine.util.FileUtil.saveAsXml"
  package: "fr.axa.automation.webengine.util"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "fr.axa.automation.webengine.util.FileUtil.saveAsImage*"
  name: "saveAsImage"
  nameWithType: "FileUtil.saveAsImage"
  fullName: "fr.axa.automation.webengine.util.FileUtil.saveAsImage"
  package: "fr.axa.automation.webengine.util"
- uid: "java.io.File"
  spec.java:
  - uid: "java.io.File"
    name: "File"
    fullName: "java.io.File"
- uid: "fr.axa.automation.webengine.util.FileUtil.createDirectoryInTmpDirectory*"
  name: "createDirectoryInTmpDirectory"
  nameWithType: "FileUtil.createDirectoryInTmpDirectory"
  fullName: "fr.axa.automation.webengine.util.FileUtil.createDirectoryInTmpDirectory"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.util.FileUtil.createDirectoryInTarget*"
  name: "createDirectoryInTarget"
  nameWithType: "FileUtil.createDirectoryInTarget"
  fullName: "fr.axa.automation.webengine.util.FileUtil.createDirectoryInTarget"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.util.FileUtil.getPathInTargetDirectory*"
  name: "getPathInTargetDirectory"
  nameWithType: "FileUtil.getPathInTargetDirectory"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getPathInTargetDirectory"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.util.FileUtil.getPathTargetDirectory*"
  name: "getPathTargetDirectory"
  nameWithType: "FileUtil.getPathTargetDirectory"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getPathTargetDirectory"
  package: "fr.axa.automation.webengine.util"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "fr.axa.automation.webengine.util.FileUtil.isTargetDirectory*"
  name: "isTargetDirectory"
  nameWithType: "FileUtil.isTargetDirectory"
  fullName: "fr.axa.automation.webengine.util.FileUtil.isTargetDirectory"
  package: "fr.axa.automation.webengine.util"
- uid: "java.net.URISyntaxException"
  spec.java:
  - uid: "java.net.URISyntaxException"
    name: "URISyntaxException"
    fullName: "java.net.URISyntaxException"
- uid: "fr.axa.automation.webengine.util.FileUtil.getFileFromResource*"
  name: "getFileFromResource"
  nameWithType: "FileUtil.getFileFromResource"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getFileFromResource"
  package: "fr.axa.automation.webengine.util"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.util.FileUtil.getResourceFiles*"
  name: "getResourceFiles"
  nameWithType: "FileUtil.getResourceFiles"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getResourceFiles"
  package: "fr.axa.automation.webengine.util"
- uid: "java.io.FileNotFoundException"
  spec.java:
  - uid: "java.io.FileNotFoundException"
    name: "FileNotFoundException"
    fullName: "java.io.FileNotFoundException"
- uid: "fr.axa.automation.webengine.util.FileUtil.getInputStreamFromResource*"
  name: "getInputStreamFromResource"
  nameWithType: "FileUtil.getInputStreamFromResource"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getInputStreamFromResource"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.util.FileUtil.assertContent*"
  name: "assertContent"
  nameWithType: "FileUtil.assertContent"
  fullName: "fr.axa.automation.webengine.util.FileUtil.assertContent"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.util.FileUtil.getInputStreamByPathOrResource*"
  name: "getInputStreamByPathOrResource"
  nameWithType: "FileUtil.getInputStreamByPathOrResource"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getInputStreamByPathOrResource"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.util.FileUtil.getFileByPathOrResource*"
  name: "getFileByPathOrResource"
  nameWithType: "FileUtil.getFileByPathOrResource"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getFileByPathOrResource"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.util.FileUtil.getCurrentPath*"
  name: "getCurrentPath"
  nameWithType: "FileUtil.getCurrentPath"
  fullName: "fr.axa.automation.webengine.util.FileUtil.getCurrentPath"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.util.FileUtil.displayContent*"
  name: "displayContent"
  nameWithType: "FileUtil.displayContent"
  fullName: "fr.axa.automation.webengine.util.FileUtil.displayContent"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.StringBuilder"
  spec.java:
  - uid: "java.lang.StringBuilder"
    name: "StringBuilder"
    fullName: "java.lang.StringBuilder"
- uid: "fr.axa.automation.webengine.util.FileUtil.fileToText*"
  name: "fileToText"
  nameWithType: "FileUtil.fileToText"
  fullName: "fr.axa.automation.webengine.util.FileUtil.fileToText"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.logger.ILoggerService"
  name: "ILoggerService"
  nameWithType: "ILoggerService"
  fullName: "fr.axa.automation.webengine.logger.ILoggerService"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
