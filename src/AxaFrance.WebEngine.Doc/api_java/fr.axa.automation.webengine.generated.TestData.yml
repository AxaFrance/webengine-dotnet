### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.generated.TestData"
  id: "TestData"
  parent: "fr.axa.automation.webengine.generated"
  children:
  - "fr.axa.automation.webengine.generated.TestData.TestData()"
  - "fr.axa.automation.webengine.generated.TestData.data"
  - "fr.axa.automation.webengine.generated.TestData.getData()"
  - "fr.axa.automation.webengine.generated.TestData.getTestName()"
  - "fr.axa.automation.webengine.generated.TestData.setData(fr.axa.automation.webengine.generated.ArrayOfVariable)"
  - "fr.axa.automation.webengine.generated.TestData.setTestName(java.lang.String)"
  - "fr.axa.automation.webengine.generated.TestData.testName"
  langs:
  - "java"
  name: "TestData"
  nameWithType: "TestData"
  fullName: "fr.axa.automation.webengine.generated.TestData"
  type: "Class"
  package: "fr.axa.automation.webengine.generated"
  summary: "Java class for TestData complex type.\n\nThe following schema fragment specifies the expected content contained within this class.\n\n```java\n<complexType name=\"TestData\">\n   <complexContent>\n     <restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">\n       <sequence>\n         <element name=\"TestName\" type=\"{http://www.w3.org/2001/XMLSchema}string\" minOccurs=\"0\"/>\n         <element name=\"Data\" type=\"{http://www.axa.fr/WebEngine/2022}ArrayOfVariable\" minOccurs=\"0\"/>\n       </sequence>\n     </restriction>\n   </complexContent>\n </complexType>\n```"
  syntax:
    content: "public class TestData implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.generated.TestData.TestData()"
  id: "TestData()"
  parent: "fr.axa.automation.webengine.generated.TestData"
  langs:
  - "java"
  name: "TestData()"
  nameWithType: "TestData.TestData()"
  fullName: "fr.axa.automation.webengine.generated.TestData.TestData()"
  overload: "fr.axa.automation.webengine.generated.TestData.TestData*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "public TestData()"
- uid: "fr.axa.automation.webengine.generated.TestData.data"
  id: "data"
  parent: "fr.axa.automation.webengine.generated.TestData"
  langs:
  - "java"
  name: "data"
  nameWithType: "TestData.data"
  fullName: "fr.axa.automation.webengine.generated.TestData.data"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "protected ArrayOfVariable data"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
- uid: "fr.axa.automation.webengine.generated.TestData.getData()"
  id: "getData()"
  parent: "fr.axa.automation.webengine.generated.TestData"
  langs:
  - "java"
  name: "getData()"
  nameWithType: "TestData.getData()"
  fullName: "fr.axa.automation.webengine.generated.TestData.getData()"
  overload: "fr.axa.automation.webengine.generated.TestData.getData*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Gets the value of the data property."
  syntax:
    content: "public ArrayOfVariable getData()"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
      description: "possible object is\n     <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfVariable\" data-throw-if-not-resolved=\"false\">ArrayOfVariable</xref>"
- uid: "fr.axa.automation.webengine.generated.TestData.getTestName()"
  id: "getTestName()"
  parent: "fr.axa.automation.webengine.generated.TestData"
  langs:
  - "java"
  name: "getTestName()"
  nameWithType: "TestData.getTestName()"
  fullName: "fr.axa.automation.webengine.generated.TestData.getTestName()"
  overload: "fr.axa.automation.webengine.generated.TestData.getTestName*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Gets the value of the testName property."
  syntax:
    content: "public String getTestName()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.webengine.generated.TestData.setData(fr.axa.automation.webengine.generated.ArrayOfVariable)"
  id: "setData(fr.axa.automation.webengine.generated.ArrayOfVariable)"
  parent: "fr.axa.automation.webengine.generated.TestData"
  langs:
  - "java"
  name: "setData(ArrayOfVariable value)"
  nameWithType: "TestData.setData(ArrayOfVariable value)"
  fullName: "fr.axa.automation.webengine.generated.TestData.setData(ArrayOfVariable value)"
  overload: "fr.axa.automation.webengine.generated.TestData.setData*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Sets the value of the data property."
  syntax:
    content: "public void setData(ArrayOfVariable value)"
    parameters:
    - id: "value"
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
      description: "allowed object is\n     <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfVariable\" data-throw-if-not-resolved=\"false\">ArrayOfVariable</xref>"
- uid: "fr.axa.automation.webengine.generated.TestData.setTestName(java.lang.String)"
  id: "setTestName(java.lang.String)"
  parent: "fr.axa.automation.webengine.generated.TestData"
  langs:
  - "java"
  name: "setTestName(String value)"
  nameWithType: "TestData.setTestName(String value)"
  fullName: "fr.axa.automation.webengine.generated.TestData.setTestName(String value)"
  overload: "fr.axa.automation.webengine.generated.TestData.setTestName*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Sets the value of the testName property."
  syntax:
    content: "public void setTestName(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.webengine.generated.TestData.testName"
  id: "testName"
  parent: "fr.axa.automation.webengine.generated.TestData"
  langs:
  - "java"
  name: "testName"
  nameWithType: "TestData.testName"
  fullName: "fr.axa.automation.webengine.generated.TestData.testName"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "protected String testName"
    return:
      type: "java.lang.String"
references:
- uid: "fr.axa.automation.webengine.generated.TestData.TestData*"
  name: "TestData"
  nameWithType: "TestData.TestData"
  fullName: "fr.axa.automation.webengine.generated.TestData.TestData"
  package: "fr.axa.automation.webengine.generated"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.generated.TestData.getTestName*"
  name: "getTestName"
  nameWithType: "TestData.getTestName"
  fullName: "fr.axa.automation.webengine.generated.TestData.getTestName"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestData.setTestName*"
  name: "setTestName"
  nameWithType: "TestData.setTestName"
  fullName: "fr.axa.automation.webengine.generated.TestData.setTestName"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.ArrayOfVariable"
  name: "ArrayOfVariable"
  nameWithType: "ArrayOfVariable"
  fullName: "fr.axa.automation.webengine.generated.ArrayOfVariable"
- uid: "fr.axa.automation.webengine.generated.TestData.getData*"
  name: "getData"
  nameWithType: "TestData.getData"
  fullName: "fr.axa.automation.webengine.generated.TestData.getData"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestData.setData*"
  name: "setData"
  nameWithType: "TestData.setData"
  fullName: "fr.axa.automation.webengine.generated.TestData.setData"
  package: "fr.axa.automation.webengine.generated"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
