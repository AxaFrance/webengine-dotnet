### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.generated.ObjectFactory"
  id: "ObjectFactory"
  parent: "fr.axa.automation.webengine.generated"
  children:
  - "fr.axa.automation.webengine.generated.ObjectFactory.ObjectFactory()"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createActionReport()"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfActionReport()"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfScreenshotReport()"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfVariable()"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createEnvironmentVariables()"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createEnvironmentVariables(fr.axa.automation.webengine.generated.EnvironmentVariables)"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createScreenshotReport()"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createTestCaseReport()"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createTestData()"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteData()"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteData(fr.axa.automation.webengine.generated.TestSuiteData)"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteReport()"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteReport(fr.axa.automation.webengine.generated.TestSuiteReport)"
  - "fr.axa.automation.webengine.generated.ObjectFactory.createVariable()"
  langs:
  - "java"
  name: "ObjectFactory"
  nameWithType: "ObjectFactory"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory"
  type: "Class"
  package: "fr.axa.automation.webengine.generated"
  summary: "This object contains factory methods for each Java content interface and Java element interface generated in the fr.axa.automation.webengine.generated package.\n\nAn ObjectFactory allows you to programatically construct new instances of the Java representation for XML content. The Java representation of XML content can consist of schema derived interfaces and classes representing the binding of schema type definitions, element declarations and model groups. Factory methods for each of these are provided in this class."
  syntax:
    content: "public class ObjectFactory"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.ObjectFactory()"
  id: "ObjectFactory()"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "ObjectFactory()"
  nameWithType: "ObjectFactory.ObjectFactory()"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.ObjectFactory()"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.ObjectFactory*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: fr.axa.automation.webengine.generated"
  syntax:
    content: "public ObjectFactory()"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createActionReport()"
  id: "createActionReport()"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createActionReport()"
  nameWithType: "ObjectFactory.createActionReport()"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createActionReport()"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createActionReport*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.webengine.generated.ActionReport\" data-throw-if-not-resolved=\"false\">ActionReport</xref>"
  syntax:
    content: "public ActionReport createActionReport()"
    return:
      type: "fr.axa.automation.webengine.generated.ActionReport"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfActionReport()"
  id: "createArrayOfActionReport()"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createArrayOfActionReport()"
  nameWithType: "ObjectFactory.createArrayOfActionReport()"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfActionReport()"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfActionReport*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfActionReport\" data-throw-if-not-resolved=\"false\">ArrayOfActionReport</xref>"
  syntax:
    content: "public ArrayOfActionReport createArrayOfActionReport()"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfActionReport"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfScreenshotReport()"
  id: "createArrayOfScreenshotReport()"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createArrayOfScreenshotReport()"
  nameWithType: "ObjectFactory.createArrayOfScreenshotReport()"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfScreenshotReport()"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfScreenshotReport*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfScreenshotReport\" data-throw-if-not-resolved=\"false\">ArrayOfScreenshotReport</xref>"
  syntax:
    content: "public ArrayOfScreenshotReport createArrayOfScreenshotReport()"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfScreenshotReport"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfVariable()"
  id: "createArrayOfVariable()"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createArrayOfVariable()"
  nameWithType: "ObjectFactory.createArrayOfVariable()"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfVariable()"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfVariable*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfVariable\" data-throw-if-not-resolved=\"false\">ArrayOfVariable</xref>"
  syntax:
    content: "public ArrayOfVariable createArrayOfVariable()"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createEnvironmentVariables()"
  id: "createEnvironmentVariables()"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createEnvironmentVariables()"
  nameWithType: "ObjectFactory.createEnvironmentVariables()"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createEnvironmentVariables()"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createEnvironmentVariables*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.webengine.generated.EnvironmentVariables\" data-throw-if-not-resolved=\"false\">EnvironmentVariables</xref>"
  syntax:
    content: "public EnvironmentVariables createEnvironmentVariables()"
    return:
      type: "fr.axa.automation.webengine.generated.EnvironmentVariables"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createEnvironmentVariables(fr.axa.automation.webengine.generated.EnvironmentVariables)"
  id: "createEnvironmentVariables(fr.axa.automation.webengine.generated.EnvironmentVariables)"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createEnvironmentVariables(EnvironmentVariables value)"
  nameWithType: "ObjectFactory.createEnvironmentVariables(EnvironmentVariables value)"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createEnvironmentVariables(EnvironmentVariables value)"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createEnvironmentVariables*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"javax.xml.bind.JAXBElement\" data-throw-if-not-resolved=\"false\">JAXBElement</xref>`<`<xref uid=\"fr.axa.automation.webengine.generated.EnvironmentVariables\" data-throw-if-not-resolved=\"false\">EnvironmentVariables</xref>`>`\\}"
  syntax:
    content: "public JAXBElement<EnvironmentVariables> createEnvironmentVariables(EnvironmentVariables value)"
    parameters:
    - id: "value"
      type: "fr.axa.automation.webengine.generated.EnvironmentVariables"
    return:
      type: "javax.xml.bind.JAXBElement<fr.axa.automation.webengine.generated.EnvironmentVariables>"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createScreenshotReport()"
  id: "createScreenshotReport()"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createScreenshotReport()"
  nameWithType: "ObjectFactory.createScreenshotReport()"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createScreenshotReport()"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createScreenshotReport*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.webengine.generated.ScreenshotReport\" data-throw-if-not-resolved=\"false\">ScreenshotReport</xref>"
  syntax:
    content: "public ScreenshotReport createScreenshotReport()"
    return:
      type: "fr.axa.automation.webengine.generated.ScreenshotReport"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createTestCaseReport()"
  id: "createTestCaseReport()"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestCaseReport()"
  nameWithType: "ObjectFactory.createTestCaseReport()"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createTestCaseReport()"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createTestCaseReport*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.webengine.generated.TestCaseReport\" data-throw-if-not-resolved=\"false\">TestCaseReport</xref>"
  syntax:
    content: "public TestCaseReport createTestCaseReport()"
    return:
      type: "fr.axa.automation.webengine.generated.TestCaseReport"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createTestData()"
  id: "createTestData()"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestData()"
  nameWithType: "ObjectFactory.createTestData()"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createTestData()"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createTestData*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.webengine.generated.TestData\" data-throw-if-not-resolved=\"false\">TestData</xref>"
  syntax:
    content: "public TestData createTestData()"
    return:
      type: "fr.axa.automation.webengine.generated.TestData"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteData()"
  id: "createTestSuiteData()"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestSuiteData()"
  nameWithType: "ObjectFactory.createTestSuiteData()"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteData()"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteData*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.webengine.generated.TestSuiteData\" data-throw-if-not-resolved=\"false\">TestSuiteData</xref>"
  syntax:
    content: "public TestSuiteData createTestSuiteData()"
    return:
      type: "fr.axa.automation.webengine.generated.TestSuiteData"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteData(fr.axa.automation.webengine.generated.TestSuiteData)"
  id: "createTestSuiteData(fr.axa.automation.webengine.generated.TestSuiteData)"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestSuiteData(TestSuiteData value)"
  nameWithType: "ObjectFactory.createTestSuiteData(TestSuiteData value)"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteData(TestSuiteData value)"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteData*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"javax.xml.bind.JAXBElement\" data-throw-if-not-resolved=\"false\">JAXBElement</xref>`<`<xref uid=\"fr.axa.automation.webengine.generated.TestSuiteData\" data-throw-if-not-resolved=\"false\">TestSuiteData</xref>`>`\\}"
  syntax:
    content: "public JAXBElement<TestSuiteData> createTestSuiteData(TestSuiteData value)"
    parameters:
    - id: "value"
      type: "fr.axa.automation.webengine.generated.TestSuiteData"
    return:
      type: "javax.xml.bind.JAXBElement<fr.axa.automation.webengine.generated.TestSuiteData>"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteReport()"
  id: "createTestSuiteReport()"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestSuiteReport()"
  nameWithType: "ObjectFactory.createTestSuiteReport()"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteReport()"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteReport*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.webengine.generated.TestSuiteReport\" data-throw-if-not-resolved=\"false\">TestSuiteReport</xref>"
  syntax:
    content: "public TestSuiteReport createTestSuiteReport()"
    return:
      type: "fr.axa.automation.webengine.generated.TestSuiteReport"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteReport(fr.axa.automation.webengine.generated.TestSuiteReport)"
  id: "createTestSuiteReport(fr.axa.automation.webengine.generated.TestSuiteReport)"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestSuiteReport(TestSuiteReport value)"
  nameWithType: "ObjectFactory.createTestSuiteReport(TestSuiteReport value)"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteReport(TestSuiteReport value)"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteReport*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"javax.xml.bind.JAXBElement\" data-throw-if-not-resolved=\"false\">JAXBElement</xref>`<`<xref uid=\"fr.axa.automation.webengine.generated.TestSuiteReport\" data-throw-if-not-resolved=\"false\">TestSuiteReport</xref>`>`\\}"
  syntax:
    content: "public JAXBElement<TestSuiteReport> createTestSuiteReport(TestSuiteReport value)"
    parameters:
    - id: "value"
      type: "fr.axa.automation.webengine.generated.TestSuiteReport"
    return:
      type: "javax.xml.bind.JAXBElement<fr.axa.automation.webengine.generated.TestSuiteReport>"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createVariable()"
  id: "createVariable()"
  parent: "fr.axa.automation.webengine.generated.ObjectFactory"
  langs:
  - "java"
  name: "createVariable()"
  nameWithType: "ObjectFactory.createVariable()"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createVariable()"
  overload: "fr.axa.automation.webengine.generated.ObjectFactory.createVariable*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.webengine.generated.Variable\" data-throw-if-not-resolved=\"false\">Variable</xref>"
  syntax:
    content: "public Variable createVariable()"
    return:
      type: "fr.axa.automation.webengine.generated.Variable"
references:
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.ObjectFactory*"
  name: "ObjectFactory"
  nameWithType: "ObjectFactory.ObjectFactory"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.ObjectFactory"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.ArrayOfScreenshotReport"
  name: "ArrayOfScreenshotReport"
  nameWithType: "ArrayOfScreenshotReport"
  fullName: "fr.axa.automation.webengine.generated.ArrayOfScreenshotReport"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfScreenshotReport*"
  name: "createArrayOfScreenshotReport"
  nameWithType: "ObjectFactory.createArrayOfScreenshotReport"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfScreenshotReport"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.ArrayOfActionReport"
  name: "ArrayOfActionReport"
  nameWithType: "ArrayOfActionReport"
  fullName: "fr.axa.automation.webengine.generated.ArrayOfActionReport"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfActionReport*"
  name: "createArrayOfActionReport"
  nameWithType: "ObjectFactory.createArrayOfActionReport"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfActionReport"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport"
  name: "TestCaseReport"
  nameWithType: "TestCaseReport"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createTestCaseReport*"
  name: "createTestCaseReport"
  nameWithType: "ObjectFactory.createTestCaseReport"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createTestCaseReport"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.ArrayOfVariable"
  name: "ArrayOfVariable"
  nameWithType: "ArrayOfVariable"
  fullName: "fr.axa.automation.webengine.generated.ArrayOfVariable"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfVariable*"
  name: "createArrayOfVariable"
  nameWithType: "ObjectFactory.createArrayOfVariable"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createArrayOfVariable"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.ActionReport"
  name: "ActionReport"
  nameWithType: "ActionReport"
  fullName: "fr.axa.automation.webengine.generated.ActionReport"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createActionReport*"
  name: "createActionReport"
  nameWithType: "ObjectFactory.createActionReport"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createActionReport"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.ScreenshotReport"
  name: "ScreenshotReport"
  nameWithType: "ScreenshotReport"
  fullName: "fr.axa.automation.webengine.generated.ScreenshotReport"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createScreenshotReport*"
  name: "createScreenshotReport"
  nameWithType: "ObjectFactory.createScreenshotReport"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createScreenshotReport"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestSuiteData"
  name: "TestSuiteData"
  nameWithType: "TestSuiteData"
  fullName: "fr.axa.automation.webengine.generated.TestSuiteData"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteData*"
  name: "createTestSuiteData"
  nameWithType: "ObjectFactory.createTestSuiteData"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteData"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.EnvironmentVariables"
  name: "EnvironmentVariables"
  nameWithType: "EnvironmentVariables"
  fullName: "fr.axa.automation.webengine.generated.EnvironmentVariables"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createEnvironmentVariables*"
  name: "createEnvironmentVariables"
  nameWithType: "ObjectFactory.createEnvironmentVariables"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createEnvironmentVariables"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestData"
  name: "TestData"
  nameWithType: "TestData"
  fullName: "fr.axa.automation.webengine.generated.TestData"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createTestData*"
  name: "createTestData"
  nameWithType: "ObjectFactory.createTestData"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createTestData"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.Variable"
  name: "Variable"
  nameWithType: "Variable"
  fullName: "fr.axa.automation.webengine.generated.Variable"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createVariable*"
  name: "createVariable"
  nameWithType: "ObjectFactory.createVariable"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createVariable"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestSuiteReport"
  name: "TestSuiteReport"
  nameWithType: "TestSuiteReport"
  fullName: "fr.axa.automation.webengine.generated.TestSuiteReport"
- uid: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteReport*"
  name: "createTestSuiteReport"
  nameWithType: "ObjectFactory.createTestSuiteReport"
  fullName: "fr.axa.automation.webengine.generated.ObjectFactory.createTestSuiteReport"
  package: "fr.axa.automation.webengine.generated"
- uid: "javax.xml.bind.JAXBElement<fr.axa.automation.webengine.generated.EnvironmentVariables>"
  spec.java:
  - uid: "javax.xml.bind.JAXBElement"
    name: "JAXBElement"
    fullName: "javax.xml.bind.JAXBElement"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.webengine.generated.EnvironmentVariables"
    name: "EnvironmentVariables"
    fullName: "fr.axa.automation.webengine.generated.EnvironmentVariables"
  - name: ">"
    fullName: ">"
- uid: "javax.xml.bind.JAXBElement<fr.axa.automation.webengine.generated.TestSuiteData>"
  spec.java:
  - uid: "javax.xml.bind.JAXBElement"
    name: "JAXBElement"
    fullName: "javax.xml.bind.JAXBElement"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.webengine.generated.TestSuiteData"
    name: "TestSuiteData"
    fullName: "fr.axa.automation.webengine.generated.TestSuiteData"
  - name: ">"
    fullName: ">"
- uid: "javax.xml.bind.JAXBElement<fr.axa.automation.webengine.generated.TestSuiteReport>"
  spec.java:
  - uid: "javax.xml.bind.JAXBElement"
    name: "JAXBElement"
    fullName: "javax.xml.bind.JAXBElement"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.webengine.generated.TestSuiteReport"
    name: "TestSuiteReport"
    fullName: "fr.axa.automation.webengine.generated.TestSuiteReport"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "javax.xml.bind.JAXBElement"
  name: "JAXBElement"
  nameWithType: "JAXBElement"
  fullName: "javax.xml.bind.JAXBElement"
