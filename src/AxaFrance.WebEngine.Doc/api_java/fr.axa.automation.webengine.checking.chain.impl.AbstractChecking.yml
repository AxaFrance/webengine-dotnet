### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking"
  id: "AbstractChecking"
  parent: "fr.axa.automation.webengine.checking.chain.impl"
  children:
  - "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.AbstractChecking()"
  - "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.check(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.object.TestSuiteDataNoCode)"
  - "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.checkNext(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.object.TestSuiteDataNoCode)"
  - "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getOptionalAndDependsOnPreviousCommand(fr.axa.automation.webengine.object.TestCaseDataNoCode)"
  - "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getOptionalCommand(fr.axa.automation.webengine.object.TestCaseDataNoCode)"
  - "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getTestCaseNameList(java.util.List<fr.axa.automation.webengine.object.TestCaseDataNoCode>)"
  - "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.link(fr.axa.automation.webengine.checking.chain.IChecking,fr.axa.automation.webengine.checking.chain.IChecking...)"
  - "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.loggerService"
  langs:
  - "java"
  name: "AbstractChecking"
  nameWithType: "AbstractChecking"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking"
  type: "Class"
  package: "fr.axa.automation.webengine.checking.chain.impl"
  syntax:
    content: "public abstract class AbstractChecking implements IChecking"
  inheritance:
  - "java.lang.Object"
  implements:
  - "fr.axa.automation.webengine.checking.chain.IChecking"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.AbstractChecking()"
  id: "AbstractChecking()"
  parent: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking"
  langs:
  - "java"
  name: "AbstractChecking()"
  nameWithType: "AbstractChecking.AbstractChecking()"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.AbstractChecking()"
  overload: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.AbstractChecking*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.checking.chain.impl"
  syntax:
    content: "public AbstractChecking()"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.check(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.object.TestSuiteDataNoCode)"
  id: "check(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.object.TestSuiteDataNoCode)"
  parent: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking"
  langs:
  - "java"
  name: "check(AbstractGlobalApplicationContext globalApplicationContext, TestSuiteDataNoCode testSuiteData)"
  nameWithType: "AbstractChecking.check(AbstractGlobalApplicationContext globalApplicationContext, TestSuiteDataNoCode testSuiteData)"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.check(AbstractGlobalApplicationContext globalApplicationContext, TestSuiteDataNoCode testSuiteData)"
  overload: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.check*"
  type: "Method"
  package: "fr.axa.automation.webengine.checking.chain.impl"
  syntax:
    content: "public abstract boolean check(AbstractGlobalApplicationContext globalApplicationContext, TestSuiteDataNoCode testSuiteData)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testSuiteData"
      type: "fr.axa.automation.webengine.object.TestSuiteDataNoCode"
    return:
      type: "boolean"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.checkNext(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.object.TestSuiteDataNoCode)"
  id: "checkNext(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.object.TestSuiteDataNoCode)"
  parent: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking"
  langs:
  - "java"
  name: "checkNext(AbstractGlobalApplicationContext globalApplicationContext, TestSuiteDataNoCode testSuiteData)"
  nameWithType: "AbstractChecking.checkNext(AbstractGlobalApplicationContext globalApplicationContext, TestSuiteDataNoCode testSuiteData)"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.checkNext(AbstractGlobalApplicationContext globalApplicationContext, TestSuiteDataNoCode testSuiteData)"
  overload: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.checkNext*"
  type: "Method"
  package: "fr.axa.automation.webengine.checking.chain.impl"
  syntax:
    content: "protected boolean checkNext(AbstractGlobalApplicationContext globalApplicationContext, TestSuiteDataNoCode testSuiteData)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testSuiteData"
      type: "fr.axa.automation.webengine.object.TestSuiteDataNoCode"
    return:
      type: "boolean"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getOptionalAndDependsOnPreviousCommand(fr.axa.automation.webengine.object.TestCaseDataNoCode)"
  id: "getOptionalAndDependsOnPreviousCommand(fr.axa.automation.webengine.object.TestCaseDataNoCode)"
  parent: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking"
  langs:
  - "java"
  name: "getOptionalAndDependsOnPreviousCommand(TestCaseDataNoCode testCaseData)"
  nameWithType: "AbstractChecking.getOptionalAndDependsOnPreviousCommand(TestCaseDataNoCode testCaseData)"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getOptionalAndDependsOnPreviousCommand(TestCaseDataNoCode testCaseData)"
  overload: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getOptionalAndDependsOnPreviousCommand*"
  type: "Method"
  package: "fr.axa.automation.webengine.checking.chain.impl"
  syntax:
    content: "protected List<CommandDataNoCode> getOptionalAndDependsOnPreviousCommand(TestCaseDataNoCode testCaseData)"
    parameters:
    - id: "testCaseData"
      type: "fr.axa.automation.webengine.object.TestCaseDataNoCode"
    return:
      type: "java.util.List<fr.axa.automation.webengine.object.CommandDataNoCode>"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getOptionalCommand(fr.axa.automation.webengine.object.TestCaseDataNoCode)"
  id: "getOptionalCommand(fr.axa.automation.webengine.object.TestCaseDataNoCode)"
  parent: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking"
  langs:
  - "java"
  name: "getOptionalCommand(TestCaseDataNoCode testCaseData)"
  nameWithType: "AbstractChecking.getOptionalCommand(TestCaseDataNoCode testCaseData)"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getOptionalCommand(TestCaseDataNoCode testCaseData)"
  overload: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getOptionalCommand*"
  type: "Method"
  package: "fr.axa.automation.webengine.checking.chain.impl"
  syntax:
    content: "protected List<CommandDataNoCode> getOptionalCommand(TestCaseDataNoCode testCaseData)"
    parameters:
    - id: "testCaseData"
      type: "fr.axa.automation.webengine.object.TestCaseDataNoCode"
    return:
      type: "java.util.List<fr.axa.automation.webengine.object.CommandDataNoCode>"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getTestCaseNameList(java.util.List<fr.axa.automation.webengine.object.TestCaseDataNoCode>)"
  id: "getTestCaseNameList(java.util.List<fr.axa.automation.webengine.object.TestCaseDataNoCode>)"
  parent: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking"
  langs:
  - "java"
  name: "getTestCaseNameList(List<TestCaseDataNoCode> testCaseDataList)"
  nameWithType: "AbstractChecking.getTestCaseNameList(List<TestCaseDataNoCode> testCaseDataList)"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getTestCaseNameList(List<TestCaseDataNoCode> testCaseDataList)"
  overload: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getTestCaseNameList*"
  type: "Method"
  package: "fr.axa.automation.webengine.checking.chain.impl"
  syntax:
    content: "protected List<String> getTestCaseNameList(List<TestCaseDataNoCode> testCaseDataList)"
    parameters:
    - id: "testCaseDataList"
      type: "java.util.List<fr.axa.automation.webengine.object.TestCaseDataNoCode>"
    return:
      type: "java.util.List<java.lang.String>"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.link(fr.axa.automation.webengine.checking.chain.IChecking,fr.axa.automation.webengine.checking.chain.IChecking...)"
  id: "link(fr.axa.automation.webengine.checking.chain.IChecking,fr.axa.automation.webengine.checking.chain.IChecking...)"
  parent: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking"
  langs:
  - "java"
  name: "link(IChecking first, IChecking[] chain)"
  nameWithType: "AbstractChecking.link(IChecking first, IChecking[] chain)"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.link(IChecking first, IChecking[] chain)"
  overload: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.link*"
  type: "Method"
  package: "fr.axa.automation.webengine.checking.chain.impl"
  syntax:
    content: "public static IChecking link(IChecking first, IChecking[] chain)"
    parameters:
    - id: "first"
      type: "fr.axa.automation.webengine.checking.chain.IChecking"
    - id: "chain"
      type: "fr.axa.automation.webengine.checking.chain.IChecking[]"
    return:
      type: "fr.axa.automation.webengine.checking.chain.IChecking"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.loggerService"
  id: "loggerService"
  parent: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking"
  langs:
  - "java"
  name: "loggerService"
  nameWithType: "AbstractChecking.loggerService"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.loggerService"
  type: "Field"
  package: "fr.axa.automation.webengine.checking.chain.impl"
  syntax:
    content: "protected static final ILoggerService loggerService"
    return:
      type: "fr.axa.automation.webengine.logger.ILoggerService"
references:
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.AbstractChecking*"
  name: "AbstractChecking"
  nameWithType: "AbstractChecking.AbstractChecking"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.AbstractChecking"
  package: "fr.axa.automation.webengine.checking.chain.impl"
- uid: "fr.axa.automation.webengine.checking.chain.IChecking"
  name: "IChecking"
  nameWithType: "IChecking"
  fullName: "fr.axa.automation.webengine.checking.chain.IChecking"
- uid: "fr.axa.automation.webengine.checking.chain.IChecking[]"
  spec.java:
  - uid: "fr.axa.automation.webengine.checking.chain.IChecking"
    name: "IChecking"
    fullName: "fr.axa.automation.webengine.checking.chain.IChecking"
  - name: "[]"
    fullName: "[]"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.link*"
  name: "link"
  nameWithType: "AbstractChecking.link"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.link"
  package: "fr.axa.automation.webengine.checking.chain.impl"
- uid: "fr.axa.automation.webengine.object.TestCaseDataNoCode"
  name: "TestCaseDataNoCode"
  nameWithType: "TestCaseDataNoCode"
  fullName: "fr.axa.automation.webengine.object.TestCaseDataNoCode"
- uid: "java.util.List<fr.axa.automation.webengine.object.CommandDataNoCode>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.webengine.object.CommandDataNoCode"
    name: "CommandDataNoCode"
    fullName: "fr.axa.automation.webengine.object.CommandDataNoCode"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getOptionalCommand*"
  name: "getOptionalCommand"
  nameWithType: "AbstractChecking.getOptionalCommand"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getOptionalCommand"
  package: "fr.axa.automation.webengine.checking.chain.impl"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getOptionalAndDependsOnPreviousCommand*"
  name: "getOptionalAndDependsOnPreviousCommand"
  nameWithType: "AbstractChecking.getOptionalAndDependsOnPreviousCommand"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getOptionalAndDependsOnPreviousCommand"
  package: "fr.axa.automation.webengine.checking.chain.impl"
- uid: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
  name: "AbstractGlobalApplicationContext"
  nameWithType: "AbstractGlobalApplicationContext"
  fullName: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
- uid: "fr.axa.automation.webengine.object.TestSuiteDataNoCode"
  name: "TestSuiteDataNoCode"
  nameWithType: "TestSuiteDataNoCode"
  fullName: "fr.axa.automation.webengine.object.TestSuiteDataNoCode"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.check*"
  name: "check"
  nameWithType: "AbstractChecking.check"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.check"
  package: "fr.axa.automation.webengine.checking.chain.impl"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.checkNext*"
  name: "checkNext"
  nameWithType: "AbstractChecking.checkNext"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.checkNext"
  package: "fr.axa.automation.webengine.checking.chain.impl"
- uid: "java.util.List<fr.axa.automation.webengine.object.TestCaseDataNoCode>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.webengine.object.TestCaseDataNoCode"
    name: "TestCaseDataNoCode"
    fullName: "fr.axa.automation.webengine.object.TestCaseDataNoCode"
  - name: ">"
    fullName: ">"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getTestCaseNameList*"
  name: "getTestCaseNameList"
  nameWithType: "AbstractChecking.getTestCaseNameList"
  fullName: "fr.axa.automation.webengine.checking.chain.impl.AbstractChecking.getTestCaseNameList"
  package: "fr.axa.automation.webengine.checking.chain.impl"
- uid: "fr.axa.automation.webengine.logger.ILoggerService"
  name: "ILoggerService"
  nameWithType: "ILoggerService"
  fullName: "fr.axa.automation.webengine.logger.ILoggerService"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "fr.axa.automation.webengine.object.CommandDataNoCode"
  name: "CommandDataNoCode"
  nameWithType: "CommandDataNoCode"
  fullName: "fr.axa.automation.webengine.object.CommandDataNoCode"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.lang.String"
  name: "String"
  nameWithType: "String"
  fullName: "java.lang.String"
