### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property"
  id: "Property"
  parent: "fr.axa.automation.junit.generated"
  children:
  - "fr.axa.automation.junit.generated.Testsuite.Properties.Property.Property()"
  - "fr.axa.automation.junit.generated.Testsuite.Properties.Property.getName()"
  - "fr.axa.automation.junit.generated.Testsuite.Properties.Property.getValue()"
  - "fr.axa.automation.junit.generated.Testsuite.Properties.Property.name"
  - "fr.axa.automation.junit.generated.Testsuite.Properties.Property.setName(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.Properties.Property.setValue(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.Properties.Property.value"
  langs:
  - "java"
  name: "Testsuite.Properties.Property"
  nameWithType: "Testsuite.Properties.Property"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property"
  type: "Class"
  package: "fr.axa.automation.junit.generated"
  summary: "Java class for anonymous complex type.\n\nThe following schema fragment specifies the expected content contained within this class.\n\n```java\n<complexType>\n   <complexContent>\n     <restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">\n       <attribute name=\"name\" use=\"required\">\n         <simpleType>\n           <restriction base=\"{http://www.w3.org/2001/XMLSchema}token\">\n             <minLength value=\"1\"/>\n           </restriction>\n         </simpleType>\n       </attribute>\n       <attribute name=\"value\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n     </restriction>\n   </complexContent>\n </complexType>\n```"
  syntax:
    content: "public static class Testsuite.Properties.Property"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.Property()"
  id: "Property()"
  parent: "fr.axa.automation.junit.generated.Testsuite.Properties.Property"
  langs:
  - "java"
  name: "Property()"
  nameWithType: "Testsuite.Properties.Property.Property()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.Property()"
  overload: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.Property*"
  type: "Constructor"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "public Property()"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.getName()"
  id: "getName()"
  parent: "fr.axa.automation.junit.generated.Testsuite.Properties.Property"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "Testsuite.Properties.Property.getName()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.getName()"
  overload: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.getName*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the name property."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.getValue()"
  id: "getValue()"
  parent: "fr.axa.automation.junit.generated.Testsuite.Properties.Property"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "Testsuite.Properties.Property.getValue()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.getValue()"
  overload: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.getValue*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the value property."
  syntax:
    content: "public String getValue()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.name"
  id: "name"
  parent: "fr.axa.automation.junit.generated.Testsuite.Properties.Property"
  langs:
  - "java"
  name: "name"
  nameWithType: "Testsuite.Properties.Property.name"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.name"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected String name"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.setName(java.lang.String)"
  id: "setName(java.lang.String)"
  parent: "fr.axa.automation.junit.generated.Testsuite.Properties.Property"
  langs:
  - "java"
  name: "setName(String value)"
  nameWithType: "Testsuite.Properties.Property.setName(String value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.setName(String value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.setName*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the name property."
  syntax:
    content: "public void setName(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.setValue(java.lang.String)"
  id: "setValue(java.lang.String)"
  parent: "fr.axa.automation.junit.generated.Testsuite.Properties.Property"
  langs:
  - "java"
  name: "setValue(String value)"
  nameWithType: "Testsuite.Properties.Property.setValue(String value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.setValue(String value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.setValue*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the value property."
  syntax:
    content: "public void setValue(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.value"
  id: "value"
  parent: "fr.axa.automation.junit.generated.Testsuite.Properties.Property"
  langs:
  - "java"
  name: "value"
  nameWithType: "Testsuite.Properties.Property.value"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.value"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected String value"
    return:
      type: "java.lang.String"
references:
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.Property*"
  name: "Property"
  nameWithType: "Testsuite.Properties.Property.Property"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.Property"
  package: "fr.axa.automation.junit.generated"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.getName*"
  name: "getName"
  nameWithType: "Testsuite.Properties.Property.getName"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.getName"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.setName*"
  name: "setName"
  nameWithType: "Testsuite.Properties.Property.setName"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.setName"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.getValue*"
  name: "getValue"
  nameWithType: "Testsuite.Properties.Property.getValue"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.getValue"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.setValue*"
  name: "setValue"
  nameWithType: "Testsuite.Properties.Property.setValue"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property.setValue"
  package: "fr.axa.automation.junit.generated"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
