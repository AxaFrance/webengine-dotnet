### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.logger.LoggerService"
  id: "LoggerService"
  parent: "fr.axa.automation.webengine.logger"
  children:
  - "fr.axa.automation.webengine.logger.LoggerService.LoggerService()"
  - "fr.axa.automation.webengine.logger.LoggerService.error(java.lang.String)"
  - "fr.axa.automation.webengine.logger.LoggerService.error(java.lang.String,java.lang.Throwable)"
  - "fr.axa.automation.webengine.logger.LoggerService.info(java.lang.String)"
  - "fr.axa.automation.webengine.logger.LoggerService.warn(java.lang.String)"
  - "fr.axa.automation.webengine.logger.LoggerService.warn(java.lang.String,java.lang.Exception)"
  langs:
  - "java"
  name: "LoggerService"
  nameWithType: "LoggerService"
  fullName: "fr.axa.automation.webengine.logger.LoggerService"
  type: "Class"
  package: "fr.axa.automation.webengine.logger"
  syntax:
    content: "public class LoggerService implements ILoggerService"
  inheritance:
  - "java.lang.Object"
  implements:
  - "fr.axa.automation.webengine.logger.ILoggerService"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.logger.LoggerService.LoggerService()"
  id: "LoggerService()"
  parent: "fr.axa.automation.webengine.logger.LoggerService"
  langs:
  - "java"
  name: "LoggerService()"
  nameWithType: "LoggerService.LoggerService()"
  fullName: "fr.axa.automation.webengine.logger.LoggerService.LoggerService()"
  overload: "fr.axa.automation.webengine.logger.LoggerService.LoggerService*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.logger"
  syntax:
    content: "public LoggerService()"
- uid: "fr.axa.automation.webengine.logger.LoggerService.error(java.lang.String)"
  id: "error(java.lang.String)"
  parent: "fr.axa.automation.webengine.logger.LoggerService"
  langs:
  - "java"
  name: "error(String message)"
  nameWithType: "LoggerService.error(String message)"
  fullName: "fr.axa.automation.webengine.logger.LoggerService.error(String message)"
  overload: "fr.axa.automation.webengine.logger.LoggerService.error*"
  type: "Method"
  package: "fr.axa.automation.webengine.logger"
  syntax:
    content: "public void error(String message)"
    parameters:
    - id: "message"
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.logger.LoggerService.error(java.lang.String,java.lang.Throwable)"
  id: "error(java.lang.String,java.lang.Throwable)"
  parent: "fr.axa.automation.webengine.logger.LoggerService"
  langs:
  - "java"
  name: "error(String message, Throwable e)"
  nameWithType: "LoggerService.error(String message, Throwable e)"
  fullName: "fr.axa.automation.webengine.logger.LoggerService.error(String message, Throwable e)"
  overload: "fr.axa.automation.webengine.logger.LoggerService.error*"
  type: "Method"
  package: "fr.axa.automation.webengine.logger"
  syntax:
    content: "public void error(String message, Throwable e)"
    parameters:
    - id: "message"
      type: "java.lang.String"
    - id: "e"
      type: "java.lang.Throwable"
- uid: "fr.axa.automation.webengine.logger.LoggerService.info(java.lang.String)"
  id: "info(java.lang.String)"
  parent: "fr.axa.automation.webengine.logger.LoggerService"
  langs:
  - "java"
  name: "info(String message)"
  nameWithType: "LoggerService.info(String message)"
  fullName: "fr.axa.automation.webengine.logger.LoggerService.info(String message)"
  overload: "fr.axa.automation.webengine.logger.LoggerService.info*"
  type: "Method"
  package: "fr.axa.automation.webengine.logger"
  syntax:
    content: "public void info(String message)"
    parameters:
    - id: "message"
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.logger.LoggerService.warn(java.lang.String)"
  id: "warn(java.lang.String)"
  parent: "fr.axa.automation.webengine.logger.LoggerService"
  langs:
  - "java"
  name: "warn(String message)"
  nameWithType: "LoggerService.warn(String message)"
  fullName: "fr.axa.automation.webengine.logger.LoggerService.warn(String message)"
  overload: "fr.axa.automation.webengine.logger.LoggerService.warn*"
  type: "Method"
  package: "fr.axa.automation.webengine.logger"
  syntax:
    content: "public void warn(String message)"
    parameters:
    - id: "message"
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.logger.LoggerService.warn(java.lang.String,java.lang.Exception)"
  id: "warn(java.lang.String,java.lang.Exception)"
  parent: "fr.axa.automation.webengine.logger.LoggerService"
  langs:
  - "java"
  name: "warn(String message, Exception e)"
  nameWithType: "LoggerService.warn(String message, Exception e)"
  fullName: "fr.axa.automation.webengine.logger.LoggerService.warn(String message, Exception e)"
  overload: "fr.axa.automation.webengine.logger.LoggerService.warn*"
  type: "Method"
  package: "fr.axa.automation.webengine.logger"
  syntax:
    content: "public void warn(String message, Exception e)"
    parameters:
    - id: "message"
      type: "java.lang.String"
    - id: "e"
      type: "java.lang.Exception"
references:
- uid: "fr.axa.automation.webengine.logger.LoggerService.LoggerService*"
  name: "LoggerService"
  nameWithType: "LoggerService.LoggerService"
  fullName: "fr.axa.automation.webengine.logger.LoggerService.LoggerService"
  package: "fr.axa.automation.webengine.logger"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.logger.LoggerService.info*"
  name: "info"
  nameWithType: "LoggerService.info"
  fullName: "fr.axa.automation.webengine.logger.LoggerService.info"
  package: "fr.axa.automation.webengine.logger"
- uid: "fr.axa.automation.webengine.logger.LoggerService.error*"
  name: "error"
  nameWithType: "LoggerService.error"
  fullName: "fr.axa.automation.webengine.logger.LoggerService.error"
  package: "fr.axa.automation.webengine.logger"
- uid: "java.lang.Throwable"
  spec.java:
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
- uid: "fr.axa.automation.webengine.logger.LoggerService.warn*"
  name: "warn"
  nameWithType: "LoggerService.warn"
  fullName: "fr.axa.automation.webengine.logger.LoggerService.warn"
  package: "fr.axa.automation.webengine.logger"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.logger.ILoggerService"
  name: "ILoggerService"
  nameWithType: "ILoggerService"
  fullName: "fr.axa.automation.webengine.logger.ILoggerService"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
