### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  id: "Failure"
  parent: "fr.axa.automation.junit.generated"
  children:
  - "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.Failure()"
  - "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getMessage()"
  - "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getType()"
  - "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getValue()"
  - "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.message"
  - "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setMessage(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setType(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setValue(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.type"
  - "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.value"
  langs:
  - "java"
  name: "Testsuite.Testcase.Failure"
  nameWithType: "Testsuite.Testcase.Failure"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  type: "Class"
  package: "fr.axa.automation.junit.generated"
  summary: "Java class for anonymous complex type.\n\nThe following schema fragment specifies the expected content contained within this class.\n\n```java\n<complexType>\n   <simpleContent>\n     <extension base=\"<>pre-string\">\n       <attribute name=\"message\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n       <attribute name=\"type\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}string\" />\n     </extension>\n   </simpleContent>\n </complexType>\n```"
  syntax:
    content: "public static class Testsuite.Testcase.Failure"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.Failure()"
  id: "Failure()"
  parent: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  langs:
  - "java"
  name: "Failure()"
  nameWithType: "Testsuite.Testcase.Failure.Failure()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.Failure()"
  overload: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.Failure*"
  type: "Constructor"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "public Failure()"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getMessage()"
  id: "getMessage()"
  parent: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  langs:
  - "java"
  name: "getMessage()"
  nameWithType: "Testsuite.Testcase.Failure.getMessage()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getMessage()"
  overload: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getMessage*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the message property."
  syntax:
    content: "public String getMessage()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getType()"
  id: "getType()"
  parent: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "Testsuite.Testcase.Failure.getType()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getType()"
  overload: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getType*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the type property."
  syntax:
    content: "public String getType()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getValue()"
  id: "getValue()"
  parent: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "Testsuite.Testcase.Failure.getValue()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getValue()"
  overload: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getValue*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the value property."
  syntax:
    content: "public String getValue()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.message"
  id: "message"
  parent: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  langs:
  - "java"
  name: "message"
  nameWithType: "Testsuite.Testcase.Failure.message"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.message"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected String message"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setMessage(java.lang.String)"
  id: "setMessage(java.lang.String)"
  parent: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  langs:
  - "java"
  name: "setMessage(String value)"
  nameWithType: "Testsuite.Testcase.Failure.setMessage(String value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setMessage(String value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setMessage*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the message property."
  syntax:
    content: "public void setMessage(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setType(java.lang.String)"
  id: "setType(java.lang.String)"
  parent: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  langs:
  - "java"
  name: "setType(String value)"
  nameWithType: "Testsuite.Testcase.Failure.setType(String value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setType(String value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setType*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the type property."
  syntax:
    content: "public void setType(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setValue(java.lang.String)"
  id: "setValue(java.lang.String)"
  parent: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  langs:
  - "java"
  name: "setValue(String value)"
  nameWithType: "Testsuite.Testcase.Failure.setValue(String value)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setValue(String value)"
  overload: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setValue*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the value property."
  syntax:
    content: "public void setValue(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.type"
  id: "type"
  parent: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  langs:
  - "java"
  name: "type"
  nameWithType: "Testsuite.Testcase.Failure.type"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.type"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected String type"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.value"
  id: "value"
  parent: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  langs:
  - "java"
  name: "value"
  nameWithType: "Testsuite.Testcase.Failure.value"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.value"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected String value"
    return:
      type: "java.lang.String"
references:
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.Failure*"
  name: "Failure"
  nameWithType: "Testsuite.Testcase.Failure.Failure"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.Failure"
  package: "fr.axa.automation.junit.generated"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getValue*"
  name: "getValue"
  nameWithType: "Testsuite.Testcase.Failure.getValue"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getValue"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setValue*"
  name: "setValue"
  nameWithType: "Testsuite.Testcase.Failure.setValue"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setValue"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getMessage*"
  name: "getMessage"
  nameWithType: "Testsuite.Testcase.Failure.getMessage"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getMessage"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setMessage*"
  name: "setMessage"
  nameWithType: "Testsuite.Testcase.Failure.setMessage"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setMessage"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getType*"
  name: "getType"
  nameWithType: "Testsuite.Testcase.Failure.getType"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.getType"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setType*"
  name: "setType"
  nameWithType: "Testsuite.Testcase.Failure.setType"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure.setType"
  package: "fr.axa.automation.junit.generated"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
