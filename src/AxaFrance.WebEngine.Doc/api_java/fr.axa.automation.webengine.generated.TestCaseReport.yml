### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.generated.TestCaseReport"
  id: "TestCaseReport"
  parent: "fr.axa.automation.webengine.generated"
  children:
  - "fr.axa.automation.webengine.generated.TestCaseReport.TestCaseReport()"
  - "fr.axa.automation.webengine.generated.TestCaseReport.actionReports"
  - "fr.axa.automation.webengine.generated.TestCaseReport.contextValues"
  - "fr.axa.automation.webengine.generated.TestCaseReport.endTime"
  - "fr.axa.automation.webengine.generated.TestCaseReport.getActionReports()"
  - "fr.axa.automation.webengine.generated.TestCaseReport.getContextValues()"
  - "fr.axa.automation.webengine.generated.TestCaseReport.getEndTime()"
  - "fr.axa.automation.webengine.generated.TestCaseReport.getGlobalContextValues()"
  - "fr.axa.automation.webengine.generated.TestCaseReport.getId()"
  - "fr.axa.automation.webengine.generated.TestCaseReport.getLog()"
  - "fr.axa.automation.webengine.generated.TestCaseReport.getResult()"
  - "fr.axa.automation.webengine.generated.TestCaseReport.getStartTime()"
  - "fr.axa.automation.webengine.generated.TestCaseReport.getTestData()"
  - "fr.axa.automation.webengine.generated.TestCaseReport.getTestName()"
  - "fr.axa.automation.webengine.generated.TestCaseReport.globalContextValues"
  - "fr.axa.automation.webengine.generated.TestCaseReport.id"
  - "fr.axa.automation.webengine.generated.TestCaseReport.log"
  - "fr.axa.automation.webengine.generated.TestCaseReport.result"
  - "fr.axa.automation.webengine.generated.TestCaseReport.setActionReports(fr.axa.automation.webengine.generated.ArrayOfActionReport)"
  - "fr.axa.automation.webengine.generated.TestCaseReport.setContextValues(fr.axa.automation.webengine.generated.ArrayOfVariable)"
  - "fr.axa.automation.webengine.generated.TestCaseReport.setEndTime(java.util.Calendar)"
  - "fr.axa.automation.webengine.generated.TestCaseReport.setGlobalContextValues(fr.axa.automation.webengine.generated.ArrayOfVariable)"
  - "fr.axa.automation.webengine.generated.TestCaseReport.setId(java.lang.String)"
  - "fr.axa.automation.webengine.generated.TestCaseReport.setLog(java.lang.String)"
  - "fr.axa.automation.webengine.generated.TestCaseReport.setResult(fr.axa.automation.webengine.generated.Result)"
  - "fr.axa.automation.webengine.generated.TestCaseReport.setStartTime(java.util.Calendar)"
  - "fr.axa.automation.webengine.generated.TestCaseReport.setTestData(fr.axa.automation.webengine.generated.ArrayOfVariable)"
  - "fr.axa.automation.webengine.generated.TestCaseReport.setTestName(java.lang.String)"
  - "fr.axa.automation.webengine.generated.TestCaseReport.startTime"
  - "fr.axa.automation.webengine.generated.TestCaseReport.testData"
  - "fr.axa.automation.webengine.generated.TestCaseReport.testName"
  langs:
  - "java"
  name: "TestCaseReport"
  nameWithType: "TestCaseReport"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport"
  type: "Class"
  package: "fr.axa.automation.webengine.generated"
  summary: "Java class for TestCaseReport complex type.\n\nThe following schema fragment specifies the expected content contained within this class.\n\n```java\n<complexType name=\"TestCaseReport\">\n   <complexContent>\n     <restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">\n       <sequence>\n         <element name=\"Id\" type=\"{http://www.w3.org/2001/XMLSchema}string\" minOccurs=\"0\"/>\n         <element name=\"TestName\" type=\"{http://www.w3.org/2001/XMLSchema}string\" minOccurs=\"0\"/>\n         <element name=\"Log\" type=\"{http://www.w3.org/2001/XMLSchema}string\" minOccurs=\"0\"/>\n         <element name=\"Result\" type=\"{http://www.axa.fr/WebEngine/2022}Result\"/>\n         <element name=\"StartTime\" type=\"{http://www.w3.org/2001/XMLSchema}dateTime\"/>\n         <element name=\"EndTime\" type=\"{http://www.w3.org/2001/XMLSchema}dateTime\"/>\n         <element name=\"TestData\" type=\"{http://www.axa.fr/WebEngine/2022}ArrayOfVariable\" minOccurs=\"0\"/>\n         <element name=\"ContextValues\" type=\"{http://www.axa.fr/WebEngine/2022}ArrayOfVariable\" minOccurs=\"0\"/>\n         <element name=\"GlobalContextValues\" type=\"{http://www.axa.fr/WebEngine/2022}ArrayOfVariable\" minOccurs=\"0\"/>\n         <element name=\"ActionReports\" type=\"{http://www.axa.fr/WebEngine/2022}ArrayOfActionReport\" minOccurs=\"0\"/>\n       </sequence>\n     </restriction>\n   </complexContent>\n </complexType>\n```"
  syntax:
    content: "public class TestCaseReport implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.TestCaseReport()"
  id: "TestCaseReport()"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "TestCaseReport()"
  nameWithType: "TestCaseReport.TestCaseReport()"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.TestCaseReport()"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.TestCaseReport*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "public TestCaseReport()"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.actionReports"
  id: "actionReports"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "actionReports"
  nameWithType: "TestCaseReport.actionReports"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.actionReports"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "protected ArrayOfActionReport actionReports"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfActionReport"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.contextValues"
  id: "contextValues"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "contextValues"
  nameWithType: "TestCaseReport.contextValues"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.contextValues"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "protected ArrayOfVariable contextValues"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.endTime"
  id: "endTime"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "endTime"
  nameWithType: "TestCaseReport.endTime"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.endTime"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "protected Calendar endTime"
    return:
      type: "java.util.Calendar"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getActionReports()"
  id: "getActionReports()"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "getActionReports()"
  nameWithType: "TestCaseReport.getActionReports()"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getActionReports()"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.getActionReports*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Gets the value of the actionReports property."
  syntax:
    content: "public ArrayOfActionReport getActionReports()"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfActionReport"
      description: "possible object is\n     <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfActionReport\" data-throw-if-not-resolved=\"false\">ArrayOfActionReport</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getContextValues()"
  id: "getContextValues()"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "getContextValues()"
  nameWithType: "TestCaseReport.getContextValues()"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getContextValues()"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.getContextValues*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Gets the value of the contextValues property."
  syntax:
    content: "public ArrayOfVariable getContextValues()"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
      description: "possible object is\n     <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfVariable\" data-throw-if-not-resolved=\"false\">ArrayOfVariable</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getEndTime()"
  id: "getEndTime()"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "getEndTime()"
  nameWithType: "TestCaseReport.getEndTime()"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getEndTime()"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.getEndTime*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Gets the value of the endTime property."
  syntax:
    content: "public Calendar getEndTime()"
    return:
      type: "java.util.Calendar"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getGlobalContextValues()"
  id: "getGlobalContextValues()"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "getGlobalContextValues()"
  nameWithType: "TestCaseReport.getGlobalContextValues()"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getGlobalContextValues()"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.getGlobalContextValues*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Gets the value of the globalContextValues property."
  syntax:
    content: "public ArrayOfVariable getGlobalContextValues()"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
      description: "possible object is\n     <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfVariable\" data-throw-if-not-resolved=\"false\">ArrayOfVariable</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getId()"
  id: "getId()"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "getId()"
  nameWithType: "TestCaseReport.getId()"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getId()"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.getId*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Gets the value of the id property."
  syntax:
    content: "public String getId()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getLog()"
  id: "getLog()"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "getLog()"
  nameWithType: "TestCaseReport.getLog()"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getLog()"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.getLog*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Gets the value of the log property."
  syntax:
    content: "public String getLog()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getResult()"
  id: "getResult()"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "getResult()"
  nameWithType: "TestCaseReport.getResult()"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getResult()"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.getResult*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Gets the value of the result property."
  syntax:
    content: "public Result getResult()"
    return:
      type: "fr.axa.automation.webengine.generated.Result"
      description: "possible object is\n     <xref uid=\"fr.axa.automation.webengine.generated.Result\" data-throw-if-not-resolved=\"false\">Result</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getStartTime()"
  id: "getStartTime()"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "getStartTime()"
  nameWithType: "TestCaseReport.getStartTime()"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getStartTime()"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.getStartTime*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Gets the value of the startTime property."
  syntax:
    content: "public Calendar getStartTime()"
    return:
      type: "java.util.Calendar"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getTestData()"
  id: "getTestData()"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "getTestData()"
  nameWithType: "TestCaseReport.getTestData()"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getTestData()"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.getTestData*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Gets the value of the testData property."
  syntax:
    content: "public ArrayOfVariable getTestData()"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
      description: "possible object is\n     <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfVariable\" data-throw-if-not-resolved=\"false\">ArrayOfVariable</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getTestName()"
  id: "getTestName()"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "getTestName()"
  nameWithType: "TestCaseReport.getTestName()"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getTestName()"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.getTestName*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Gets the value of the testName property."
  syntax:
    content: "public String getTestName()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.globalContextValues"
  id: "globalContextValues"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "globalContextValues"
  nameWithType: "TestCaseReport.globalContextValues"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.globalContextValues"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "protected ArrayOfVariable globalContextValues"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.id"
  id: "id"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "id"
  nameWithType: "TestCaseReport.id"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.id"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "protected String id"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.log"
  id: "log"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "log"
  nameWithType: "TestCaseReport.log"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.log"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "protected String log"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.result"
  id: "result"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "result"
  nameWithType: "TestCaseReport.result"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.result"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "protected Result result"
    return:
      type: "fr.axa.automation.webengine.generated.Result"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setActionReports(fr.axa.automation.webengine.generated.ArrayOfActionReport)"
  id: "setActionReports(fr.axa.automation.webengine.generated.ArrayOfActionReport)"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "setActionReports(ArrayOfActionReport value)"
  nameWithType: "TestCaseReport.setActionReports(ArrayOfActionReport value)"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setActionReports(ArrayOfActionReport value)"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.setActionReports*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Sets the value of the actionReports property."
  syntax:
    content: "public void setActionReports(ArrayOfActionReport value)"
    parameters:
    - id: "value"
      type: "fr.axa.automation.webengine.generated.ArrayOfActionReport"
      description: "allowed object is\n     <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfActionReport\" data-throw-if-not-resolved=\"false\">ArrayOfActionReport</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setContextValues(fr.axa.automation.webengine.generated.ArrayOfVariable)"
  id: "setContextValues(fr.axa.automation.webengine.generated.ArrayOfVariable)"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "setContextValues(ArrayOfVariable value)"
  nameWithType: "TestCaseReport.setContextValues(ArrayOfVariable value)"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setContextValues(ArrayOfVariable value)"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.setContextValues*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Sets the value of the contextValues property."
  syntax:
    content: "public void setContextValues(ArrayOfVariable value)"
    parameters:
    - id: "value"
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
      description: "allowed object is\n     <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfVariable\" data-throw-if-not-resolved=\"false\">ArrayOfVariable</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setEndTime(java.util.Calendar)"
  id: "setEndTime(java.util.Calendar)"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "setEndTime(Calendar value)"
  nameWithType: "TestCaseReport.setEndTime(Calendar value)"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setEndTime(Calendar value)"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.setEndTime*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Sets the value of the endTime property."
  syntax:
    content: "public void setEndTime(Calendar value)"
    parameters:
    - id: "value"
      type: "java.util.Calendar"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setGlobalContextValues(fr.axa.automation.webengine.generated.ArrayOfVariable)"
  id: "setGlobalContextValues(fr.axa.automation.webengine.generated.ArrayOfVariable)"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "setGlobalContextValues(ArrayOfVariable value)"
  nameWithType: "TestCaseReport.setGlobalContextValues(ArrayOfVariable value)"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setGlobalContextValues(ArrayOfVariable value)"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.setGlobalContextValues*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Sets the value of the globalContextValues property."
  syntax:
    content: "public void setGlobalContextValues(ArrayOfVariable value)"
    parameters:
    - id: "value"
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
      description: "allowed object is\n     <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfVariable\" data-throw-if-not-resolved=\"false\">ArrayOfVariable</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setId(java.lang.String)"
  id: "setId(java.lang.String)"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "setId(String value)"
  nameWithType: "TestCaseReport.setId(String value)"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setId(String value)"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.setId*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Sets the value of the id property."
  syntax:
    content: "public void setId(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setLog(java.lang.String)"
  id: "setLog(java.lang.String)"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "setLog(String value)"
  nameWithType: "TestCaseReport.setLog(String value)"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setLog(String value)"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.setLog*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Sets the value of the log property."
  syntax:
    content: "public void setLog(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setResult(fr.axa.automation.webengine.generated.Result)"
  id: "setResult(fr.axa.automation.webengine.generated.Result)"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "setResult(Result value)"
  nameWithType: "TestCaseReport.setResult(Result value)"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setResult(Result value)"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.setResult*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Sets the value of the result property."
  syntax:
    content: "public void setResult(Result value)"
    parameters:
    - id: "value"
      type: "fr.axa.automation.webengine.generated.Result"
      description: "allowed object is\n     <xref uid=\"fr.axa.automation.webengine.generated.Result\" data-throw-if-not-resolved=\"false\">Result</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setStartTime(java.util.Calendar)"
  id: "setStartTime(java.util.Calendar)"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "setStartTime(Calendar value)"
  nameWithType: "TestCaseReport.setStartTime(Calendar value)"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setStartTime(Calendar value)"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.setStartTime*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Sets the value of the startTime property."
  syntax:
    content: "public void setStartTime(Calendar value)"
    parameters:
    - id: "value"
      type: "java.util.Calendar"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setTestData(fr.axa.automation.webengine.generated.ArrayOfVariable)"
  id: "setTestData(fr.axa.automation.webengine.generated.ArrayOfVariable)"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "setTestData(ArrayOfVariable value)"
  nameWithType: "TestCaseReport.setTestData(ArrayOfVariable value)"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setTestData(ArrayOfVariable value)"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.setTestData*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Sets the value of the testData property."
  syntax:
    content: "public void setTestData(ArrayOfVariable value)"
    parameters:
    - id: "value"
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
      description: "allowed object is\n     <xref uid=\"fr.axa.automation.webengine.generated.ArrayOfVariable\" data-throw-if-not-resolved=\"false\">ArrayOfVariable</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setTestName(java.lang.String)"
  id: "setTestName(java.lang.String)"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "setTestName(String value)"
  nameWithType: "TestCaseReport.setTestName(String value)"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setTestName(String value)"
  overload: "fr.axa.automation.webengine.generated.TestCaseReport.setTestName*"
  type: "Method"
  package: "fr.axa.automation.webengine.generated"
  summary: "Sets the value of the testName property."
  syntax:
    content: "public void setTestName(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.startTime"
  id: "startTime"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "startTime"
  nameWithType: "TestCaseReport.startTime"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.startTime"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "protected Calendar startTime"
    return:
      type: "java.util.Calendar"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.testData"
  id: "testData"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "testData"
  nameWithType: "TestCaseReport.testData"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.testData"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "protected ArrayOfVariable testData"
    return:
      type: "fr.axa.automation.webengine.generated.ArrayOfVariable"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.testName"
  id: "testName"
  parent: "fr.axa.automation.webengine.generated.TestCaseReport"
  langs:
  - "java"
  name: "testName"
  nameWithType: "TestCaseReport.testName"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.testName"
  type: "Field"
  package: "fr.axa.automation.webengine.generated"
  syntax:
    content: "protected String testName"
    return:
      type: "java.lang.String"
references:
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.TestCaseReport*"
  name: "TestCaseReport"
  nameWithType: "TestCaseReport.TestCaseReport"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.TestCaseReport"
  package: "fr.axa.automation.webengine.generated"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getId*"
  name: "getId"
  nameWithType: "TestCaseReport.getId"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getId"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setId*"
  name: "setId"
  nameWithType: "TestCaseReport.setId"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setId"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getTestName*"
  name: "getTestName"
  nameWithType: "TestCaseReport.getTestName"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getTestName"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setTestName*"
  name: "setTestName"
  nameWithType: "TestCaseReport.setTestName"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setTestName"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getLog*"
  name: "getLog"
  nameWithType: "TestCaseReport.getLog"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getLog"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setLog*"
  name: "setLog"
  nameWithType: "TestCaseReport.setLog"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setLog"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.Result"
  name: "Result"
  nameWithType: "Result"
  fullName: "fr.axa.automation.webengine.generated.Result"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getResult*"
  name: "getResult"
  nameWithType: "TestCaseReport.getResult"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getResult"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setResult*"
  name: "setResult"
  nameWithType: "TestCaseReport.setResult"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setResult"
  package: "fr.axa.automation.webengine.generated"
- uid: "java.util.Calendar"
  spec.java:
  - uid: "java.util.Calendar"
    name: "Calendar"
    fullName: "java.util.Calendar"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getStartTime*"
  name: "getStartTime"
  nameWithType: "TestCaseReport.getStartTime"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getStartTime"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setStartTime*"
  name: "setStartTime"
  nameWithType: "TestCaseReport.setStartTime"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setStartTime"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getEndTime*"
  name: "getEndTime"
  nameWithType: "TestCaseReport.getEndTime"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getEndTime"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setEndTime*"
  name: "setEndTime"
  nameWithType: "TestCaseReport.setEndTime"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setEndTime"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.ArrayOfVariable"
  name: "ArrayOfVariable"
  nameWithType: "ArrayOfVariable"
  fullName: "fr.axa.automation.webengine.generated.ArrayOfVariable"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getTestData*"
  name: "getTestData"
  nameWithType: "TestCaseReport.getTestData"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getTestData"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setTestData*"
  name: "setTestData"
  nameWithType: "TestCaseReport.setTestData"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setTestData"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getContextValues*"
  name: "getContextValues"
  nameWithType: "TestCaseReport.getContextValues"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getContextValues"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setContextValues*"
  name: "setContextValues"
  nameWithType: "TestCaseReport.setContextValues"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setContextValues"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getGlobalContextValues*"
  name: "getGlobalContextValues"
  nameWithType: "TestCaseReport.getGlobalContextValues"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getGlobalContextValues"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setGlobalContextValues*"
  name: "setGlobalContextValues"
  nameWithType: "TestCaseReport.setGlobalContextValues"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setGlobalContextValues"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.ArrayOfActionReport"
  name: "ArrayOfActionReport"
  nameWithType: "ArrayOfActionReport"
  fullName: "fr.axa.automation.webengine.generated.ArrayOfActionReport"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.getActionReports*"
  name: "getActionReports"
  nameWithType: "TestCaseReport.getActionReports"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.getActionReports"
  package: "fr.axa.automation.webengine.generated"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport.setActionReports*"
  name: "setActionReports"
  nameWithType: "TestCaseReport.setActionReports"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport.setActionReports"
  package: "fr.axa.automation.webengine.generated"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
