### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor"
  id: "TestSuiteWebExecutor"
  parent: "fr.axa.automation.webengine.core"
  children:
  - "fr.axa.automation.webengine.core.TestSuiteWebExecutor.TestSuiteWebExecutor(fr.axa.automation.webengine.core.ITestCaseExecutor,fr.axa.automation.webengine.localtesting.ILocalTestingRunner,fr.axa.automation.webengine.logger.ILoggerService)"
  - "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isCanRunTestCase(java.lang.String,fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  - "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isTestCaseDefineInCommandLine(java.lang.String,fr.axa.automation.webengine.global.GlobalApplicationContext)"
  - "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isTestCaseExistInTestData(java.lang.String,fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  - "fr.axa.automation.webengine.core.TestSuiteWebExecutor.run(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.core.ITestSuite)"
  - "fr.axa.automation.webengine.core.TestSuiteWebExecutor.runTestCase(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,java.util.Map<java.lang.String,? extends fr.axa.automation.webengine.core.ITestCase>)"
  langs:
  - "java"
  name: "TestSuiteWebExecutor"
  nameWithType: "TestSuiteWebExecutor"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor"
  type: "Class"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public class TestSuiteWebExecutor extends AbstractTestSuiteExecutor implements ITestSuiteWebExecutor"
  inheritance:
  - "java.lang.Object"
  - "fr.axa.automation.webengine.core.AbstractTestSuiteExecutor"
  implements:
  - "fr.axa.automation.webengine.api.ITestSuiteWebExecutor"
  inheritedMembers:
  - "fr.axa.automation.webengine.core.AbstractTestSuiteExecutor.cleanUp(java.lang.Object)"
  - "fr.axa.automation.webengine.core.AbstractTestSuiteExecutor.initialize(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.TestSuiteWebExecutor(fr.axa.automation.webengine.core.ITestCaseExecutor,fr.axa.automation.webengine.localtesting.ILocalTestingRunner,fr.axa.automation.webengine.logger.ILoggerService)"
  id: "TestSuiteWebExecutor(fr.axa.automation.webengine.core.ITestCaseExecutor,fr.axa.automation.webengine.localtesting.ILocalTestingRunner,fr.axa.automation.webengine.logger.ILoggerService)"
  parent: "fr.axa.automation.webengine.core.TestSuiteWebExecutor"
  langs:
  - "java"
  name: "TestSuiteWebExecutor(ITestCaseExecutor testCaseExecutor, ILocalTestingRunner localTestingRunner, ILoggerService loggerService)"
  nameWithType: "TestSuiteWebExecutor.TestSuiteWebExecutor(ITestCaseExecutor testCaseExecutor, ILocalTestingRunner localTestingRunner, ILoggerService loggerService)"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.TestSuiteWebExecutor(ITestCaseExecutor testCaseExecutor, ILocalTestingRunner localTestingRunner, ILoggerService loggerService)"
  overload: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.TestSuiteWebExecutor*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public TestSuiteWebExecutor(ITestCaseExecutor testCaseExecutor, ILocalTestingRunner localTestingRunner, ILoggerService loggerService)"
    parameters:
    - id: "testCaseExecutor"
      type: "fr.axa.automation.webengine.core.ITestCaseExecutor"
    - id: "localTestingRunner"
      type: "fr.axa.automation.webengine.localtesting.ILocalTestingRunner"
    - id: "loggerService"
      type: "fr.axa.automation.webengine.logger.ILoggerService"
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isCanRunTestCase(java.lang.String,fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  id: "isCanRunTestCase(java.lang.String,fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  parent: "fr.axa.automation.webengine.core.TestSuiteWebExecutor"
  langs:
  - "java"
  name: "isCanRunTestCase(String testCaseName, AbstractGlobalApplicationContext globalAppContext)"
  nameWithType: "TestSuiteWebExecutor.isCanRunTestCase(String testCaseName, AbstractGlobalApplicationContext globalAppContext)"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isCanRunTestCase(String testCaseName, AbstractGlobalApplicationContext globalAppContext)"
  overload: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isCanRunTestCase*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected boolean isCanRunTestCase(String testCaseName, AbstractGlobalApplicationContext globalAppContext)"
    parameters:
    - id: "testCaseName"
      type: "java.lang.String"
    - id: "globalAppContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    return:
      type: "boolean"
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isTestCaseDefineInCommandLine(java.lang.String,fr.axa.automation.webengine.global.GlobalApplicationContext)"
  id: "isTestCaseDefineInCommandLine(java.lang.String,fr.axa.automation.webengine.global.GlobalApplicationContext)"
  parent: "fr.axa.automation.webengine.core.TestSuiteWebExecutor"
  langs:
  - "java"
  name: "isTestCaseDefineInCommandLine(String testCaseName, GlobalApplicationContext globalApplicationContext)"
  nameWithType: "TestSuiteWebExecutor.isTestCaseDefineInCommandLine(String testCaseName, GlobalApplicationContext globalApplicationContext)"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isTestCaseDefineInCommandLine(String testCaseName, GlobalApplicationContext globalApplicationContext)"
  overload: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isTestCaseDefineInCommandLine*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected boolean isTestCaseDefineInCommandLine(String testCaseName, GlobalApplicationContext globalApplicationContext)"
    parameters:
    - id: "testCaseName"
      type: "java.lang.String"
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.GlobalApplicationContext"
    return:
      type: "boolean"
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isTestCaseExistInTestData(java.lang.String,fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  id: "isTestCaseExistInTestData(java.lang.String,fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  parent: "fr.axa.automation.webengine.core.TestSuiteWebExecutor"
  langs:
  - "java"
  name: "isTestCaseExistInTestData(String testCaseName, AbstractGlobalApplicationContext globalAppContext)"
  nameWithType: "TestSuiteWebExecutor.isTestCaseExistInTestData(String testCaseName, AbstractGlobalApplicationContext globalAppContext)"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isTestCaseExistInTestData(String testCaseName, AbstractGlobalApplicationContext globalAppContext)"
  overload: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isTestCaseExistInTestData*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected boolean isTestCaseExistInTestData(String testCaseName, AbstractGlobalApplicationContext globalAppContext)"
    parameters:
    - id: "testCaseName"
      type: "java.lang.String"
    - id: "globalAppContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    return:
      type: "boolean"
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.run(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.core.ITestSuite)"
  id: "run(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.core.ITestSuite)"
  parent: "fr.axa.automation.webengine.core.TestSuiteWebExecutor"
  langs:
  - "java"
  name: "run(AbstractGlobalApplicationContext globalApplicationContext, ITestSuite testSuite)"
  nameWithType: "TestSuiteWebExecutor.run(AbstractGlobalApplicationContext globalApplicationContext, ITestSuite testSuite)"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.run(AbstractGlobalApplicationContext globalApplicationContext, ITestSuite testSuite)"
  overload: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.run*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public TestSuiteReport run(AbstractGlobalApplicationContext globalApplicationContext, ITestSuite testSuite)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testSuite"
      type: "fr.axa.automation.webengine.core.ITestSuite"
    return:
      type: "fr.axa.automation.webengine.generated.TestSuiteReport"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
  - type: "java.net.UnknownHostException"
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.runTestCase(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,java.util.Map<java.lang.String,? extends fr.axa.automation.webengine.core.ITestCase>)"
  id: "runTestCase(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,java.util.Map<java.lang.String,? extends fr.axa.automation.webengine.core.ITestCase>)"
  parent: "fr.axa.automation.webengine.core.TestSuiteWebExecutor"
  langs:
  - "java"
  name: "runTestCase(AbstractGlobalApplicationContext globalAppContext, Map<String,? extends ITestCase> testCaseList)"
  nameWithType: "TestSuiteWebExecutor.runTestCase(AbstractGlobalApplicationContext globalAppContext, Map<String,? extends ITestCase> testCaseList)"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.runTestCase(AbstractGlobalApplicationContext globalAppContext, Map<String,? extends ITestCase> testCaseList)"
  overload: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.runTestCase*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected List<TestCaseReport> runTestCase(AbstractGlobalApplicationContext globalAppContext, Map<String,? extends ITestCase> testCaseList)"
    parameters:
    - id: "globalAppContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testCaseList"
      type: "java.util.Map<java.lang.String,? extends fr.axa.automation.webengine.core.ITestCase>"
    return:
      type: "java.util.List<fr.axa.automation.webengine.generated.TestCaseReport>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
references:
- uid: "fr.axa.automation.webengine.core.ITestCaseExecutor"
  name: "ITestCaseExecutor"
  nameWithType: "ITestCaseExecutor"
  fullName: "fr.axa.automation.webengine.core.ITestCaseExecutor"
- uid: "fr.axa.automation.webengine.localtesting.ILocalTestingRunner"
  name: "ILocalTestingRunner"
  nameWithType: "ILocalTestingRunner"
  fullName: "fr.axa.automation.webengine.localtesting.ILocalTestingRunner"
- uid: "fr.axa.automation.webengine.logger.ILoggerService"
  name: "ILoggerService"
  nameWithType: "ILoggerService"
  fullName: "fr.axa.automation.webengine.logger.ILoggerService"
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.TestSuiteWebExecutor*"
  name: "TestSuiteWebExecutor"
  nameWithType: "TestSuiteWebExecutor.TestSuiteWebExecutor"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.TestSuiteWebExecutor"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.exception.WebEngineException"
  name: "WebEngineException"
  nameWithType: "WebEngineException"
  fullName: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "java.net.UnknownHostException"
  spec.java:
  - uid: "java.net.UnknownHostException"
    name: "UnknownHostException"
    fullName: "java.net.UnknownHostException"
- uid: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
  name: "AbstractGlobalApplicationContext"
  nameWithType: "AbstractGlobalApplicationContext"
  fullName: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
- uid: "fr.axa.automation.webengine.core.ITestSuite"
  name: "ITestSuite"
  nameWithType: "ITestSuite"
  fullName: "fr.axa.automation.webengine.core.ITestSuite"
- uid: "fr.axa.automation.webengine.generated.TestSuiteReport"
  name: "TestSuiteReport"
  nameWithType: "TestSuiteReport"
  fullName: "fr.axa.automation.webengine.generated.TestSuiteReport"
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.run*"
  name: "run"
  nameWithType: "TestSuiteWebExecutor.run"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.run"
  package: "fr.axa.automation.webengine.core"
- uid: "java.util.Map<java.lang.String,? extends fr.axa.automation.webengine.core.ITestCase>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "? extends fr.axa.automation.webengine.core.ITestCase"
    name: "ITestCase"
    fullName: "? extends fr.axa.automation.webengine.core.ITestCase"
  - name: ">"
    fullName: ">"
- uid: "java.util.List<fr.axa.automation.webengine.generated.TestCaseReport>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.webengine.generated.TestCaseReport"
    name: "TestCaseReport"
    fullName: "fr.axa.automation.webengine.generated.TestCaseReport"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.runTestCase*"
  name: "runTestCase"
  nameWithType: "TestSuiteWebExecutor.runTestCase"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.runTestCase"
  package: "fr.axa.automation.webengine.core"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isCanRunTestCase*"
  name: "isCanRunTestCase"
  nameWithType: "TestSuiteWebExecutor.isCanRunTestCase"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isCanRunTestCase"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isTestCaseExistInTestData*"
  name: "isTestCaseExistInTestData"
  nameWithType: "TestSuiteWebExecutor.isTestCaseExistInTestData"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isTestCaseExistInTestData"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.global.GlobalApplicationContext"
  name: "GlobalApplicationContext"
  nameWithType: "GlobalApplicationContext"
  fullName: "fr.axa.automation.webengine.global.GlobalApplicationContext"
- uid: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isTestCaseDefineInCommandLine*"
  name: "isTestCaseDefineInCommandLine"
  nameWithType: "TestSuiteWebExecutor.isTestCaseDefineInCommandLine"
  fullName: "fr.axa.automation.webengine.core.TestSuiteWebExecutor.isTestCaseDefineInCommandLine"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.AbstractTestSuiteExecutor"
  name: "AbstractTestSuiteExecutor"
  nameWithType: "AbstractTestSuiteExecutor"
  fullName: "fr.axa.automation.webengine.core.AbstractTestSuiteExecutor"
- uid: "fr.axa.automation.webengine.api.ITestSuiteWebExecutor"
  name: "ITestSuiteWebExecutor"
  nameWithType: "ITestSuiteWebExecutor"
  fullName: "fr.axa.automation.webengine.api.ITestSuiteWebExecutor"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "fr.axa.automation.webengine.core.AbstractTestSuiteExecutor.cleanUp(java.lang.Object)"
  name: "AbstractTestSuiteExecutor.cleanUp(Object)"
  nameWithType: "AbstractTestSuiteExecutor.cleanUp(Object)"
  fullName: "fr.axa.automation.webengine.core.AbstractTestSuiteExecutor.cleanUp(java.lang.Object)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "fr.axa.automation.webengine.core.AbstractTestSuiteExecutor.initialize(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  name: "AbstractTestSuiteExecutor.initialize(AbstractGlobalApplicationContext)"
  nameWithType: "AbstractTestSuiteExecutor.initialize(AbstractGlobalApplicationContext)"
  fullName: "fr.axa.automation.webengine.core.AbstractTestSuiteExecutor.initialize(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,? extends fr.axa.automation.webengine.core.ITestCase"
  name: "String,? extends ITestCase"
  nameWithType: "String,? extends ITestCase"
  fullName: "java.lang.String,? extends fr.axa.automation.webengine.core.ITestCase"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport"
  name: "TestCaseReport"
  nameWithType: "TestCaseReport"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport"
