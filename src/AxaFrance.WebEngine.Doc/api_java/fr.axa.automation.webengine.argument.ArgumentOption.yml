### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.argument.ArgumentOption"
  id: "ArgumentOption"
  parent: "fr.axa.automation.webengine.argument"
  children:
  - "fr.axa.automation.webengine.argument.ArgumentOption.BROWSER"
  - "fr.axa.automation.webengine.argument.ArgumentOption.CLOSE_BROWSER_AFTER_EACH_SCENARIO"
  - "fr.axa.automation.webengine.argument.ArgumentOption.DELETE_TEMP_FILE"
  - "fr.axa.automation.webengine.argument.ArgumentOption.ENVIRONMENT_VARIABLE"
  - "fr.axa.automation.webengine.argument.ArgumentOption.JUNIT"
  - "fr.axa.automation.webengine.argument.ArgumentOption.KEEPASS_FILE"
  - "fr.axa.automation.webengine.argument.ArgumentOption.KEEPASS_PASSWORD"
  - "fr.axa.automation.webengine.argument.ArgumentOption.MANUAL_DEBUG"
  - "fr.axa.automation.webengine.argument.ArgumentOption.OUTPUT_DIR"
  - "fr.axa.automation.webengine.argument.ArgumentOption.PLATFORM"
  - "fr.axa.automation.webengine.argument.ArgumentOption.PROJECT"
  - "fr.axa.automation.webengine.argument.ArgumentOption.PROPERTIES_FILE_LIST"
  - "fr.axa.automation.webengine.argument.ArgumentOption.SHOW_REPORT"
  - "fr.axa.automation.webengine.argument.ArgumentOption.TEST_CASE_AND_DATA_TEST_COLUMN_NAME"
  - "fr.axa.automation.webengine.argument.ArgumentOption.TEST_CASE_TO_RUN"
  - "fr.axa.automation.webengine.argument.ArgumentOption.TEST_DATA"
  - "fr.axa.automation.webengine.argument.ArgumentOption.valueOf(java.lang.String)"
  - "fr.axa.automation.webengine.argument.ArgumentOption.values()"
  langs:
  - "java"
  name: "ArgumentOption"
  nameWithType: "ArgumentOption"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption"
  type: "Enum"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public enum ArgumentOption extends Enum<ArgumentOption>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.ArgumentOption()"
  id: "ArgumentOption()"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "ArgumentOption()"
  nameWithType: "ArgumentOption.ArgumentOption()"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.ArgumentOption()"
  overload: "fr.axa.automation.webengine.argument.ArgumentOption.ArgumentOption*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "private ArgumentOption()"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.BROWSER"
  id: "BROWSER"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "BROWSER"
  nameWithType: "ArgumentOption.BROWSER"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.BROWSER"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption BROWSER"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.CLOSE_BROWSER_AFTER_EACH_SCENARIO"
  id: "CLOSE_BROWSER_AFTER_EACH_SCENARIO"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "CLOSE_BROWSER_AFTER_EACH_SCENARIO"
  nameWithType: "ArgumentOption.CLOSE_BROWSER_AFTER_EACH_SCENARIO"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.CLOSE_BROWSER_AFTER_EACH_SCENARIO"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption CLOSE_BROWSER_AFTER_EACH_SCENARIO"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.DELETE_TEMP_FILE"
  id: "DELETE_TEMP_FILE"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "DELETE_TEMP_FILE"
  nameWithType: "ArgumentOption.DELETE_TEMP_FILE"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.DELETE_TEMP_FILE"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption DELETE_TEMP_FILE"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.ENVIRONMENT_VARIABLE"
  id: "ENVIRONMENT_VARIABLE"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "ENVIRONMENT_VARIABLE"
  nameWithType: "ArgumentOption.ENVIRONMENT_VARIABLE"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.ENVIRONMENT_VARIABLE"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption ENVIRONMENT_VARIABLE"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.JUNIT"
  id: "JUNIT"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "JUNIT"
  nameWithType: "ArgumentOption.JUNIT"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.JUNIT"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption JUNIT"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.KEEPASS_FILE"
  id: "KEEPASS_FILE"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "KEEPASS_FILE"
  nameWithType: "ArgumentOption.KEEPASS_FILE"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.KEEPASS_FILE"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption KEEPASS_FILE"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.KEEPASS_PASSWORD"
  id: "KEEPASS_PASSWORD"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "KEEPASS_PASSWORD"
  nameWithType: "ArgumentOption.KEEPASS_PASSWORD"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.KEEPASS_PASSWORD"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption KEEPASS_PASSWORD"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.MANUAL_DEBUG"
  id: "MANUAL_DEBUG"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "MANUAL_DEBUG"
  nameWithType: "ArgumentOption.MANUAL_DEBUG"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.MANUAL_DEBUG"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption MANUAL_DEBUG"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.OUTPUT_DIR"
  id: "OUTPUT_DIR"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "OUTPUT_DIR"
  nameWithType: "ArgumentOption.OUTPUT_DIR"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.OUTPUT_DIR"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption OUTPUT_DIR"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.PLATFORM"
  id: "PLATFORM"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "PLATFORM"
  nameWithType: "ArgumentOption.PLATFORM"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.PLATFORM"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption PLATFORM"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.PROJECT"
  id: "PROJECT"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "PROJECT"
  nameWithType: "ArgumentOption.PROJECT"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.PROJECT"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption PROJECT"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.PROPERTIES_FILE_LIST"
  id: "PROPERTIES_FILE_LIST"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "PROPERTIES_FILE_LIST"
  nameWithType: "ArgumentOption.PROPERTIES_FILE_LIST"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.PROPERTIES_FILE_LIST"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption PROPERTIES_FILE_LIST"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.SHOW_REPORT"
  id: "SHOW_REPORT"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "SHOW_REPORT"
  nameWithType: "ArgumentOption.SHOW_REPORT"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.SHOW_REPORT"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption SHOW_REPORT"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.TEST_CASE_AND_DATA_TEST_COLUMN_NAME"
  id: "TEST_CASE_AND_DATA_TEST_COLUMN_NAME"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "TEST_CASE_AND_DATA_TEST_COLUMN_NAME"
  nameWithType: "ArgumentOption.TEST_CASE_AND_DATA_TEST_COLUMN_NAME"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.TEST_CASE_AND_DATA_TEST_COLUMN_NAME"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption TEST_CASE_AND_DATA_TEST_COLUMN_NAME"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.TEST_CASE_TO_RUN"
  id: "TEST_CASE_TO_RUN"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "TEST_CASE_TO_RUN"
  nameWithType: "ArgumentOption.TEST_CASE_TO_RUN"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.TEST_CASE_TO_RUN"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption TEST_CASE_TO_RUN"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.TEST_DATA"
  id: "TEST_DATA"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "TEST_DATA"
  nameWithType: "ArgumentOption.TEST_DATA"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.TEST_DATA"
  type: "Field"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static final ArgumentOption TEST_DATA"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "ArgumentOption.valueOf(String name)"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.valueOf(String name)"
  overload: "fr.axa.automation.webengine.argument.ArgumentOption.valueOf*"
  type: "Method"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static ArgumentOption valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.values()"
  id: "values()"
  parent: "fr.axa.automation.webengine.argument.ArgumentOption"
  langs:
  - "java"
  name: "values()"
  nameWithType: "ArgumentOption.values()"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.values()"
  overload: "fr.axa.automation.webengine.argument.ArgumentOption.values*"
  type: "Method"
  package: "fr.axa.automation.webengine.argument"
  syntax:
    content: "public static ArgumentOption[] values()"
    return:
      type: "fr.axa.automation.webengine.argument.ArgumentOption[]"
references:
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.ArgumentOption*"
  name: "ArgumentOption"
  nameWithType: "ArgumentOption.ArgumentOption"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.ArgumentOption"
  package: "fr.axa.automation.webengine.argument"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption[]"
  spec.java:
  - uid: "fr.axa.automation.webengine.argument.ArgumentOption"
    name: "ArgumentOption"
    fullName: "fr.axa.automation.webengine.argument.ArgumentOption"
  - name: "[]"
    fullName: "[]"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.values*"
  name: "values"
  nameWithType: "ArgumentOption.values"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.values"
  package: "fr.axa.automation.webengine.argument"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.argument.ArgumentOption.valueOf*"
  name: "valueOf"
  nameWithType: "ArgumentOption.valueOf"
  fullName: "fr.axa.automation.webengine.argument.ArgumentOption.valueOf"
  package: "fr.axa.automation.webengine.argument"
- uid: "java.lang.Enum<fr.axa.automation.webengine.argument.ArgumentOption>"
  name: "Enum<ArgumentOption>"
  nameWithType: "Enum<ArgumentOption>"
  fullName: "java.lang.Enum<fr.axa.automation.webengine.argument.ArgumentOption>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
