### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.core.AbstractPageModel"
  id: "AbstractPageModel"
  parent: "fr.axa.automation.webengine.core"
  children:
  - "fr.axa.automation.webengine.core.AbstractPageModel.AbstractPageModel()"
  - "fr.axa.automation.webengine.core.AbstractPageModel.maximize()"
  - "fr.axa.automation.webengine.core.AbstractPageModel.populateDriver(org.openqa.selenium.WebDriver)"
  - "fr.axa.automation.webengine.core.AbstractPageModel.sync(long...)"
  - "fr.axa.automation.webengine.core.AbstractPageModel.waitInMillisecondes(java.lang.Long)"
  langs:
  - "java"
  name: "AbstractPageModel"
  nameWithType: "AbstractPageModel"
  fullName: "fr.axa.automation.webengine.core.AbstractPageModel"
  type: "Class"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public abstract class AbstractPageModel"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.core.AbstractPageModel.AbstractPageModel()"
  id: "AbstractPageModel()"
  parent: "fr.axa.automation.webengine.core.AbstractPageModel"
  langs:
  - "java"
  name: "AbstractPageModel()"
  nameWithType: "AbstractPageModel.AbstractPageModel()"
  fullName: "fr.axa.automation.webengine.core.AbstractPageModel.AbstractPageModel()"
  overload: "fr.axa.automation.webengine.core.AbstractPageModel.AbstractPageModel*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public AbstractPageModel()"
- uid: "fr.axa.automation.webengine.core.AbstractPageModel.maximize()"
  id: "maximize()"
  parent: "fr.axa.automation.webengine.core.AbstractPageModel"
  langs:
  - "java"
  name: "maximize()"
  nameWithType: "AbstractPageModel.maximize()"
  fullName: "fr.axa.automation.webengine.core.AbstractPageModel.maximize()"
  overload: "fr.axa.automation.webengine.core.AbstractPageModel.maximize*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public void maximize()"
  exceptions:
  - type: "java.lang.InterruptedException"
- uid: "fr.axa.automation.webengine.core.AbstractPageModel.populateDriver(org.openqa.selenium.WebDriver)"
  id: "populateDriver(org.openqa.selenium.WebDriver)"
  parent: "fr.axa.automation.webengine.core.AbstractPageModel"
  langs:
  - "java"
  name: "populateDriver(WebDriver webDriver)"
  nameWithType: "AbstractPageModel.populateDriver(WebDriver webDriver)"
  fullName: "fr.axa.automation.webengine.core.AbstractPageModel.populateDriver(WebDriver webDriver)"
  overload: "fr.axa.automation.webengine.core.AbstractPageModel.populateDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected void populateDriver(WebDriver webDriver)"
    parameters:
    - id: "webDriver"
      type: "org.openqa.selenium.WebDriver"
  exceptions:
  - type: "java.lang.ClassNotFoundException"
  - type: "java.lang.IllegalAccessException"
  - type: "java.lang.InstantiationException"
- uid: "fr.axa.automation.webengine.core.AbstractPageModel.sync(long...)"
  id: "sync(long...)"
  parent: "fr.axa.automation.webengine.core.AbstractPageModel"
  langs:
  - "java"
  name: "sync(long[] timeoutInSecond)"
  nameWithType: "AbstractPageModel.sync(long[] timeoutInSecond)"
  fullName: "fr.axa.automation.webengine.core.AbstractPageModel.sync(long[] timeoutInSecond)"
  overload: "fr.axa.automation.webengine.core.AbstractPageModel.sync*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public void sync(long[] timeoutInSecond)"
    parameters:
    - id: "timeoutInSecond"
      type: "long[]"
  exceptions:
  - type: "java.lang.InterruptedException"
- uid: "fr.axa.automation.webengine.core.AbstractPageModel.waitInMillisecondes(java.lang.Long)"
  id: "waitInMillisecondes(java.lang.Long)"
  parent: "fr.axa.automation.webengine.core.AbstractPageModel"
  langs:
  - "java"
  name: "waitInMillisecondes(Long milliseconds)"
  nameWithType: "AbstractPageModel.waitInMillisecondes(Long milliseconds)"
  fullName: "fr.axa.automation.webengine.core.AbstractPageModel.waitInMillisecondes(Long milliseconds)"
  overload: "fr.axa.automation.webengine.core.AbstractPageModel.waitInMillisecondes*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public void waitInMillisecondes(Long milliseconds)"
    parameters:
    - id: "milliseconds"
      type: "java.lang.Long"
  exceptions:
  - type: "java.lang.InterruptedException"
references:
- uid: "fr.axa.automation.webengine.core.AbstractPageModel.AbstractPageModel*"
  name: "AbstractPageModel"
  nameWithType: "AbstractPageModel.AbstractPageModel"
  fullName: "fr.axa.automation.webengine.core.AbstractPageModel.AbstractPageModel"
  package: "fr.axa.automation.webengine.core"
- uid: "java.lang.ClassNotFoundException"
  spec.java:
  - uid: "java.lang.ClassNotFoundException"
    name: "ClassNotFoundException"
    fullName: "java.lang.ClassNotFoundException"
- uid: "java.lang.IllegalAccessException"
  spec.java:
  - uid: "java.lang.IllegalAccessException"
    name: "IllegalAccessException"
    fullName: "java.lang.IllegalAccessException"
- uid: "java.lang.InstantiationException"
  spec.java:
  - uid: "java.lang.InstantiationException"
    name: "InstantiationException"
    fullName: "java.lang.InstantiationException"
- uid: "org.openqa.selenium.WebDriver"
  spec.java:
  - uid: "org.openqa.selenium.WebDriver"
    name: "WebDriver"
    fullName: "org.openqa.selenium.WebDriver"
- uid: "fr.axa.automation.webengine.core.AbstractPageModel.populateDriver*"
  name: "populateDriver"
  nameWithType: "AbstractPageModel.populateDriver"
  fullName: "fr.axa.automation.webengine.core.AbstractPageModel.populateDriver"
  package: "fr.axa.automation.webengine.core"
- uid: "java.lang.InterruptedException"
  spec.java:
  - uid: "java.lang.InterruptedException"
    name: "InterruptedException"
    fullName: "java.lang.InterruptedException"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "fr.axa.automation.webengine.core.AbstractPageModel.waitInMillisecondes*"
  name: "waitInMillisecondes"
  nameWithType: "AbstractPageModel.waitInMillisecondes"
  fullName: "fr.axa.automation.webengine.core.AbstractPageModel.waitInMillisecondes"
  package: "fr.axa.automation.webengine.core"
- uid: "long[]"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
  - name: "[]"
    fullName: "[]"
- uid: "fr.axa.automation.webengine.core.AbstractPageModel.sync*"
  name: "sync"
  nameWithType: "AbstractPageModel.sync"
  fullName: "fr.axa.automation.webengine.core.AbstractPageModel.sync"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.AbstractPageModel.maximize*"
  name: "maximize"
  nameWithType: "AbstractPageModel.maximize"
  fullName: "fr.axa.automation.webengine.core.AbstractPageModel.maximize"
  package: "fr.axa.automation.webengine.core"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
