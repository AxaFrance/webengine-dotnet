### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.util.ListUtil"
  id: "ListUtil"
  parent: "fr.axa.automation.webengine.util"
  children:
  - "fr.axa.automation.webengine.util.ListUtil.<T>findDuplicateElements(java.util.Collection<T>)"
  - "fr.axa.automation.webengine.util.ListUtil.<T>findNumberOfElements(java.util.Collection<T>)"
  - "fr.axa.automation.webengine.util.ListUtil.<T>getLastElement(java.util.Collection<T>)"
  - "fr.axa.automation.webengine.util.ListUtil.findFirst(java.util.List<java.lang.String>,java.lang.String)"
  - "fr.axa.automation.webengine.util.ListUtil.getClasses(java.lang.Object[])"
  langs:
  - "java"
  name: "ListUtil"
  nameWithType: "ListUtil"
  fullName: "fr.axa.automation.webengine.util.ListUtil"
  type: "Class"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public final class ListUtil"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.util.ListUtil.<T>findDuplicateElements(java.util.Collection<T>)"
  id: "<T>findDuplicateElements(java.util.Collection<T>)"
  parent: "fr.axa.automation.webengine.util.ListUtil"
  langs:
  - "java"
  name: "<T>findDuplicateElements(Collection<T> list)"
  nameWithType: "ListUtil.<T>findDuplicateElements(Collection<T> list)"
  fullName: "fr.axa.automation.webengine.util.ListUtil.<T>findDuplicateElements(Collection<T> list)"
  overload: "fr.axa.automation.webengine.util.ListUtil.findDuplicateElements*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Set<T> <T>findDuplicateElements(Collection<T> list)"
    parameters:
    - id: "list"
      type: "java.util.Collection<T>"
    return:
      type: "java.util.Set<T>"
- uid: "fr.axa.automation.webengine.util.ListUtil.<T>findNumberOfElements(java.util.Collection<T>)"
  id: "<T>findNumberOfElements(java.util.Collection<T>)"
  parent: "fr.axa.automation.webengine.util.ListUtil"
  langs:
  - "java"
  name: "<T>findNumberOfElements(Collection<T> list)"
  nameWithType: "ListUtil.<T>findNumberOfElements(Collection<T> list)"
  fullName: "fr.axa.automation.webengine.util.ListUtil.<T>findNumberOfElements(Collection<T> list)"
  overload: "fr.axa.automation.webengine.util.ListUtil.findNumberOfElements*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Map<T,Integer> <T>findNumberOfElements(Collection<T> list)"
    parameters:
    - id: "list"
      type: "java.util.Collection<T>"
    return:
      type: "java.util.Map<T,java.lang.Integer>"
- uid: "fr.axa.automation.webengine.util.ListUtil.<T>getLastElement(java.util.Collection<T>)"
  id: "<T>getLastElement(java.util.Collection<T>)"
  parent: "fr.axa.automation.webengine.util.ListUtil"
  langs:
  - "java"
  name: "<T>getLastElement(Collection<T> list)"
  nameWithType: "ListUtil.<T>getLastElement(Collection<T> list)"
  fullName: "fr.axa.automation.webengine.util.ListUtil.<T>getLastElement(Collection<T> list)"
  overload: "fr.axa.automation.webengine.util.ListUtil.getLastElement*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Optional<T> <T>getLastElement(Collection<T> list)"
    parameters:
    - id: "list"
      type: "java.util.Collection<T>"
    return:
      type: "java.util.Optional<T>"
- uid: "fr.axa.automation.webengine.util.ListUtil.ListUtil()"
  id: "ListUtil()"
  parent: "fr.axa.automation.webengine.util.ListUtil"
  langs:
  - "java"
  name: "ListUtil()"
  nameWithType: "ListUtil.ListUtil()"
  fullName: "fr.axa.automation.webengine.util.ListUtil.ListUtil()"
  overload: "fr.axa.automation.webengine.util.ListUtil.ListUtil*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "private ListUtil()"
- uid: "fr.axa.automation.webengine.util.ListUtil.findFirst(java.util.List<java.lang.String>,java.lang.String)"
  id: "findFirst(java.util.List<java.lang.String>,java.lang.String)"
  parent: "fr.axa.automation.webengine.util.ListUtil"
  langs:
  - "java"
  name: "findFirst(List<String> list, String search)"
  nameWithType: "ListUtil.findFirst(List<String> list, String search)"
  fullName: "fr.axa.automation.webengine.util.ListUtil.findFirst(List<String> list, String search)"
  overload: "fr.axa.automation.webengine.util.ListUtil.findFirst*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Optional<String> findFirst(List<String> list, String search)"
    parameters:
    - id: "list"
      type: "java.util.List<java.lang.String>"
    - id: "search"
      type: "java.lang.String"
    return:
      type: "java.util.Optional<java.lang.String>"
- uid: "fr.axa.automation.webengine.util.ListUtil.getClasses(java.lang.Object[])"
  id: "getClasses(java.lang.Object[])"
  parent: "fr.axa.automation.webengine.util.ListUtil"
  langs:
  - "java"
  name: "getClasses(Object[] parameters)"
  nameWithType: "ListUtil.getClasses(Object[] parameters)"
  fullName: "fr.axa.automation.webengine.util.ListUtil.getClasses(Object[] parameters)"
  overload: "fr.axa.automation.webengine.util.ListUtil.getClasses*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static List<Class> getClasses(Object[] parameters)"
    parameters:
    - id: "parameters"
      type: "java.lang.Object[]"
    return:
      type: "java.util.List<java.lang.Class>"
references:
- uid: "fr.axa.automation.webengine.util.ListUtil.ListUtil*"
  name: "ListUtil"
  nameWithType: "ListUtil.ListUtil"
  fullName: "fr.axa.automation.webengine.util.ListUtil.ListUtil"
  package: "fr.axa.automation.webengine.util"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.Optional<java.lang.String>"
  spec.java:
  - uid: "java.util.Optional"
    name: "Optional"
    fullName: "java.util.Optional"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.util.ListUtil.findFirst*"
  name: "findFirst"
  nameWithType: "ListUtil.findFirst"
  fullName: "fr.axa.automation.webengine.util.ListUtil.findFirst"
  package: "fr.axa.automation.webengine.util"
- uid: "java.util.Collection<T>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "java.util.Optional<T>"
  spec.java:
  - uid: "java.util.Optional"
    name: "Optional"
    fullName: "java.util.Optional"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.util.ListUtil.getLastElement*"
  name: "<T>getLastElement"
  nameWithType: "ListUtil.<T>getLastElement"
  fullName: "fr.axa.automation.webengine.util.ListUtil.<T>getLastElement"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.Object[]"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: "[]"
    fullName: "[]"
- uid: "java.util.List<java.lang.Class>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.util.ListUtil.getClasses*"
  name: "getClasses"
  nameWithType: "ListUtil.getClasses"
  fullName: "fr.axa.automation.webengine.util.ListUtil.getClasses"
  package: "fr.axa.automation.webengine.util"
- uid: "java.util.Set<T>"
  spec.java:
  - uid: "java.util.Set"
    name: "Set"
    fullName: "java.util.Set"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.util.ListUtil.findDuplicateElements*"
  name: "<T>findDuplicateElements"
  nameWithType: "ListUtil.<T>findDuplicateElements"
  fullName: "fr.axa.automation.webengine.util.ListUtil.<T>findDuplicateElements"
  package: "fr.axa.automation.webengine.util"
- uid: "java.util.Map<T,java.lang.Integer>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ","
    fullName: ","
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.util.ListUtil.findNumberOfElements*"
  name: "<T>findNumberOfElements"
  nameWithType: "ListUtil.<T>findNumberOfElements"
  fullName: "fr.axa.automation.webengine.util.ListUtil.<T>findNumberOfElements"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.util.Optional"
  name: "Optional"
  nameWithType: "Optional"
  fullName: "java.util.Optional"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.util.Collection"
  name: "Collection"
  nameWithType: "Collection"
  fullName: "java.util.Collection"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "java.util.Set"
  name: "Set"
  nameWithType: "Set"
  fullName: "java.util.Set"
- uid: "T,java.lang.Integer"
  name: "T,Integer"
  nameWithType: "T,Integer"
  fullName: "T,java.lang.Integer"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
