### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper"
  id: "TestCaseReportHelper"
  parent: "fr.axa.automation.webengine.report.helper"
  children:
  - "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.createTestCaseReport(java.lang.String)"
  - "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.createTestCaseReport(java.lang.String,java.time.LocalDateTime)"
  langs:
  - "java"
  name: "TestCaseReportHelper"
  nameWithType: "TestCaseReportHelper"
  fullName: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper"
  type: "Class"
  package: "fr.axa.automation.webengine.report.helper"
  syntax:
    content: "public final class TestCaseReportHelper"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.TestCaseReportHelper()"
  id: "TestCaseReportHelper()"
  parent: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper"
  langs:
  - "java"
  name: "TestCaseReportHelper()"
  nameWithType: "TestCaseReportHelper.TestCaseReportHelper()"
  fullName: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.TestCaseReportHelper()"
  overload: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.TestCaseReportHelper*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.report.helper"
  syntax:
    content: "private TestCaseReportHelper()"
- uid: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.createTestCaseReport(java.lang.String)"
  id: "createTestCaseReport(java.lang.String)"
  parent: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper"
  langs:
  - "java"
  name: "createTestCaseReport(String testCaseName)"
  nameWithType: "TestCaseReportHelper.createTestCaseReport(String testCaseName)"
  fullName: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.createTestCaseReport(String testCaseName)"
  overload: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.createTestCaseReport*"
  type: "Method"
  package: "fr.axa.automation.webengine.report.helper"
  syntax:
    content: "public static TestCaseReport createTestCaseReport(String testCaseName)"
    parameters:
    - id: "testCaseName"
      type: "java.lang.String"
    return:
      type: "fr.axa.automation.webengine.generated.TestCaseReport"
- uid: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.createTestCaseReport(java.lang.String,java.time.LocalDateTime)"
  id: "createTestCaseReport(java.lang.String,java.time.LocalDateTime)"
  parent: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper"
  langs:
  - "java"
  name: "createTestCaseReport(String testCaseName, LocalDateTime localDateTime)"
  nameWithType: "TestCaseReportHelper.createTestCaseReport(String testCaseName, LocalDateTime localDateTime)"
  fullName: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.createTestCaseReport(String testCaseName, LocalDateTime localDateTime)"
  overload: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.createTestCaseReport*"
  type: "Method"
  package: "fr.axa.automation.webengine.report.helper"
  syntax:
    content: "public static TestCaseReport createTestCaseReport(String testCaseName, LocalDateTime localDateTime)"
    parameters:
    - id: "testCaseName"
      type: "java.lang.String"
    - id: "localDateTime"
      type: "java.time.LocalDateTime"
    return:
      type: "fr.axa.automation.webengine.generated.TestCaseReport"
references:
- uid: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.TestCaseReportHelper*"
  name: "TestCaseReportHelper"
  nameWithType: "TestCaseReportHelper.TestCaseReportHelper"
  fullName: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.TestCaseReportHelper"
  package: "fr.axa.automation.webengine.report.helper"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.generated.TestCaseReport"
  name: "TestCaseReport"
  nameWithType: "TestCaseReport"
  fullName: "fr.axa.automation.webengine.generated.TestCaseReport"
- uid: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.createTestCaseReport*"
  name: "createTestCaseReport"
  nameWithType: "TestCaseReportHelper.createTestCaseReport"
  fullName: "fr.axa.automation.webengine.report.helper.TestCaseReportHelper.createTestCaseReport"
  package: "fr.axa.automation.webengine.report.helper"
- uid: "java.time.LocalDateTime"
  spec.java:
  - uid: "java.time.LocalDateTime"
    name: "LocalDateTime"
    fullName: "java.time.LocalDateTime"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
