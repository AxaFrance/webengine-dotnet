### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.junit.generated.ObjectFactory"
  id: "ObjectFactory"
  parent: "fr.axa.automation.junit.generated"
  children:
  - "fr.axa.automation.junit.generated.ObjectFactory.ObjectFactory()"
  - "fr.axa.automation.junit.generated.ObjectFactory.createTestsuite()"
  - "fr.axa.automation.junit.generated.ObjectFactory.createTestsuite(fr.axa.automation.junit.generated.Testsuite)"
  - "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteProperties()"
  - "fr.axa.automation.junit.generated.ObjectFactory.createTestsuitePropertiesProperty()"
  - "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcase()"
  - "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseError()"
  - "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseFailure()"
  - "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseSkipped()"
  - "fr.axa.automation.junit.generated.ObjectFactory.createTestsuites()"
  - "fr.axa.automation.junit.generated.ObjectFactory.createTestsuitesTestsuite()"
  langs:
  - "java"
  name: "ObjectFactory"
  nameWithType: "ObjectFactory"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory"
  type: "Class"
  package: "fr.axa.automation.junit.generated"
  summary: "This object contains factory methods for each Java content interface and Java element interface generated in the fr.axa.automation.junit.generated package.\n\nAn ObjectFactory allows you to programatically construct new instances of the Java representation for XML content. The Java representation of XML content can consist of schema derived interfaces and classes representing the binding of schema type definitions, element declarations and model groups. Factory methods for each of these are provided in this class."
  syntax:
    content: "public class ObjectFactory"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.ObjectFactory()"
  id: "ObjectFactory()"
  parent: "fr.axa.automation.junit.generated.ObjectFactory"
  langs:
  - "java"
  name: "ObjectFactory()"
  nameWithType: "ObjectFactory.ObjectFactory()"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.ObjectFactory()"
  overload: "fr.axa.automation.junit.generated.ObjectFactory.ObjectFactory*"
  type: "Constructor"
  package: "fr.axa.automation.junit.generated"
  summary: "Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: fr.axa.automation.junit.generated"
  syntax:
    content: "public ObjectFactory()"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuite()"
  id: "createTestsuite()"
  parent: "fr.axa.automation.junit.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestsuite()"
  nameWithType: "ObjectFactory.createTestsuite()"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuite()"
  overload: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuite*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.junit.generated.Testsuite\" data-throw-if-not-resolved=\"false\">fr.axa.automation.junit.generated.Testsuite</xref>"
  syntax:
    content: "public Testsuite createTestsuite()"
    return:
      type: "fr.axa.automation.junit.generated.Testsuite"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuite(fr.axa.automation.junit.generated.Testsuite)"
  id: "createTestsuite(fr.axa.automation.junit.generated.Testsuite)"
  parent: "fr.axa.automation.junit.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestsuite(Testsuite value)"
  nameWithType: "ObjectFactory.createTestsuite(Testsuite value)"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuite(Testsuite value)"
  overload: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuite*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Create an instance of <xref uid=\"javax.xml.bind.JAXBElement\" data-throw-if-not-resolved=\"false\">JAXBElement</xref>`<`<xref uid=\"fr.axa.automation.junit.generated.Testsuite\" data-throw-if-not-resolved=\"false\">fr.axa.automation.junit.generated.Testsuite</xref>`>`\\}"
  syntax:
    content: "public JAXBElement<Testsuite> createTestsuite(Testsuite value)"
    parameters:
    - id: "value"
      type: "fr.axa.automation.junit.generated.Testsuite"
    return:
      type: "javax.xml.bind.JAXBElement<fr.axa.automation.junit.generated.Testsuite>"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteProperties()"
  id: "createTestsuiteProperties()"
  parent: "fr.axa.automation.junit.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestsuiteProperties()"
  nameWithType: "ObjectFactory.createTestsuiteProperties()"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteProperties()"
  overload: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteProperties*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.junit.generated.Testsuite.Properties\" data-throw-if-not-resolved=\"false\">fr.axa.automation.junit.generated.Testsuite.Properties</xref>"
  syntax:
    content: "public Testsuite.Properties createTestsuiteProperties()"
    return:
      type: "fr.axa.automation.junit.generated.Testsuite.Properties"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuitePropertiesProperty()"
  id: "createTestsuitePropertiesProperty()"
  parent: "fr.axa.automation.junit.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestsuitePropertiesProperty()"
  nameWithType: "ObjectFactory.createTestsuitePropertiesProperty()"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuitePropertiesProperty()"
  overload: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuitePropertiesProperty*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.junit.generated.Testsuite.Properties.Property\" data-throw-if-not-resolved=\"false\">fr.axa.automation.junit.generated.Testsuite.Properties.Property</xref>"
  syntax:
    content: "public Testsuite.Properties.Property createTestsuitePropertiesProperty()"
    return:
      type: "fr.axa.automation.junit.generated.Testsuite.Properties.Property"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcase()"
  id: "createTestsuiteTestcase()"
  parent: "fr.axa.automation.junit.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestsuiteTestcase()"
  nameWithType: "ObjectFactory.createTestsuiteTestcase()"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcase()"
  overload: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcase*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.junit.generated.Testsuite.Testcase\" data-throw-if-not-resolved=\"false\">fr.axa.automation.junit.generated.Testsuite.Testcase</xref>"
  syntax:
    content: "public Testsuite.Testcase createTestsuiteTestcase()"
    return:
      type: "fr.axa.automation.junit.generated.Testsuite.Testcase"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseError()"
  id: "createTestsuiteTestcaseError()"
  parent: "fr.axa.automation.junit.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestsuiteTestcaseError()"
  nameWithType: "ObjectFactory.createTestsuiteTestcaseError()"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseError()"
  overload: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseError*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.junit.generated.Testsuite.Testcase.Error\" data-throw-if-not-resolved=\"false\">fr.axa.automation.junit.generated.Testsuite.Testcase.Error</xref>"
  syntax:
    content: "public Testsuite.Testcase.Error createTestsuiteTestcaseError()"
    return:
      type: "fr.axa.automation.junit.generated.Testsuite.Testcase.Error"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseFailure()"
  id: "createTestsuiteTestcaseFailure()"
  parent: "fr.axa.automation.junit.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestsuiteTestcaseFailure()"
  nameWithType: "ObjectFactory.createTestsuiteTestcaseFailure()"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseFailure()"
  overload: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseFailure*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.junit.generated.Testsuite.Testcase.Failure\" data-throw-if-not-resolved=\"false\">fr.axa.automation.junit.generated.Testsuite.Testcase.Failure</xref>"
  syntax:
    content: "public Testsuite.Testcase.Failure createTestsuiteTestcaseFailure()"
    return:
      type: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseSkipped()"
  id: "createTestsuiteTestcaseSkipped()"
  parent: "fr.axa.automation.junit.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestsuiteTestcaseSkipped()"
  nameWithType: "ObjectFactory.createTestsuiteTestcaseSkipped()"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseSkipped()"
  overload: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseSkipped*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.junit.generated.Testsuite.Testcase.Skipped\" data-throw-if-not-resolved=\"false\">fr.axa.automation.junit.generated.Testsuite.Testcase.Skipped</xref>"
  syntax:
    content: "public Testsuite.Testcase.Skipped createTestsuiteTestcaseSkipped()"
    return:
      type: "fr.axa.automation.junit.generated.Testsuite.Testcase.Skipped"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuites()"
  id: "createTestsuites()"
  parent: "fr.axa.automation.junit.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestsuites()"
  nameWithType: "ObjectFactory.createTestsuites()"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuites()"
  overload: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuites*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.junit.generated.Testsuites\" data-throw-if-not-resolved=\"false\">Testsuites</xref>"
  syntax:
    content: "public Testsuites createTestsuites()"
    return:
      type: "fr.axa.automation.junit.generated.Testsuites"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuitesTestsuite()"
  id: "createTestsuitesTestsuite()"
  parent: "fr.axa.automation.junit.generated.ObjectFactory"
  langs:
  - "java"
  name: "createTestsuitesTestsuite()"
  nameWithType: "ObjectFactory.createTestsuitesTestsuite()"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuitesTestsuite()"
  overload: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuitesTestsuite*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Create an instance of <xref uid=\"fr.axa.automation.junit.generated.Testsuites.Testsuite\" data-throw-if-not-resolved=\"false\">Testsuites.Testsuite</xref>"
  syntax:
    content: "public Testsuites.Testsuite createTestsuitesTestsuite()"
    return:
      type: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
references:
- uid: "fr.axa.automation.junit.generated.ObjectFactory.ObjectFactory*"
  name: "ObjectFactory"
  nameWithType: "ObjectFactory.ObjectFactory"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.ObjectFactory"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase"
  name: "Testsuite.Testcase"
  nameWithType: "Testsuite.Testcase"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcase*"
  name: "createTestsuiteTestcase"
  nameWithType: "ObjectFactory.createTestsuiteTestcase"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcase"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties.Property"
  name: "Testsuite.Properties.Property"
  nameWithType: "Testsuite.Properties.Property"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties.Property"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuitePropertiesProperty*"
  name: "createTestsuitePropertiesProperty"
  nameWithType: "ObjectFactory.createTestsuitePropertiesProperty"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuitePropertiesProperty"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Properties"
  name: "Testsuite.Properties"
  nameWithType: "Testsuite.Properties"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Properties"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteProperties*"
  name: "createTestsuiteProperties"
  nameWithType: "ObjectFactory.createTestsuiteProperties"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteProperties"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
  name: "Testsuite.Testcase.Failure"
  nameWithType: "Testsuite.Testcase.Failure"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Failure"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseFailure*"
  name: "createTestsuiteTestcaseFailure"
  nameWithType: "ObjectFactory.createTestsuiteTestcaseFailure"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseFailure"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Skipped"
  name: "Testsuite.Testcase.Skipped"
  nameWithType: "Testsuite.Testcase.Skipped"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Skipped"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseSkipped*"
  name: "createTestsuiteTestcaseSkipped"
  nameWithType: "ObjectFactory.createTestsuiteTestcaseSkipped"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseSkipped"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite.Testcase.Error"
  name: "Testsuite.Testcase.Error"
  nameWithType: "Testsuite.Testcase.Error"
  fullName: "fr.axa.automation.junit.generated.Testsuite.Testcase.Error"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseError*"
  name: "createTestsuiteTestcaseError"
  nameWithType: "ObjectFactory.createTestsuiteTestcaseError"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuiteTestcaseError"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite"
  name: "Testsuite"
  nameWithType: "Testsuite"
  fullName: "fr.axa.automation.junit.generated.Testsuite"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuite*"
  name: "createTestsuite"
  nameWithType: "ObjectFactory.createTestsuite"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuite"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  name: "Testsuites.Testsuite"
  nameWithType: "Testsuites.Testsuite"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuitesTestsuite*"
  name: "createTestsuitesTestsuite"
  nameWithType: "ObjectFactory.createTestsuitesTestsuite"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuitesTestsuite"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuites"
  name: "Testsuites"
  nameWithType: "Testsuites"
  fullName: "fr.axa.automation.junit.generated.Testsuites"
- uid: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuites*"
  name: "createTestsuites"
  nameWithType: "ObjectFactory.createTestsuites"
  fullName: "fr.axa.automation.junit.generated.ObjectFactory.createTestsuites"
  package: "fr.axa.automation.junit.generated"
- uid: "javax.xml.bind.JAXBElement<fr.axa.automation.junit.generated.Testsuite>"
  spec.java:
  - uid: "javax.xml.bind.JAXBElement"
    name: "JAXBElement"
    fullName: "javax.xml.bind.JAXBElement"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.junit.generated.Testsuite"
    name: "Testsuite"
    fullName: "fr.axa.automation.junit.generated.Testsuite"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "javax.xml.bind.JAXBElement"
  name: "JAXBElement"
  nameWithType: "JAXBElement"
  fullName: "javax.xml.bind.JAXBElement"
