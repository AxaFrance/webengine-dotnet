### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.listener.WebengineReportListener"
  id: "WebengineReportListener"
  parent: "fr.axa.automation.webengine.listener"
  children:
  - "fr.axa.automation.webengine.listener.WebengineReportListener.WebengineReportListener()"
  - "fr.axa.automation.webengine.listener.WebengineReportListener.setEventPublisher(io.cucumber.plugin.event.EventPublisher)"
  langs:
  - "java"
  name: "WebengineReportListener"
  nameWithType: "WebengineReportListener"
  fullName: "fr.axa.automation.webengine.listener.WebengineReportListener"
  type: "Class"
  package: "fr.axa.automation.webengine.listener"
  syntax:
    content: "public class WebengineReportListener implements ConcurrentEventListener"
  inheritance:
  - "java.lang.Object"
  implements:
  - "io.cucumber.plugin.ConcurrentEventListener"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.listener.WebengineReportListener.WebengineReportListener()"
  id: "WebengineReportListener()"
  parent: "fr.axa.automation.webengine.listener.WebengineReportListener"
  langs:
  - "java"
  name: "WebengineReportListener()"
  nameWithType: "WebengineReportListener.WebengineReportListener()"
  fullName: "fr.axa.automation.webengine.listener.WebengineReportListener.WebengineReportListener()"
  overload: "fr.axa.automation.webengine.listener.WebengineReportListener.WebengineReportListener*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.listener"
  syntax:
    content: "public WebengineReportListener()"
- uid: "fr.axa.automation.webengine.listener.WebengineReportListener.setEventPublisher(io.cucumber.plugin.event.EventPublisher)"
  id: "setEventPublisher(io.cucumber.plugin.event.EventPublisher)"
  parent: "fr.axa.automation.webengine.listener.WebengineReportListener"
  langs:
  - "java"
  name: "setEventPublisher(EventPublisher eventPublisher)"
  nameWithType: "WebengineReportListener.setEventPublisher(EventPublisher eventPublisher)"
  fullName: "fr.axa.automation.webengine.listener.WebengineReportListener.setEventPublisher(EventPublisher eventPublisher)"
  overload: "fr.axa.automation.webengine.listener.WebengineReportListener.setEventPublisher*"
  type: "Method"
  package: "fr.axa.automation.webengine.listener"
  syntax:
    content: "public void setEventPublisher(EventPublisher eventPublisher)"
    parameters:
    - id: "eventPublisher"
      type: "io.cucumber.plugin.event.EventPublisher"
references:
- uid: "fr.axa.automation.webengine.listener.WebengineReportListener.WebengineReportListener*"
  name: "WebengineReportListener"
  nameWithType: "WebengineReportListener.WebengineReportListener"
  fullName: "fr.axa.automation.webengine.listener.WebengineReportListener.WebengineReportListener"
  package: "fr.axa.automation.webengine.listener"
- uid: "io.cucumber.plugin.event.EventPublisher"
  spec.java:
  - uid: "io.cucumber.plugin.event.EventPublisher"
    name: "EventPublisher"
    fullName: "io.cucumber.plugin.event.EventPublisher"
- uid: "fr.axa.automation.webengine.listener.WebengineReportListener.setEventPublisher*"
  name: "setEventPublisher"
  nameWithType: "WebengineReportListener.setEventPublisher"
  fullName: "fr.axa.automation.webengine.listener.WebengineReportListener.setEventPublisher"
  package: "fr.axa.automation.webengine.listener"
- uid: "io.cucumber.plugin.ConcurrentEventListener"
  name: "ConcurrentEventListener"
  nameWithType: "ConcurrentEventListener"
  fullName: "io.cucumber.plugin.ConcurrentEventListener"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
