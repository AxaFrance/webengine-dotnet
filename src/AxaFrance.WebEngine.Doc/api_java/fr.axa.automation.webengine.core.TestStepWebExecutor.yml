### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.core.TestStepWebExecutor"
  id: "TestStepWebExecutor"
  parent: "fr.axa.automation.webengine.core"
  children:
  - "fr.axa.automation.webengine.core.TestStepWebExecutor.TestStepWebExecutor(fr.axa.automation.webengine.core.IActionExecutor)"
  - "fr.axa.automation.webengine.core.TestStepWebExecutor.getAction(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.core.ITestStep)"
  - "fr.axa.automation.webengine.core.TestStepWebExecutor.getActionClass(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.core.ITestStep)"
  - "fr.axa.automation.webengine.core.TestStepWebExecutor.getActionContext(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext)"
  - "fr.axa.automation.webengine.core.TestStepWebExecutor.run(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.core.ITestStep)"
  langs:
  - "java"
  name: "TestStepWebExecutor"
  nameWithType: "TestStepWebExecutor"
  fullName: "fr.axa.automation.webengine.core.TestStepWebExecutor"
  type: "Class"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public class TestStepWebExecutor extends AbstractTestStepExecutor implements ITestStepWebExecutor"
  inheritance:
  - "java.lang.Object"
  - "fr.axa.automation.webengine.core.AbstractTestStepExecutor"
  implements:
  - "fr.axa.automation.webengine.api.ITestStepWebExecutor"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.core.TestStepWebExecutor.TestStepWebExecutor(fr.axa.automation.webengine.core.IActionExecutor)"
  id: "TestStepWebExecutor(fr.axa.automation.webengine.core.IActionExecutor)"
  parent: "fr.axa.automation.webengine.core.TestStepWebExecutor"
  langs:
  - "java"
  name: "TestStepWebExecutor(IActionExecutor actionExecutor)"
  nameWithType: "TestStepWebExecutor.TestStepWebExecutor(IActionExecutor actionExecutor)"
  fullName: "fr.axa.automation.webengine.core.TestStepWebExecutor.TestStepWebExecutor(IActionExecutor actionExecutor)"
  overload: "fr.axa.automation.webengine.core.TestStepWebExecutor.TestStepWebExecutor*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public TestStepWebExecutor(IActionExecutor actionExecutor)"
    parameters:
    - id: "actionExecutor"
      type: "fr.axa.automation.webengine.core.IActionExecutor"
- uid: "fr.axa.automation.webengine.core.TestStepWebExecutor.getAction(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.core.ITestStep)"
  id: "getAction(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.core.ITestStep)"
  parent: "fr.axa.automation.webengine.core.TestStepWebExecutor"
  langs:
  - "java"
  name: "getAction(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, ITestStep testStep)"
  nameWithType: "TestStepWebExecutor.getAction(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, ITestStep testStep)"
  fullName: "fr.axa.automation.webengine.core.TestStepWebExecutor.getAction(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, ITestStep testStep)"
  overload: "fr.axa.automation.webengine.core.TestStepWebExecutor.getAction*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected IAction getAction(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, ITestStep testStep)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testCaseContext"
      type: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
    - id: "testStep"
      type: "fr.axa.automation.webengine.core.ITestStep"
    return:
      type: "fr.axa.automation.webengine.core.IAction"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.core.TestStepWebExecutor.getActionClass(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.core.ITestStep)"
  id: "getActionClass(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.core.ITestStep)"
  parent: "fr.axa.automation.webengine.core.TestStepWebExecutor"
  langs:
  - "java"
  name: "getActionClass(AbstractGlobalApplicationContext globalApplicationContext, ITestStep testStep)"
  nameWithType: "TestStepWebExecutor.getActionClass(AbstractGlobalApplicationContext globalApplicationContext, ITestStep testStep)"
  fullName: "fr.axa.automation.webengine.core.TestStepWebExecutor.getActionClass(AbstractGlobalApplicationContext globalApplicationContext, ITestStep testStep)"
  overload: "fr.axa.automation.webengine.core.TestStepWebExecutor.getActionClass*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected Class<? extends IAction> getActionClass(AbstractGlobalApplicationContext globalApplicationContext, ITestStep testStep)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testStep"
      type: "fr.axa.automation.webengine.core.ITestStep"
    return:
      type: "java.lang.Class<? extends fr.axa.automation.webengine.core.IAction>"
- uid: "fr.axa.automation.webengine.core.TestStepWebExecutor.getActionContext(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext)"
  id: "getActionContext(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext)"
  parent: "fr.axa.automation.webengine.core.TestStepWebExecutor"
  langs:
  - "java"
  name: "getActionContext(AbstractGlobalApplicationContext globalAppContext, AbstractTestCaseContext testCaseContext)"
  nameWithType: "TestStepWebExecutor.getActionContext(AbstractGlobalApplicationContext globalAppContext, AbstractTestCaseContext testCaseContext)"
  fullName: "fr.axa.automation.webengine.core.TestStepWebExecutor.getActionContext(AbstractGlobalApplicationContext globalAppContext, AbstractTestCaseContext testCaseContext)"
  overload: "fr.axa.automation.webengine.core.TestStepWebExecutor.getActionContext*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected ActionContext getActionContext(AbstractGlobalApplicationContext globalAppContext, AbstractTestCaseContext testCaseContext)"
    parameters:
    - id: "globalAppContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testCaseContext"
      type: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
    return:
      type: "fr.axa.automation.webengine.global.ActionContext"
- uid: "fr.axa.automation.webengine.core.TestStepWebExecutor.run(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.core.ITestStep)"
  id: "run(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.core.ITestStep)"
  parent: "fr.axa.automation.webengine.core.TestStepWebExecutor"
  langs:
  - "java"
  name: "run(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, ITestStep testStep)"
  nameWithType: "TestStepWebExecutor.run(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, ITestStep testStep)"
  fullName: "fr.axa.automation.webengine.core.TestStepWebExecutor.run(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, ITestStep testStep)"
  overload: "fr.axa.automation.webengine.core.TestStepWebExecutor.run*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public ActionReportDetail run(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, ITestStep testStep)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testCaseContext"
      type: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
    - id: "testStep"
      type: "fr.axa.automation.webengine.core.ITestStep"
    return:
      type: "fr.axa.automation.webengine.report.object.ActionReportDetail"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
references:
- uid: "fr.axa.automation.webengine.core.IActionExecutor"
  name: "IActionExecutor"
  nameWithType: "IActionExecutor"
  fullName: "fr.axa.automation.webengine.core.IActionExecutor"
- uid: "fr.axa.automation.webengine.core.TestStepWebExecutor.TestStepWebExecutor*"
  name: "TestStepWebExecutor"
  nameWithType: "TestStepWebExecutor.TestStepWebExecutor"
  fullName: "fr.axa.automation.webengine.core.TestStepWebExecutor.TestStepWebExecutor"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.exception.WebEngineException"
  name: "WebEngineException"
  nameWithType: "WebEngineException"
  fullName: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
  name: "AbstractGlobalApplicationContext"
  nameWithType: "AbstractGlobalApplicationContext"
  fullName: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
- uid: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
  name: "AbstractTestCaseContext"
  nameWithType: "AbstractTestCaseContext"
  fullName: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
- uid: "fr.axa.automation.webengine.core.ITestStep"
  name: "ITestStep"
  nameWithType: "ITestStep"
  fullName: "fr.axa.automation.webengine.core.ITestStep"
- uid: "fr.axa.automation.webengine.report.object.ActionReportDetail"
  name: "ActionReportDetail"
  nameWithType: "ActionReportDetail"
  fullName: "fr.axa.automation.webengine.report.object.ActionReportDetail"
- uid: "fr.axa.automation.webengine.core.TestStepWebExecutor.run*"
  name: "run"
  nameWithType: "TestStepWebExecutor.run"
  fullName: "fr.axa.automation.webengine.core.TestStepWebExecutor.run"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.IAction"
  name: "IAction"
  nameWithType: "IAction"
  fullName: "fr.axa.automation.webengine.core.IAction"
- uid: "fr.axa.automation.webengine.core.TestStepWebExecutor.getAction*"
  name: "getAction"
  nameWithType: "TestStepWebExecutor.getAction"
  fullName: "fr.axa.automation.webengine.core.TestStepWebExecutor.getAction"
  package: "fr.axa.automation.webengine.core"
- uid: "java.lang.Class<? extends fr.axa.automation.webengine.core.IAction>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "? extends fr.axa.automation.webengine.core.IAction"
    name: "IAction"
    fullName: "? extends fr.axa.automation.webengine.core.IAction"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.core.TestStepWebExecutor.getActionClass*"
  name: "getActionClass"
  nameWithType: "TestStepWebExecutor.getActionClass"
  fullName: "fr.axa.automation.webengine.core.TestStepWebExecutor.getActionClass"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.global.ActionContext"
  name: "ActionContext"
  nameWithType: "ActionContext"
  fullName: "fr.axa.automation.webengine.global.ActionContext"
- uid: "fr.axa.automation.webengine.core.TestStepWebExecutor.getActionContext*"
  name: "getActionContext"
  nameWithType: "TestStepWebExecutor.getActionContext"
  fullName: "fr.axa.automation.webengine.core.TestStepWebExecutor.getActionContext"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.AbstractTestStepExecutor"
  name: "AbstractTestStepExecutor"
  nameWithType: "AbstractTestStepExecutor"
  fullName: "fr.axa.automation.webengine.core.AbstractTestStepExecutor"
- uid: "fr.axa.automation.webengine.api.ITestStepWebExecutor"
  name: "ITestStepWebExecutor"
  nameWithType: "ITestStepWebExecutor"
  fullName: "fr.axa.automation.webengine.api.ITestStepWebExecutor"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "? extends fr.axa.automation.webengine.core.IAction"
  name: "? extends IAction"
  nameWithType: "? extends IAction"
  fullName: "? extends fr.axa.automation.webengine.core.IAction"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
