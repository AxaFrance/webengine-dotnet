### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.util.BrowserFactory"
  id: "BrowserFactory"
  parent: "fr.axa.automation.webengine.util"
  children:
  - "fr.axa.automation.webengine.util.BrowserFactory.<T>getAppiumDriver(fr.axa.automation.webengine.properties.GlobalConfiguration)"
  - "fr.axa.automation.webengine.util.BrowserFactory.getDesktopDriver(fr.axa.automation.webengine.properties.GlobalConfiguration,boolean)"
  - "fr.axa.automation.webengine.util.BrowserFactory.getDriver(fr.axa.automation.webengine.properties.GlobalConfiguration)"
  - "fr.axa.automation.webengine.util.BrowserFactory.getDriver(fr.axa.automation.webengine.properties.GlobalConfiguration,boolean)"
  - "fr.axa.automation.webengine.util.BrowserFactory.getIncognitoDriver(fr.axa.automation.webengine.properties.GlobalConfiguration)"
  - "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(fr.axa.automation.webengine.global.BrowserDetail)"
  - "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(fr.axa.automation.webengine.global.Platform,fr.axa.automation.webengine.global.Browser,boolean)"
  - "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(fr.axa.automation.webengine.global.Platform,fr.axa.automation.webengine.global.Browser,boolean,java.util.List<java.lang.String>)"
  - "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(java.lang.String,java.lang.String,boolean)"
  - "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(java.lang.String,java.lang.String,boolean,java.util.List<java.lang.String>)"
  langs:
  - "java"
  name: "BrowserFactory"
  nameWithType: "BrowserFactory"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory"
  type: "Class"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public final class BrowserFactory"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.<T>getAppiumDriver(fr.axa.automation.webengine.properties.GlobalConfiguration)"
  id: "<T>getAppiumDriver(fr.axa.automation.webengine.properties.GlobalConfiguration)"
  parent: "fr.axa.automation.webengine.util.BrowserFactory"
  langs:
  - "java"
  name: "<T>getAppiumDriver(GlobalConfiguration globalConfiguration)"
  nameWithType: "BrowserFactory.<T>getAppiumDriver(GlobalConfiguration globalConfiguration)"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.<T>getAppiumDriver(GlobalConfiguration globalConfiguration)"
  overload: "fr.axa.automation.webengine.util.BrowserFactory.getAppiumDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Optional<T> <T>getAppiumDriver(GlobalConfiguration globalConfiguration)"
    parameters:
    - id: "globalConfiguration"
      type: "fr.axa.automation.webengine.properties.GlobalConfiguration"
    return:
      type: "java.util.Optional<T>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.BrowserFactory()"
  id: "BrowserFactory()"
  parent: "fr.axa.automation.webengine.util.BrowserFactory"
  langs:
  - "java"
  name: "BrowserFactory()"
  nameWithType: "BrowserFactory.BrowserFactory()"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.BrowserFactory()"
  overload: "fr.axa.automation.webengine.util.BrowserFactory.BrowserFactory*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "private BrowserFactory()"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getDesktopDriver(fr.axa.automation.webengine.properties.GlobalConfiguration,boolean)"
  id: "getDesktopDriver(fr.axa.automation.webengine.properties.GlobalConfiguration,boolean)"
  parent: "fr.axa.automation.webengine.util.BrowserFactory"
  langs:
  - "java"
  name: "getDesktopDriver(GlobalConfiguration globalConfiguration, boolean deleteCookie)"
  nameWithType: "BrowserFactory.getDesktopDriver(GlobalConfiguration globalConfiguration, boolean deleteCookie)"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getDesktopDriver(GlobalConfiguration globalConfiguration, boolean deleteCookie)"
  overload: "fr.axa.automation.webengine.util.BrowserFactory.getDesktopDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Optional<WebDriver> getDesktopDriver(GlobalConfiguration globalConfiguration, boolean deleteCookie)"
    parameters:
    - id: "globalConfiguration"
      type: "fr.axa.automation.webengine.properties.GlobalConfiguration"
    - id: "deleteCookie"
      type: "boolean"
    return:
      type: "java.util.Optional<org.openqa.selenium.WebDriver>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getDriver(fr.axa.automation.webengine.properties.GlobalConfiguration)"
  id: "getDriver(fr.axa.automation.webengine.properties.GlobalConfiguration)"
  parent: "fr.axa.automation.webengine.util.BrowserFactory"
  langs:
  - "java"
  name: "getDriver(GlobalConfiguration globalConfiguration)"
  nameWithType: "BrowserFactory.getDriver(GlobalConfiguration globalConfiguration)"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getDriver(GlobalConfiguration globalConfiguration)"
  overload: "fr.axa.automation.webengine.util.BrowserFactory.getDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Optional<WebDriver> getDriver(GlobalConfiguration globalConfiguration)"
    parameters:
    - id: "globalConfiguration"
      type: "fr.axa.automation.webengine.properties.GlobalConfiguration"
    return:
      type: "java.util.Optional<org.openqa.selenium.WebDriver>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getDriver(fr.axa.automation.webengine.properties.GlobalConfiguration,boolean)"
  id: "getDriver(fr.axa.automation.webengine.properties.GlobalConfiguration,boolean)"
  parent: "fr.axa.automation.webengine.util.BrowserFactory"
  langs:
  - "java"
  name: "getDriver(GlobalConfiguration globalConfiguration, boolean deleteCookie)"
  nameWithType: "BrowserFactory.getDriver(GlobalConfiguration globalConfiguration, boolean deleteCookie)"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getDriver(GlobalConfiguration globalConfiguration, boolean deleteCookie)"
  overload: "fr.axa.automation.webengine.util.BrowserFactory.getDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Optional<WebDriver> getDriver(GlobalConfiguration globalConfiguration, boolean deleteCookie)"
    parameters:
    - id: "globalConfiguration"
      type: "fr.axa.automation.webengine.properties.GlobalConfiguration"
    - id: "deleteCookie"
      type: "boolean"
    return:
      type: "java.util.Optional<org.openqa.selenium.WebDriver>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getIncognitoDriver(fr.axa.automation.webengine.properties.GlobalConfiguration)"
  id: "getIncognitoDriver(fr.axa.automation.webengine.properties.GlobalConfiguration)"
  parent: "fr.axa.automation.webengine.util.BrowserFactory"
  langs:
  - "java"
  name: "getIncognitoDriver(GlobalConfiguration globalConfiguration)"
  nameWithType: "BrowserFactory.getIncognitoDriver(GlobalConfiguration globalConfiguration)"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getIncognitoDriver(GlobalConfiguration globalConfiguration)"
  overload: "fr.axa.automation.webengine.util.BrowserFactory.getIncognitoDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Optional<WebDriver> getIncognitoDriver(GlobalConfiguration globalConfiguration)"
    parameters:
    - id: "globalConfiguration"
      type: "fr.axa.automation.webengine.properties.GlobalConfiguration"
    return:
      type: "java.util.Optional<org.openqa.selenium.WebDriver>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(fr.axa.automation.webengine.global.BrowserDetail)"
  id: "getWebDriver(fr.axa.automation.webengine.global.BrowserDetail)"
  parent: "fr.axa.automation.webengine.util.BrowserFactory"
  langs:
  - "java"
  name: "getWebDriver(BrowserDetail browserDetail)"
  nameWithType: "BrowserFactory.getWebDriver(BrowserDetail browserDetail)"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(BrowserDetail browserDetail)"
  overload: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Optional<WebDriver> getWebDriver(BrowserDetail browserDetail)"
    parameters:
    - id: "browserDetail"
      type: "fr.axa.automation.webengine.global.BrowserDetail"
    return:
      type: "java.util.Optional<org.openqa.selenium.WebDriver>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(fr.axa.automation.webengine.global.Platform,fr.axa.automation.webengine.global.Browser,boolean)"
  id: "getWebDriver(fr.axa.automation.webengine.global.Platform,fr.axa.automation.webengine.global.Browser,boolean)"
  parent: "fr.axa.automation.webengine.util.BrowserFactory"
  langs:
  - "java"
  name: "getWebDriver(Platform platform, Browser browser, boolean deleteCookie)"
  nameWithType: "BrowserFactory.getWebDriver(Platform platform, Browser browser, boolean deleteCookie)"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(Platform platform, Browser browser, boolean deleteCookie)"
  overload: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Optional<WebDriver> getWebDriver(Platform platform, Browser browser, boolean deleteCookie)"
    parameters:
    - id: "platform"
      type: "fr.axa.automation.webengine.global.Platform"
    - id: "browser"
      type: "fr.axa.automation.webengine.global.Browser"
    - id: "deleteCookie"
      type: "boolean"
    return:
      type: "java.util.Optional<org.openqa.selenium.WebDriver>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(fr.axa.automation.webengine.global.Platform,fr.axa.automation.webengine.global.Browser,boolean,java.util.List<java.lang.String>)"
  id: "getWebDriver(fr.axa.automation.webengine.global.Platform,fr.axa.automation.webengine.global.Browser,boolean,java.util.List<java.lang.String>)"
  parent: "fr.axa.automation.webengine.util.BrowserFactory"
  langs:
  - "java"
  name: "getWebDriver(Platform platform, Browser browser, boolean deleteCookie, List<String> browserOptionList)"
  nameWithType: "BrowserFactory.getWebDriver(Platform platform, Browser browser, boolean deleteCookie, List<String> browserOptionList)"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(Platform platform, Browser browser, boolean deleteCookie, List<String> browserOptionList)"
  overload: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Optional<WebDriver> getWebDriver(Platform platform, Browser browser, boolean deleteCookie, List<String> browserOptionList)"
    parameters:
    - id: "platform"
      type: "fr.axa.automation.webengine.global.Platform"
    - id: "browser"
      type: "fr.axa.automation.webengine.global.Browser"
    - id: "deleteCookie"
      type: "boolean"
    - id: "browserOptionList"
      type: "java.util.List<java.lang.String>"
    return:
      type: "java.util.Optional<org.openqa.selenium.WebDriver>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(java.lang.String,java.lang.String,boolean)"
  id: "getWebDriver(java.lang.String,java.lang.String,boolean)"
  parent: "fr.axa.automation.webengine.util.BrowserFactory"
  langs:
  - "java"
  name: "getWebDriver(String platform, String browser, boolean deleteCookie)"
  nameWithType: "BrowserFactory.getWebDriver(String platform, String browser, boolean deleteCookie)"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(String platform, String browser, boolean deleteCookie)"
  overload: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Optional<WebDriver> getWebDriver(String platform, String browser, boolean deleteCookie)"
    parameters:
    - id: "platform"
      type: "java.lang.String"
    - id: "browser"
      type: "java.lang.String"
    - id: "deleteCookie"
      type: "boolean"
    return:
      type: "java.util.Optional<org.openqa.selenium.WebDriver>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(java.lang.String,java.lang.String,boolean,java.util.List<java.lang.String>)"
  id: "getWebDriver(java.lang.String,java.lang.String,boolean,java.util.List<java.lang.String>)"
  parent: "fr.axa.automation.webengine.util.BrowserFactory"
  langs:
  - "java"
  name: "getWebDriver(String platform, String browser, boolean deleteCookie, List<String> browserOptionList)"
  nameWithType: "BrowserFactory.getWebDriver(String platform, String browser, boolean deleteCookie, List<String> browserOptionList)"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver(String platform, String browser, boolean deleteCookie, List<String> browserOptionList)"
  overload: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static Optional<WebDriver> getWebDriver(String platform, String browser, boolean deleteCookie, List<String> browserOptionList)"
    parameters:
    - id: "platform"
      type: "java.lang.String"
    - id: "browser"
      type: "java.lang.String"
    - id: "deleteCookie"
      type: "boolean"
    - id: "browserOptionList"
      type: "java.util.List<java.lang.String>"
    return:
      type: "java.util.Optional<org.openqa.selenium.WebDriver>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
references:
- uid: "fr.axa.automation.webengine.util.BrowserFactory.BrowserFactory*"
  name: "BrowserFactory"
  nameWithType: "BrowserFactory.BrowserFactory"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.BrowserFactory"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.exception.WebEngineException"
  name: "WebEngineException"
  nameWithType: "WebEngineException"
  fullName: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration"
  name: "GlobalConfiguration"
  nameWithType: "GlobalConfiguration"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration"
- uid: "java.util.Optional<org.openqa.selenium.WebDriver>"
  spec.java:
  - uid: "java.util.Optional"
    name: "Optional"
    fullName: "java.util.Optional"
  - name: "<"
    fullName: "<"
  - uid: "org.openqa.selenium.WebDriver"
    name: "WebDriver"
    fullName: "org.openqa.selenium.WebDriver"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getDriver*"
  name: "getDriver"
  nameWithType: "BrowserFactory.getDriver"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getDriver"
  package: "fr.axa.automation.webengine.util"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getIncognitoDriver*"
  name: "getIncognitoDriver"
  nameWithType: "BrowserFactory.getIncognitoDriver"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getIncognitoDriver"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getDesktopDriver*"
  name: "getDesktopDriver"
  nameWithType: "BrowserFactory.getDesktopDriver"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getDesktopDriver"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver*"
  name: "getWebDriver"
  nameWithType: "BrowserFactory.getWebDriver"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.getWebDriver"
  package: "fr.axa.automation.webengine.util"
- uid: "fr.axa.automation.webengine.global.Platform"
  name: "Platform"
  nameWithType: "Platform"
  fullName: "fr.axa.automation.webengine.global.Platform"
- uid: "fr.axa.automation.webengine.global.Browser"
  name: "Browser"
  nameWithType: "Browser"
  fullName: "fr.axa.automation.webengine.global.Browser"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.global.BrowserDetail"
  name: "BrowserDetail"
  nameWithType: "BrowserDetail"
  fullName: "fr.axa.automation.webengine.global.BrowserDetail"
- uid: "java.util.Optional<T>"
  spec.java:
  - uid: "java.util.Optional"
    name: "Optional"
    fullName: "java.util.Optional"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.util.BrowserFactory.getAppiumDriver*"
  name: "<T>getAppiumDriver"
  nameWithType: "BrowserFactory.<T>getAppiumDriver"
  fullName: "fr.axa.automation.webengine.util.BrowserFactory.<T>getAppiumDriver"
  package: "fr.axa.automation.webengine.util"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "org.openqa.selenium.WebDriver"
  name: "WebDriver"
  nameWithType: "WebDriver"
  fullName: "org.openqa.selenium.WebDriver"
- uid: "java.util.Optional"
  name: "Optional"
  nameWithType: "Optional"
  fullName: "java.util.Optional"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
