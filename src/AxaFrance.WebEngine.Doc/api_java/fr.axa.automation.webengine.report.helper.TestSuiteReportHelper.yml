### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper"
  id: "TestSuiteReportHelper"
  parent: "fr.axa.automation.webengine.report.helper"
  children:
  - "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.clone(fr.axa.automation.webengine.generated.TestSuiteReport)"
  - "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.getTestSuiteReport(fr.axa.automation.webengine.report.object.TestSuiteReportInformation)"
  langs:
  - "java"
  name: "TestSuiteReportHelper"
  nameWithType: "TestSuiteReportHelper"
  fullName: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper"
  type: "Class"
  package: "fr.axa.automation.webengine.report.helper"
  syntax:
    content: "public final class TestSuiteReportHelper"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.TestSuiteReportHelper()"
  id: "TestSuiteReportHelper()"
  parent: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper"
  langs:
  - "java"
  name: "TestSuiteReportHelper()"
  nameWithType: "TestSuiteReportHelper.TestSuiteReportHelper()"
  fullName: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.TestSuiteReportHelper()"
  overload: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.TestSuiteReportHelper*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.report.helper"
  syntax:
    content: "private TestSuiteReportHelper()"
- uid: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.clone(fr.axa.automation.webengine.generated.TestSuiteReport)"
  id: "clone(fr.axa.automation.webengine.generated.TestSuiteReport)"
  parent: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper"
  langs:
  - "java"
  name: "clone(TestSuiteReport testSuiteReport)"
  nameWithType: "TestSuiteReportHelper.clone(TestSuiteReport testSuiteReport)"
  fullName: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.clone(TestSuiteReport testSuiteReport)"
  overload: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.clone*"
  type: "Method"
  package: "fr.axa.automation.webengine.report.helper"
  syntax:
    content: "public static TestSuiteReport clone(TestSuiteReport testSuiteReport)"
    parameters:
    - id: "testSuiteReport"
      type: "fr.axa.automation.webengine.generated.TestSuiteReport"
    return:
      type: "fr.axa.automation.webengine.generated.TestSuiteReport"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.getTestSuiteReport(fr.axa.automation.webengine.report.object.TestSuiteReportInformation)"
  id: "getTestSuiteReport(fr.axa.automation.webengine.report.object.TestSuiteReportInformation)"
  parent: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper"
  langs:
  - "java"
  name: "getTestSuiteReport(TestSuiteReportInformation testSuiteReportInformation)"
  nameWithType: "TestSuiteReportHelper.getTestSuiteReport(TestSuiteReportInformation testSuiteReportInformation)"
  fullName: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.getTestSuiteReport(TestSuiteReportInformation testSuiteReportInformation)"
  overload: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.getTestSuiteReport*"
  type: "Method"
  package: "fr.axa.automation.webengine.report.helper"
  syntax:
    content: "public static TestSuiteReport getTestSuiteReport(TestSuiteReportInformation testSuiteReportInformation)"
    parameters:
    - id: "testSuiteReportInformation"
      type: "fr.axa.automation.webengine.report.object.TestSuiteReportInformation"
    return:
      type: "fr.axa.automation.webengine.generated.TestSuiteReport"
  exceptions:
  - type: "java.net.UnknownHostException"
references:
- uid: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.TestSuiteReportHelper*"
  name: "TestSuiteReportHelper"
  nameWithType: "TestSuiteReportHelper.TestSuiteReportHelper"
  fullName: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.TestSuiteReportHelper"
  package: "fr.axa.automation.webengine.report.helper"
- uid: "java.net.UnknownHostException"
  spec.java:
  - uid: "java.net.UnknownHostException"
    name: "UnknownHostException"
    fullName: "java.net.UnknownHostException"
- uid: "fr.axa.automation.webengine.report.object.TestSuiteReportInformation"
  name: "TestSuiteReportInformation"
  nameWithType: "TestSuiteReportInformation"
  fullName: "fr.axa.automation.webengine.report.object.TestSuiteReportInformation"
- uid: "fr.axa.automation.webengine.generated.TestSuiteReport"
  name: "TestSuiteReport"
  nameWithType: "TestSuiteReport"
  fullName: "fr.axa.automation.webengine.generated.TestSuiteReport"
- uid: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.getTestSuiteReport*"
  name: "getTestSuiteReport"
  nameWithType: "TestSuiteReportHelper.getTestSuiteReport"
  fullName: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.getTestSuiteReport"
  package: "fr.axa.automation.webengine.report.helper"
- uid: "fr.axa.automation.webengine.exception.WebEngineException"
  name: "WebEngineException"
  nameWithType: "WebEngineException"
  fullName: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.clone*"
  name: "clone"
  nameWithType: "TestSuiteReportHelper.clone"
  fullName: "fr.axa.automation.webengine.report.helper.TestSuiteReportHelper.clone"
  package: "fr.axa.automation.webengine.report.helper"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
