### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.helper.WebdriverHelper"
  id: "WebdriverHelper"
  parent: "fr.axa.automation.webengine.helper"
  children:
  - "fr.axa.automation.webengine.helper.WebdriverHelper.getDefaultDriver()"
  - "fr.axa.automation.webengine.helper.WebdriverHelper.getDriver()"
  - "fr.axa.automation.webengine.helper.WebdriverHelper.initializeDriver()"
  - "fr.axa.automation.webengine.helper.WebdriverHelper.quiDriver(org.openqa.selenium.WebDriver)"
  langs:
  - "java"
  name: "WebdriverHelper"
  nameWithType: "WebdriverHelper"
  fullName: "fr.axa.automation.webengine.helper.WebdriverHelper"
  type: "Class"
  package: "fr.axa.automation.webengine.helper"
  syntax:
    content: "public final class WebdriverHelper"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.helper.WebdriverHelper.WebdriverHelper()"
  id: "WebdriverHelper()"
  parent: "fr.axa.automation.webengine.helper.WebdriverHelper"
  langs:
  - "java"
  name: "WebdriverHelper()"
  nameWithType: "WebdriverHelper.WebdriverHelper()"
  fullName: "fr.axa.automation.webengine.helper.WebdriverHelper.WebdriverHelper()"
  overload: "fr.axa.automation.webengine.helper.WebdriverHelper.WebdriverHelper*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.helper"
  syntax:
    content: "private WebdriverHelper()"
- uid: "fr.axa.automation.webengine.helper.WebdriverHelper.getDefaultDriver()"
  id: "getDefaultDriver()"
  parent: "fr.axa.automation.webengine.helper.WebdriverHelper"
  langs:
  - "java"
  name: "getDefaultDriver()"
  nameWithType: "WebdriverHelper.getDefaultDriver()"
  fullName: "fr.axa.automation.webengine.helper.WebdriverHelper.getDefaultDriver()"
  overload: "fr.axa.automation.webengine.helper.WebdriverHelper.getDefaultDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.helper"
  syntax:
    content: "public static Optional<WebDriver> getDefaultDriver()"
    return:
      type: "java.util.Optional<org.openqa.selenium.WebDriver>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.helper.WebdriverHelper.getDriver()"
  id: "getDriver()"
  parent: "fr.axa.automation.webengine.helper.WebdriverHelper"
  langs:
  - "java"
  name: "getDriver()"
  nameWithType: "WebdriverHelper.getDriver()"
  fullName: "fr.axa.automation.webengine.helper.WebdriverHelper.getDriver()"
  overload: "fr.axa.automation.webengine.helper.WebdriverHelper.getDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.helper"
  syntax:
    content: "public static Optional<WebDriver> getDriver()"
    return:
      type: "java.util.Optional<org.openqa.selenium.WebDriver>"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.helper.WebdriverHelper.initializeDriver()"
  id: "initializeDriver()"
  parent: "fr.axa.automation.webengine.helper.WebdriverHelper"
  langs:
  - "java"
  name: "initializeDriver()"
  nameWithType: "WebdriverHelper.initializeDriver()"
  fullName: "fr.axa.automation.webengine.helper.WebdriverHelper.initializeDriver()"
  overload: "fr.axa.automation.webengine.helper.WebdriverHelper.initializeDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.helper"
  syntax:
    content: "public static WebDriver initializeDriver()"
    return:
      type: "org.openqa.selenium.WebDriver"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.helper.WebdriverHelper.quiDriver(org.openqa.selenium.WebDriver)"
  id: "quiDriver(org.openqa.selenium.WebDriver)"
  parent: "fr.axa.automation.webengine.helper.WebdriverHelper"
  langs:
  - "java"
  name: "quiDriver(WebDriver webDriver)"
  nameWithType: "WebdriverHelper.quiDriver(WebDriver webDriver)"
  fullName: "fr.axa.automation.webengine.helper.WebdriverHelper.quiDriver(WebDriver webDriver)"
  overload: "fr.axa.automation.webengine.helper.WebdriverHelper.quiDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.helper"
  syntax:
    content: "public static void quiDriver(WebDriver webDriver)"
    parameters:
    - id: "webDriver"
      type: "org.openqa.selenium.WebDriver"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
references:
- uid: "fr.axa.automation.webengine.helper.WebdriverHelper.WebdriverHelper*"
  name: "WebdriverHelper"
  nameWithType: "WebdriverHelper.WebdriverHelper"
  fullName: "fr.axa.automation.webengine.helper.WebdriverHelper.WebdriverHelper"
  package: "fr.axa.automation.webengine.helper"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "org.openqa.selenium.WebDriver"
  spec.java:
  - uid: "org.openqa.selenium.WebDriver"
    name: "WebDriver"
    fullName: "org.openqa.selenium.WebDriver"
- uid: "fr.axa.automation.webengine.helper.WebdriverHelper.initializeDriver*"
  name: "initializeDriver"
  nameWithType: "WebdriverHelper.initializeDriver"
  fullName: "fr.axa.automation.webengine.helper.WebdriverHelper.initializeDriver"
  package: "fr.axa.automation.webengine.helper"
- uid: "java.util.Optional<org.openqa.selenium.WebDriver>"
  spec.java:
  - uid: "java.util.Optional"
    name: "Optional"
    fullName: "java.util.Optional"
  - name: "<"
    fullName: "<"
  - uid: "org.openqa.selenium.WebDriver"
    name: "WebDriver"
    fullName: "org.openqa.selenium.WebDriver"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.helper.WebdriverHelper.getDriver*"
  name: "getDriver"
  nameWithType: "WebdriverHelper.getDriver"
  fullName: "fr.axa.automation.webengine.helper.WebdriverHelper.getDriver"
  package: "fr.axa.automation.webengine.helper"
- uid: "fr.axa.automation.webengine.exception.WebEngineException"
  name: "WebEngineException"
  nameWithType: "WebEngineException"
  fullName: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.helper.WebdriverHelper.getDefaultDriver*"
  name: "getDefaultDriver"
  nameWithType: "WebdriverHelper.getDefaultDriver"
  fullName: "fr.axa.automation.webengine.helper.WebdriverHelper.getDefaultDriver"
  package: "fr.axa.automation.webengine.helper"
- uid: "fr.axa.automation.webengine.helper.WebdriverHelper.quiDriver*"
  name: "quiDriver"
  nameWithType: "WebdriverHelper.quiDriver"
  fullName: "fr.axa.automation.webengine.helper.WebdriverHelper.quiDriver"
  package: "fr.axa.automation.webengine.helper"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Optional"
  name: "Optional"
  nameWithType: "Optional"
  fullName: "java.util.Optional"
