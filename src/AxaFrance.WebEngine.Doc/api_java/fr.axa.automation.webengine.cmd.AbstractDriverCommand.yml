### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  id: "AbstractDriverCommand"
  parent: "fr.axa.automation.webengine.cmd"
  children:
  - "fr.axa.automation.webengine.cmd.AbstractDriverCommand.AbstractDriverCommand()"
  - "fr.axa.automation.webengine.cmd.AbstractDriverCommand.execute(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  - "fr.axa.automation.webengine.cmd.AbstractDriverCommand.executeCmd(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  - "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,boolean,boolean)"
  - "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getTargetValue(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  - "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getValue(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.TestCaseNoCodeContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  - "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getWebDriverToUse(java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  - "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeIncognitoWebDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  - "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeWebDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  - "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeWebDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,boolean)"
  - "fr.axa.automation.webengine.cmd.AbstractDriverCommand.populateWebElement(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  - "fr.axa.automation.webengine.cmd.AbstractDriverCommand.screenShot(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,java.lang.String,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  langs:
  - "java"
  name: "AbstractDriverCommand"
  nameWithType: "AbstractDriverCommand"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  type: "Class"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "public abstract class AbstractDriverCommand implements ICommand"
  inheritance:
  - "java.lang.Object"
  implements:
  - "fr.axa.automation.webengine.cmd.ICommand"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.AbstractDriverCommand()"
  id: "AbstractDriverCommand()"
  parent: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  langs:
  - "java"
  name: "AbstractDriverCommand()"
  nameWithType: "AbstractDriverCommand.AbstractDriverCommand()"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.AbstractDriverCommand()"
  overload: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.AbstractDriverCommand*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "public AbstractDriverCommand()"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.execute(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  id: "execute(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  parent: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  langs:
  - "java"
  name: "execute(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  nameWithType: "AbstractDriverCommand.execute(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.execute(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  overload: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.execute*"
  type: "Method"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "public CommandResult execute(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testCaseContext"
      type: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
    - id: "commandData"
      type: "fr.axa.automation.webengine.object.CommandDataNoCode"
    - id: "commandResultList"
      type: "java.util.List<fr.axa.automation.webengine.object.CommandResult>"
    return:
      type: "fr.axa.automation.webengine.object.CommandResult"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.executeCmd(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  id: "executeCmd(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  parent: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  langs:
  - "java"
  name: "executeCmd(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  nameWithType: "AbstractDriverCommand.executeCmd(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.executeCmd(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  overload: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.executeCmd*"
  type: "Method"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "public abstract void executeCmd(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testCaseContext"
      type: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
    - id: "commandData"
      type: "fr.axa.automation.webengine.object.CommandDataNoCode"
    - id: "commandResultList"
      type: "java.util.List<fr.axa.automation.webengine.object.CommandResult>"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,boolean,boolean)"
  id: "getDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,boolean,boolean)"
  parent: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  langs:
  - "java"
  name: "getDriver(AbstractGlobalApplicationContext globalApplicationContext, boolean incognito, boolean deleteCookie)"
  nameWithType: "AbstractDriverCommand.getDriver(AbstractGlobalApplicationContext globalApplicationContext, boolean incognito, boolean deleteCookie)"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getDriver(AbstractGlobalApplicationContext globalApplicationContext, boolean incognito, boolean deleteCookie)"
  overload: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "public WebDriver getDriver(AbstractGlobalApplicationContext globalApplicationContext, boolean incognito, boolean deleteCookie)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "incognito"
      type: "boolean"
    - id: "deleteCookie"
      type: "boolean"
    return:
      type: "org.openqa.selenium.WebDriver"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getTargetValue(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  id: "getTargetValue(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  parent: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  langs:
  - "java"
  name: "getTargetValue(AbstractGlobalApplicationContext globalApplicationContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  nameWithType: "AbstractDriverCommand.getTargetValue(AbstractGlobalApplicationContext globalApplicationContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getTargetValue(AbstractGlobalApplicationContext globalApplicationContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  overload: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getTargetValue*"
  type: "Method"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "protected Map.Entry<TargetKey,String> getTargetValue(AbstractGlobalApplicationContext globalApplicationContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "commandData"
      type: "fr.axa.automation.webengine.object.CommandDataNoCode"
    - id: "commandResultList"
      type: "java.util.List<fr.axa.automation.webengine.object.CommandResult>"
    return:
      type: "java.util.Map.Entry<fr.axa.automation.webengine.constante.TargetKey,java.lang.String>"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getValue(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.TestCaseNoCodeContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  id: "getValue(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.TestCaseNoCodeContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  parent: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  langs:
  - "java"
  name: "getValue(AbstractGlobalApplicationContext globalApplicationContext, TestCaseNoCodeContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  nameWithType: "AbstractDriverCommand.getValue(AbstractGlobalApplicationContext globalApplicationContext, TestCaseNoCodeContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getValue(AbstractGlobalApplicationContext globalApplicationContext, TestCaseNoCodeContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  overload: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getValue*"
  type: "Method"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "protected String getValue(AbstractGlobalApplicationContext globalApplicationContext, TestCaseNoCodeContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testCaseContext"
      type: "fr.axa.automation.webengine.global.TestCaseNoCodeContext"
    - id: "commandData"
      type: "fr.axa.automation.webengine.object.CommandDataNoCode"
    - id: "commandResultList"
      type: "java.util.List<fr.axa.automation.webengine.object.CommandResult>"
    return:
      type: "java.lang.String"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getWebDriverToUse(java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  id: "getWebDriverToUse(java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  parent: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  langs:
  - "java"
  name: "getWebDriverToUse(List<CommandResult> commandResultList)"
  nameWithType: "AbstractDriverCommand.getWebDriverToUse(List<CommandResult> commandResultList)"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getWebDriverToUse(List<CommandResult> commandResultList)"
  overload: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getWebDriverToUse*"
  type: "Method"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "protected WebDriver getWebDriverToUse(List<CommandResult> commandResultList)"
    parameters:
    - id: "commandResultList"
      type: "java.util.List<fr.axa.automation.webengine.object.CommandResult>"
    return:
      type: "org.openqa.selenium.WebDriver"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeIncognitoWebDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  id: "initializeIncognitoWebDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  parent: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  langs:
  - "java"
  name: "initializeIncognitoWebDriver(AbstractGlobalApplicationContext globalApplicationContext)"
  nameWithType: "AbstractDriverCommand.initializeIncognitoWebDriver(AbstractGlobalApplicationContext globalApplicationContext)"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeIncognitoWebDriver(AbstractGlobalApplicationContext globalApplicationContext)"
  overload: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeIncognitoWebDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "public WebDriver initializeIncognitoWebDriver(AbstractGlobalApplicationContext globalApplicationContext)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    return:
      type: "org.openqa.selenium.WebDriver"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeWebDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  id: "initializeWebDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  parent: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  langs:
  - "java"
  name: "initializeWebDriver(AbstractGlobalApplicationContext globalApplicationContext)"
  nameWithType: "AbstractDriverCommand.initializeWebDriver(AbstractGlobalApplicationContext globalApplicationContext)"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeWebDriver(AbstractGlobalApplicationContext globalApplicationContext)"
  overload: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeWebDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "public WebDriver initializeWebDriver(AbstractGlobalApplicationContext globalApplicationContext)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    return:
      type: "org.openqa.selenium.WebDriver"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeWebDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,boolean)"
  id: "initializeWebDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,boolean)"
  parent: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  langs:
  - "java"
  name: "initializeWebDriver(AbstractGlobalApplicationContext globalApplicationContext, boolean deleteCookie)"
  nameWithType: "AbstractDriverCommand.initializeWebDriver(AbstractGlobalApplicationContext globalApplicationContext, boolean deleteCookie)"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeWebDriver(AbstractGlobalApplicationContext globalApplicationContext, boolean deleteCookie)"
  overload: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeWebDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "public WebDriver initializeWebDriver(AbstractGlobalApplicationContext globalApplicationContext, boolean deleteCookie)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "deleteCookie"
      type: "boolean"
    return:
      type: "org.openqa.selenium.WebDriver"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.populateWebElement(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  id: "populateWebElement(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,fr.axa.automation.webengine.object.CommandDataNoCode,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  parent: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  langs:
  - "java"
  name: "populateWebElement(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  nameWithType: "AbstractDriverCommand.populateWebElement(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.populateWebElement(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
  overload: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.populateWebElement*"
  type: "Method"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "protected WebElementDescription populateWebElement(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, CommandDataNoCode commandData, List<CommandResult> commandResultList)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testCaseContext"
      type: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
    - id: "commandData"
      type: "fr.axa.automation.webengine.object.CommandDataNoCode"
    - id: "commandResultList"
      type: "java.util.List<fr.axa.automation.webengine.object.CommandResult>"
    return:
      type: "fr.axa.automation.webengine.core.WebElementDescription"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.screenShot(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,java.lang.String,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  id: "screenShot(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext,fr.axa.automation.webengine.global.AbstractTestCaseContext,java.lang.String,java.util.List<fr.axa.automation.webengine.object.CommandResult>)"
  parent: "fr.axa.automation.webengine.cmd.AbstractDriverCommand"
  langs:
  - "java"
  name: "screenShot(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, String name, List<CommandResult> commandResultList)"
  nameWithType: "AbstractDriverCommand.screenShot(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, String name, List<CommandResult> commandResultList)"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.screenShot(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, String name, List<CommandResult> commandResultList)"
  overload: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.screenShot*"
  type: "Method"
  package: "fr.axa.automation.webengine.cmd"
  syntax:
    content: "protected ScreenshotReport screenShot(AbstractGlobalApplicationContext globalApplicationContext, AbstractTestCaseContext testCaseContext, String name, List<CommandResult> commandResultList)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    - id: "testCaseContext"
      type: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
    - id: "name"
      type: "java.lang.String"
    - id: "commandResultList"
      type: "java.util.List<fr.axa.automation.webengine.object.CommandResult>"
    return:
      type: "fr.axa.automation.webengine.generated.ScreenshotReport"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
references:
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.AbstractDriverCommand*"
  name: "AbstractDriverCommand"
  nameWithType: "AbstractDriverCommand.AbstractDriverCommand"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.AbstractDriverCommand"
  package: "fr.axa.automation.webengine.cmd"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
  name: "AbstractGlobalApplicationContext"
  nameWithType: "AbstractGlobalApplicationContext"
  fullName: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
- uid: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
  name: "AbstractTestCaseContext"
  nameWithType: "AbstractTestCaseContext"
  fullName: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
- uid: "fr.axa.automation.webengine.object.CommandDataNoCode"
  name: "CommandDataNoCode"
  nameWithType: "CommandDataNoCode"
  fullName: "fr.axa.automation.webengine.object.CommandDataNoCode"
- uid: "java.util.List<fr.axa.automation.webengine.object.CommandResult>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.webengine.object.CommandResult"
    name: "CommandResult"
    fullName: "fr.axa.automation.webengine.object.CommandResult"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.executeCmd*"
  name: "executeCmd"
  nameWithType: "AbstractDriverCommand.executeCmd"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.executeCmd"
  package: "fr.axa.automation.webengine.cmd"
- uid: "fr.axa.automation.webengine.exception.WebEngineException"
  name: "WebEngineException"
  nameWithType: "WebEngineException"
  fullName: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "org.openqa.selenium.WebDriver"
  spec.java:
  - uid: "org.openqa.selenium.WebDriver"
    name: "WebDriver"
    fullName: "org.openqa.selenium.WebDriver"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeWebDriver*"
  name: "initializeWebDriver"
  nameWithType: "AbstractDriverCommand.initializeWebDriver"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeWebDriver"
  package: "fr.axa.automation.webengine.cmd"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeIncognitoWebDriver*"
  name: "initializeIncognitoWebDriver"
  nameWithType: "AbstractDriverCommand.initializeIncognitoWebDriver"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.initializeIncognitoWebDriver"
  package: "fr.axa.automation.webengine.cmd"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getDriver*"
  name: "getDriver"
  nameWithType: "AbstractDriverCommand.getDriver"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getDriver"
  package: "fr.axa.automation.webengine.cmd"
- uid: "fr.axa.automation.webengine.core.WebElementDescription"
  name: "WebElementDescription"
  nameWithType: "WebElementDescription"
  fullName: "fr.axa.automation.webengine.core.WebElementDescription"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.populateWebElement*"
  name: "populateWebElement"
  nameWithType: "AbstractDriverCommand.populateWebElement"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.populateWebElement"
  package: "fr.axa.automation.webengine.cmd"
- uid: "java.util.Map.Entry<fr.axa.automation.webengine.constante.TargetKey,java.lang.String>"
  spec.java:
  - uid: "java.util.Map.Entry"
    name: "Entry"
    fullName: "java.util.Map.Entry"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.webengine.constante.TargetKey"
    name: "TargetKey"
    fullName: "fr.axa.automation.webengine.constante.TargetKey"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getTargetValue*"
  name: "getTargetValue"
  nameWithType: "AbstractDriverCommand.getTargetValue"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getTargetValue"
  package: "fr.axa.automation.webengine.cmd"
- uid: "fr.axa.automation.webengine.object.CommandResult"
  name: "CommandResult"
  nameWithType: "CommandResult"
  fullName: "fr.axa.automation.webengine.object.CommandResult"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.execute*"
  name: "execute"
  nameWithType: "AbstractDriverCommand.execute"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.execute"
  package: "fr.axa.automation.webengine.cmd"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.generated.ScreenshotReport"
  name: "ScreenshotReport"
  nameWithType: "ScreenshotReport"
  fullName: "fr.axa.automation.webengine.generated.ScreenshotReport"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.screenShot*"
  name: "screenShot"
  nameWithType: "AbstractDriverCommand.screenShot"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.screenShot"
  package: "fr.axa.automation.webengine.cmd"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getWebDriverToUse*"
  name: "getWebDriverToUse"
  nameWithType: "AbstractDriverCommand.getWebDriverToUse"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getWebDriverToUse"
  package: "fr.axa.automation.webengine.cmd"
- uid: "fr.axa.automation.webengine.global.TestCaseNoCodeContext"
  name: "TestCaseNoCodeContext"
  nameWithType: "TestCaseNoCodeContext"
  fullName: "fr.axa.automation.webengine.global.TestCaseNoCodeContext"
- uid: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getValue*"
  name: "getValue"
  nameWithType: "AbstractDriverCommand.getValue"
  fullName: "fr.axa.automation.webengine.cmd.AbstractDriverCommand.getValue"
  package: "fr.axa.automation.webengine.cmd"
- uid: "fr.axa.automation.webengine.cmd.ICommand"
  name: "ICommand"
  nameWithType: "ICommand"
  fullName: "fr.axa.automation.webengine.cmd.ICommand"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.util.Map.Entry"
  name: "Map.Entry"
  nameWithType: "Map.Entry"
  fullName: "java.util.Map.Entry"
- uid: "fr.axa.automation.webengine.constante.TargetKey,java.lang.String"
  name: "TargetKey,String"
  nameWithType: "TargetKey,String"
  fullName: "fr.axa.automation.webengine.constante.TargetKey,java.lang.String"
