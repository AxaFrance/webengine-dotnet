### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  id: "Testsuite"
  parent: "fr.axa.automation.junit.generated"
  children:
  - "fr.axa.automation.junit.generated.Testsuites.Testsuite.Testsuite()"
  - "fr.axa.automation.junit.generated.Testsuites.Testsuite._package"
  - "fr.axa.automation.junit.generated.Testsuites.Testsuite.getId()"
  - "fr.axa.automation.junit.generated.Testsuites.Testsuite.getPackage()"
  - "fr.axa.automation.junit.generated.Testsuites.Testsuite.id"
  - "fr.axa.automation.junit.generated.Testsuites.Testsuite.setId(int)"
  - "fr.axa.automation.junit.generated.Testsuites.Testsuite.setPackage(java.lang.String)"
  langs:
  - "java"
  name: "Testsuites.Testsuite"
  nameWithType: "Testsuites.Testsuite"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  type: "Class"
  package: "fr.axa.automation.junit.generated"
  summary: "Java class for anonymous complex type.\n\nThe following schema fragment specifies the expected content contained within this class.\n\n```java\n<complexType>\n   <complexContent>\n     <extension base=\"{}testsuite\">\n       <attribute name=\"package\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}token\" />\n       <attribute name=\"id\" use=\"required\" type=\"{http://www.w3.org/2001/XMLSchema}int\" />\n     </extension>\n   </complexContent>\n </complexType>\n```"
  syntax:
    content: "public static class Testsuites.Testsuite extends Testsuite"
  inheritance:
  - "java.lang.Object"
  - "fr.axa.automation.junit.generated.Testsuite"
  inheritedMembers:
  - "fr.axa.automation.junit.generated.Testsuite.getErrors()"
  - "fr.axa.automation.junit.generated.Testsuite.getFailures()"
  - "fr.axa.automation.junit.generated.Testsuite.getHostname()"
  - "fr.axa.automation.junit.generated.Testsuite.getName()"
  - "fr.axa.automation.junit.generated.Testsuite.getProperties()"
  - "fr.axa.automation.junit.generated.Testsuite.getSkipped()"
  - "fr.axa.automation.junit.generated.Testsuite.getSystemErr()"
  - "fr.axa.automation.junit.generated.Testsuite.getSystemOut()"
  - "fr.axa.automation.junit.generated.Testsuite.getTestcases()"
  - "fr.axa.automation.junit.generated.Testsuite.getTests()"
  - "fr.axa.automation.junit.generated.Testsuite.getTime()"
  - "fr.axa.automation.junit.generated.Testsuite.getTimestamp()"
  - "fr.axa.automation.junit.generated.Testsuite.setErrors(int)"
  - "fr.axa.automation.junit.generated.Testsuite.setFailures(int)"
  - "fr.axa.automation.junit.generated.Testsuite.setHostname(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.setName(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.setProperties(fr.axa.automation.junit.generated.Testsuite.Properties)"
  - "fr.axa.automation.junit.generated.Testsuite.setSkipped(java.lang.Integer)"
  - "fr.axa.automation.junit.generated.Testsuite.setSystemErr(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.setSystemOut(java.lang.String)"
  - "fr.axa.automation.junit.generated.Testsuite.setTests(int)"
  - "fr.axa.automation.junit.generated.Testsuite.setTime(java.math.BigDecimal)"
  - "fr.axa.automation.junit.generated.Testsuite.setTimestamp(java.util.Calendar)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite.Testsuite()"
  id: "Testsuite()"
  parent: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  langs:
  - "java"
  name: "Testsuite()"
  nameWithType: "Testsuites.Testsuite.Testsuite()"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite.Testsuite()"
  overload: "fr.axa.automation.junit.generated.Testsuites.Testsuite.Testsuite*"
  type: "Constructor"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "public Testsuite()"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite._package"
  id: "_package"
  parent: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  langs:
  - "java"
  name: "_package"
  nameWithType: "Testsuites.Testsuite._package"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite._package"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected String _package"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite.getId()"
  id: "getId()"
  parent: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  langs:
  - "java"
  name: "getId()"
  nameWithType: "Testsuites.Testsuite.getId()"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite.getId()"
  overload: "fr.axa.automation.junit.generated.Testsuites.Testsuite.getId*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the id property."
  syntax:
    content: "public int getId()"
    return:
      type: "int"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite.getPackage()"
  id: "getPackage()"
  parent: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  langs:
  - "java"
  name: "getPackage()"
  nameWithType: "Testsuites.Testsuite.getPackage()"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite.getPackage()"
  overload: "fr.axa.automation.junit.generated.Testsuites.Testsuite.getPackage*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Gets the value of the package property."
  syntax:
    content: "public String getPackage()"
    return:
      type: "java.lang.String"
      description: "possible object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite.id"
  id: "id"
  parent: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  langs:
  - "java"
  name: "id"
  nameWithType: "Testsuites.Testsuite.id"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite.id"
  type: "Field"
  package: "fr.axa.automation.junit.generated"
  syntax:
    content: "protected int id"
    return:
      type: "int"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite.setId(int)"
  id: "setId(int)"
  parent: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  langs:
  - "java"
  name: "setId(int value)"
  nameWithType: "Testsuites.Testsuite.setId(int value)"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite.setId(int value)"
  overload: "fr.axa.automation.junit.generated.Testsuites.Testsuite.setId*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the id property."
  syntax:
    content: "public void setId(int value)"
    parameters:
    - id: "value"
      type: "int"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite.setPackage(java.lang.String)"
  id: "setPackage(java.lang.String)"
  parent: "fr.axa.automation.junit.generated.Testsuites.Testsuite"
  langs:
  - "java"
  name: "setPackage(String value)"
  nameWithType: "Testsuites.Testsuite.setPackage(String value)"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite.setPackage(String value)"
  overload: "fr.axa.automation.junit.generated.Testsuites.Testsuite.setPackage*"
  type: "Method"
  package: "fr.axa.automation.junit.generated"
  summary: "Sets the value of the package property."
  syntax:
    content: "public void setPackage(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "allowed object is\n     <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>"
references:
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite.Testsuite*"
  name: "Testsuite"
  nameWithType: "Testsuites.Testsuite.Testsuite"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite.Testsuite"
  package: "fr.axa.automation.junit.generated"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite.getPackage*"
  name: "getPackage"
  nameWithType: "Testsuites.Testsuite.getPackage"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite.getPackage"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite.setPackage*"
  name: "setPackage"
  nameWithType: "Testsuites.Testsuite.setPackage"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite.setPackage"
  package: "fr.axa.automation.junit.generated"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite.getId*"
  name: "getId"
  nameWithType: "Testsuites.Testsuite.getId"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite.getId"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuites.Testsuite.setId*"
  name: "setId"
  nameWithType: "Testsuites.Testsuite.setId"
  fullName: "fr.axa.automation.junit.generated.Testsuites.Testsuite.setId"
  package: "fr.axa.automation.junit.generated"
- uid: "fr.axa.automation.junit.generated.Testsuite"
  name: "Testsuite"
  nameWithType: "Testsuite"
  fullName: "fr.axa.automation.junit.generated.Testsuite"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "fr.axa.automation.junit.generated.Testsuite.getProperties()"
  name: "Testsuite.getProperties()"
  nameWithType: "Testsuite.getProperties()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getProperties()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "fr.axa.automation.junit.generated.Testsuite.setTests(int)"
  name: "Testsuite.setTests(int)"
  nameWithType: "Testsuite.setTests(int)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setTests(int)"
- uid: "fr.axa.automation.junit.generated.Testsuite.setErrors(int)"
  name: "Testsuite.setErrors(int)"
  nameWithType: "Testsuite.setErrors(int)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setErrors(int)"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "fr.axa.automation.junit.generated.Testsuite.getHostname()"
  name: "Testsuite.getHostname()"
  nameWithType: "Testsuite.getHostname()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getHostname()"
- uid: "fr.axa.automation.junit.generated.Testsuite.getTests()"
  name: "Testsuite.getTests()"
  nameWithType: "Testsuite.getTests()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getTests()"
- uid: "fr.axa.automation.junit.generated.Testsuite.setSkipped(java.lang.Integer)"
  name: "Testsuite.setSkipped(Integer)"
  nameWithType: "Testsuite.setSkipped(Integer)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setSkipped(java.lang.Integer)"
- uid: "fr.axa.automation.junit.generated.Testsuite.setHostname(java.lang.String)"
  name: "Testsuite.setHostname(String)"
  nameWithType: "Testsuite.setHostname(String)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setHostname(java.lang.String)"
- uid: "fr.axa.automation.junit.generated.Testsuite.getSystemOut()"
  name: "Testsuite.getSystemOut()"
  nameWithType: "Testsuite.getSystemOut()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getSystemOut()"
- uid: "fr.axa.automation.junit.generated.Testsuite.getTime()"
  name: "Testsuite.getTime()"
  nameWithType: "Testsuite.getTime()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getTime()"
- uid: "fr.axa.automation.junit.generated.Testsuite.setProperties(fr.axa.automation.junit.generated.Testsuite.Properties)"
  name: "Testsuite.setProperties(Testsuite.Properties)"
  nameWithType: "Testsuite.setProperties(Testsuite.Properties)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setProperties(fr.axa.automation.junit.generated.Testsuite.Properties)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "fr.axa.automation.junit.generated.Testsuite.getSkipped()"
  name: "Testsuite.getSkipped()"
  nameWithType: "Testsuite.getSkipped()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getSkipped()"
- uid: "fr.axa.automation.junit.generated.Testsuite.getFailures()"
  name: "Testsuite.getFailures()"
  nameWithType: "Testsuite.getFailures()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getFailures()"
- uid: "fr.axa.automation.junit.generated.Testsuite.getName()"
  name: "Testsuite.getName()"
  nameWithType: "Testsuite.getName()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getName()"
- uid: "fr.axa.automation.junit.generated.Testsuite.setTime(java.math.BigDecimal)"
  name: "Testsuite.setTime(BigDecimal)"
  nameWithType: "Testsuite.setTime(BigDecimal)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setTime(java.math.BigDecimal)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "fr.axa.automation.junit.generated.Testsuite.getSystemErr()"
  name: "Testsuite.getSystemErr()"
  nameWithType: "Testsuite.getSystemErr()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getSystemErr()"
- uid: "fr.axa.automation.junit.generated.Testsuite.setSystemOut(java.lang.String)"
  name: "Testsuite.setSystemOut(String)"
  nameWithType: "Testsuite.setSystemOut(String)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setSystemOut(java.lang.String)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "fr.axa.automation.junit.generated.Testsuite.setSystemErr(java.lang.String)"
  name: "Testsuite.setSystemErr(String)"
  nameWithType: "Testsuite.setSystemErr(String)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setSystemErr(java.lang.String)"
- uid: "fr.axa.automation.junit.generated.Testsuite.setTimestamp(java.util.Calendar)"
  name: "Testsuite.setTimestamp(Calendar)"
  nameWithType: "Testsuite.setTimestamp(Calendar)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setTimestamp(java.util.Calendar)"
- uid: "fr.axa.automation.junit.generated.Testsuite.getTimestamp()"
  name: "Testsuite.getTimestamp()"
  nameWithType: "Testsuite.getTimestamp()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getTimestamp()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "fr.axa.automation.junit.generated.Testsuite.getErrors()"
  name: "Testsuite.getErrors()"
  nameWithType: "Testsuite.getErrors()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getErrors()"
- uid: "fr.axa.automation.junit.generated.Testsuite.setName(java.lang.String)"
  name: "Testsuite.setName(String)"
  nameWithType: "Testsuite.setName(String)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setName(java.lang.String)"
- uid: "fr.axa.automation.junit.generated.Testsuite.getTestcases()"
  name: "Testsuite.getTestcases()"
  nameWithType: "Testsuite.getTestcases()"
  fullName: "fr.axa.automation.junit.generated.Testsuite.getTestcases()"
- uid: "fr.axa.automation.junit.generated.Testsuite.setFailures(int)"
  name: "Testsuite.setFailures(int)"
  nameWithType: "Testsuite.setFailures(int)"
  fullName: "fr.axa.automation.junit.generated.Testsuite.setFailures(int)"
