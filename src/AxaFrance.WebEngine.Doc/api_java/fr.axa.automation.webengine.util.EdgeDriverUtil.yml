### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.util.EdgeDriverUtil"
  id: "EdgeDriverUtil"
  parent: "fr.axa.automation.webengine.util"
  children:
  - "fr.axa.automation.webengine.util.EdgeDriverUtil.getEdgeDriver()"
  - "fr.axa.automation.webengine.util.EdgeDriverUtil.getEdgeDriver(java.util.List<java.lang.String>)"
  langs:
  - "java"
  name: "EdgeDriverUtil"
  nameWithType: "EdgeDriverUtil"
  fullName: "fr.axa.automation.webengine.util.EdgeDriverUtil"
  type: "Class"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public final class EdgeDriverUtil"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.util.EdgeDriverUtil.EdgeDriverUtil()"
  id: "EdgeDriverUtil()"
  parent: "fr.axa.automation.webengine.util.EdgeDriverUtil"
  langs:
  - "java"
  name: "EdgeDriverUtil()"
  nameWithType: "EdgeDriverUtil.EdgeDriverUtil()"
  fullName: "fr.axa.automation.webengine.util.EdgeDriverUtil.EdgeDriverUtil()"
  overload: "fr.axa.automation.webengine.util.EdgeDriverUtil.EdgeDriverUtil*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "private EdgeDriverUtil()"
- uid: "fr.axa.automation.webengine.util.EdgeDriverUtil.getEdgeDriver()"
  id: "getEdgeDriver()"
  parent: "fr.axa.automation.webengine.util.EdgeDriverUtil"
  langs:
  - "java"
  name: "getEdgeDriver()"
  nameWithType: "EdgeDriverUtil.getEdgeDriver()"
  fullName: "fr.axa.automation.webengine.util.EdgeDriverUtil.getEdgeDriver()"
  overload: "fr.axa.automation.webengine.util.EdgeDriverUtil.getEdgeDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static WebDriver getEdgeDriver()"
    return:
      type: "org.openqa.selenium.WebDriver"
- uid: "fr.axa.automation.webengine.util.EdgeDriverUtil.getEdgeDriver(java.util.List<java.lang.String>)"
  id: "getEdgeDriver(java.util.List<java.lang.String>)"
  parent: "fr.axa.automation.webengine.util.EdgeDriverUtil"
  langs:
  - "java"
  name: "getEdgeDriver(List<String> edgeOptionList)"
  nameWithType: "EdgeDriverUtil.getEdgeDriver(List<String> edgeOptionList)"
  fullName: "fr.axa.automation.webengine.util.EdgeDriverUtil.getEdgeDriver(List<String> edgeOptionList)"
  overload: "fr.axa.automation.webengine.util.EdgeDriverUtil.getEdgeDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.util"
  syntax:
    content: "public static WebDriver getEdgeDriver(List<String> edgeOptionList)"
    parameters:
    - id: "edgeOptionList"
      type: "java.util.List<java.lang.String>"
    return:
      type: "org.openqa.selenium.WebDriver"
references:
- uid: "fr.axa.automation.webengine.util.EdgeDriverUtil.EdgeDriverUtil*"
  name: "EdgeDriverUtil"
  nameWithType: "EdgeDriverUtil.EdgeDriverUtil"
  fullName: "fr.axa.automation.webengine.util.EdgeDriverUtil.EdgeDriverUtil"
  package: "fr.axa.automation.webengine.util"
- uid: "org.openqa.selenium.WebDriver"
  spec.java:
  - uid: "org.openqa.selenium.WebDriver"
    name: "WebDriver"
    fullName: "org.openqa.selenium.WebDriver"
- uid: "fr.axa.automation.webengine.util.EdgeDriverUtil.getEdgeDriver*"
  name: "getEdgeDriver"
  nameWithType: "EdgeDriverUtil.getEdgeDriver"
  fullName: "fr.axa.automation.webengine.util.EdgeDriverUtil.getEdgeDriver"
  package: "fr.axa.automation.webengine.util"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.lang.String"
  name: "String"
  nameWithType: "String"
  fullName: "java.lang.String"
