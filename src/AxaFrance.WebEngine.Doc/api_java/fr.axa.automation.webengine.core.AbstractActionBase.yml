### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.core.AbstractActionBase"
  id: "AbstractActionBase"
  parent: "fr.axa.automation.webengine.core"
  children:
  - "fr.axa.automation.webengine.core.AbstractActionBase.AbstractActionBase()"
  - "fr.axa.automation.webengine.core.AbstractActionBase.AbstractActionBase(fr.axa.automation.webengine.global.ActionContext)"
  - "fr.axa.automation.webengine.core.AbstractActionBase.getContexteValue(java.lang.String)"
  - "fr.axa.automation.webengine.core.AbstractActionBase.isResultFailedOrCriticalError()"
  - "fr.axa.automation.webengine.core.AbstractActionBase.runAction()"
  - "fr.axa.automation.webengine.core.AbstractActionBase.runCheckpoint()"
  - "fr.axa.automation.webengine.core.AbstractActionBase.setContextValue(fr.axa.automation.webengine.generated.Variable)"
  langs:
  - "java"
  name: "AbstractActionBase"
  nameWithType: "AbstractActionBase"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase"
  type: "Class"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public abstract class AbstractActionBase implements IAction"
  inheritance:
  - "java.lang.Object"
  implements:
  - "fr.axa.automation.webengine.core.IAction"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.AbstractActionBase()"
  id: "AbstractActionBase()"
  parent: "fr.axa.automation.webengine.core.AbstractActionBase"
  langs:
  - "java"
  name: "AbstractActionBase()"
  nameWithType: "AbstractActionBase.AbstractActionBase()"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.AbstractActionBase()"
  overload: "fr.axa.automation.webengine.core.AbstractActionBase.AbstractActionBase*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected AbstractActionBase()"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.AbstractActionBase(fr.axa.automation.webengine.global.ActionContext)"
  id: "AbstractActionBase(fr.axa.automation.webengine.global.ActionContext)"
  parent: "fr.axa.automation.webengine.core.AbstractActionBase"
  langs:
  - "java"
  name: "AbstractActionBase(ActionContext actionDetailContext)"
  nameWithType: "AbstractActionBase.AbstractActionBase(ActionContext actionDetailContext)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.AbstractActionBase(ActionContext actionDetailContext)"
  overload: "fr.axa.automation.webengine.core.AbstractActionBase.AbstractActionBase*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected AbstractActionBase(ActionContext actionDetailContext)"
    parameters:
    - id: "actionDetailContext"
      type: "fr.axa.automation.webengine.global.ActionContext"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.getContexteValue(java.lang.String)"
  id: "getContexteValue(java.lang.String)"
  parent: "fr.axa.automation.webengine.core.AbstractActionBase"
  langs:
  - "java"
  name: "getContexteValue(String contextName)"
  nameWithType: "AbstractActionBase.getContexteValue(String contextName)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.getContexteValue(String contextName)"
  overload: "fr.axa.automation.webengine.core.AbstractActionBase.getContexteValue*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected String getContexteValue(String contextName)"
    parameters:
    - id: "contextName"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.isResultFailedOrCriticalError()"
  id: "isResultFailedOrCriticalError()"
  parent: "fr.axa.automation.webengine.core.AbstractActionBase"
  langs:
  - "java"
  name: "isResultFailedOrCriticalError()"
  nameWithType: "AbstractActionBase.isResultFailedOrCriticalError()"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.isResultFailedOrCriticalError()"
  overload: "fr.axa.automation.webengine.core.AbstractActionBase.isResultFailedOrCriticalError*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected boolean isResultFailedOrCriticalError()"
    return:
      type: "boolean"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.runAction()"
  id: "runAction()"
  parent: "fr.axa.automation.webengine.core.AbstractActionBase"
  langs:
  - "java"
  name: "runAction()"
  nameWithType: "AbstractActionBase.runAction()"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.runAction()"
  overload: "fr.axa.automation.webengine.core.AbstractActionBase.runAction*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public ActionReport runAction()"
    return:
      type: "fr.axa.automation.webengine.generated.ActionReport"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.runCheckpoint()"
  id: "runCheckpoint()"
  parent: "fr.axa.automation.webengine.core.AbstractActionBase"
  langs:
  - "java"
  name: "runCheckpoint()"
  nameWithType: "AbstractActionBase.runCheckpoint()"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.runCheckpoint()"
  overload: "fr.axa.automation.webengine.core.AbstractActionBase.runCheckpoint*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public boolean runCheckpoint()"
    return:
      type: "boolean"
  exceptions:
  - type: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.setContextValue(fr.axa.automation.webengine.generated.Variable)"
  id: "setContextValue(fr.axa.automation.webengine.generated.Variable)"
  parent: "fr.axa.automation.webengine.core.AbstractActionBase"
  langs:
  - "java"
  name: "setContextValue(Variable contextValue)"
  nameWithType: "AbstractActionBase.setContextValue(Variable contextValue)"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.setContextValue(Variable contextValue)"
  overload: "fr.axa.automation.webengine.core.AbstractActionBase.setContextValue*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected void setContextValue(Variable contextValue)"
    parameters:
    - id: "contextValue"
      type: "fr.axa.automation.webengine.generated.Variable"
references:
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.AbstractActionBase*"
  name: "AbstractActionBase"
  nameWithType: "AbstractActionBase.AbstractActionBase"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.AbstractActionBase"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.global.ActionContext"
  name: "ActionContext"
  nameWithType: "ActionContext"
  fullName: "fr.axa.automation.webengine.global.ActionContext"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "fr.axa.automation.webengine.generated.ActionReport"
  name: "ActionReport"
  nameWithType: "ActionReport"
  fullName: "fr.axa.automation.webengine.generated.ActionReport"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.runAction*"
  name: "runAction"
  nameWithType: "AbstractActionBase.runAction"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.runAction"
  package: "fr.axa.automation.webengine.core"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.isResultFailedOrCriticalError*"
  name: "isResultFailedOrCriticalError"
  nameWithType: "AbstractActionBase.isResultFailedOrCriticalError"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.isResultFailedOrCriticalError"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.runCheckpoint*"
  name: "runCheckpoint"
  nameWithType: "AbstractActionBase.runCheckpoint"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.runCheckpoint"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.generated.Variable"
  name: "Variable"
  nameWithType: "Variable"
  fullName: "fr.axa.automation.webengine.generated.Variable"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.setContextValue*"
  name: "setContextValue"
  nameWithType: "AbstractActionBase.setContextValue"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.setContextValue"
  package: "fr.axa.automation.webengine.core"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.core.AbstractActionBase.getContexteValue*"
  name: "getContexteValue"
  nameWithType: "AbstractActionBase.getContexteValue"
  fullName: "fr.axa.automation.webengine.core.AbstractActionBase.getContexteValue"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.IAction"
  name: "IAction"
  nameWithType: "IAction"
  fullName: "fr.axa.automation.webengine.core.IAction"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
