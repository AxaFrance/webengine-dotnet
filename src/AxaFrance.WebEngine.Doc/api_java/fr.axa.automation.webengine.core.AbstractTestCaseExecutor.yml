### YamlMime:ManagedReference
items:
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor"
  id: "AbstractTestCaseExecutor"
  parent: "fr.axa.automation.webengine.core"
  children:
  - "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.AbstractTestCaseExecutor(fr.axa.automation.webengine.core.ITestStepExecutor,fr.axa.automation.webengine.properties.GlobalConfiguration,fr.axa.automation.webengine.logger.ILoggerService)"
  - "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.createTestCaseContext(java.lang.Object,java.lang.String)"
  - "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getResultOfAllAction(java.util.List<fr.axa.automation.webengine.generated.ActionReport>)"
  - "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getResultOfTestCase(java.util.List<fr.axa.automation.webengine.generated.ActionReport>)"
  - "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getTestCaseContext()"
  - "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.initializeWebDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  - "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.isIgnoredAllOtherAction(fr.axa.automation.webengine.generated.ActionReport)"
  langs:
  - "java"
  name: "AbstractTestCaseExecutor"
  nameWithType: "AbstractTestCaseExecutor"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor"
  type: "Class"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public abstract class AbstractTestCaseExecutor implements ITestCaseExecutor"
  inheritance:
  - "java.lang.Object"
  implements:
  - "fr.axa.automation.webengine.core.ITestCaseExecutor"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.AbstractTestCaseExecutor(fr.axa.automation.webengine.core.ITestStepExecutor,fr.axa.automation.webengine.properties.GlobalConfiguration,fr.axa.automation.webengine.logger.ILoggerService)"
  id: "AbstractTestCaseExecutor(fr.axa.automation.webengine.core.ITestStepExecutor,fr.axa.automation.webengine.properties.GlobalConfiguration,fr.axa.automation.webengine.logger.ILoggerService)"
  parent: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor"
  langs:
  - "java"
  name: "AbstractTestCaseExecutor(ITestStepExecutor testStepExecutor, GlobalConfiguration globalConfiguration, ILoggerService loggerService)"
  nameWithType: "AbstractTestCaseExecutor.AbstractTestCaseExecutor(ITestStepExecutor testStepExecutor, GlobalConfiguration globalConfiguration, ILoggerService loggerService)"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.AbstractTestCaseExecutor(ITestStepExecutor testStepExecutor, GlobalConfiguration globalConfiguration, ILoggerService loggerService)"
  overload: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.AbstractTestCaseExecutor*"
  type: "Constructor"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected AbstractTestCaseExecutor(ITestStepExecutor testStepExecutor, GlobalConfiguration globalConfiguration, ILoggerService loggerService)"
    parameters:
    - id: "testStepExecutor"
      type: "fr.axa.automation.webengine.core.ITestStepExecutor"
    - id: "globalConfiguration"
      type: "fr.axa.automation.webengine.properties.GlobalConfiguration"
    - id: "loggerService"
      type: "fr.axa.automation.webengine.logger.ILoggerService"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.createTestCaseContext(java.lang.Object,java.lang.String)"
  id: "createTestCaseContext(java.lang.Object,java.lang.String)"
  parent: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor"
  langs:
  - "java"
  name: "createTestCaseContext(Object webDriver, String testCaseName)"
  nameWithType: "AbstractTestCaseExecutor.createTestCaseContext(Object webDriver, String testCaseName)"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.createTestCaseContext(Object webDriver, String testCaseName)"
  overload: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.createTestCaseContext*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected AbstractTestCaseContext createTestCaseContext(Object webDriver, String testCaseName)"
    parameters:
    - id: "webDriver"
      type: "java.lang.Object"
    - id: "testCaseName"
      type: "java.lang.String"
    return:
      type: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getResultOfAllAction(java.util.List<fr.axa.automation.webengine.generated.ActionReport>)"
  id: "getResultOfAllAction(java.util.List<fr.axa.automation.webengine.generated.ActionReport>)"
  parent: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor"
  langs:
  - "java"
  name: "getResultOfAllAction(List<ActionReport> actionReportList)"
  nameWithType: "AbstractTestCaseExecutor.getResultOfAllAction(List<ActionReport> actionReportList)"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getResultOfAllAction(List<ActionReport> actionReportList)"
  overload: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getResultOfAllAction*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected Result getResultOfAllAction(List<ActionReport> actionReportList)"
    parameters:
    - id: "actionReportList"
      type: "java.util.List<fr.axa.automation.webengine.generated.ActionReport>"
    return:
      type: "fr.axa.automation.webengine.generated.Result"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getResultOfTestCase(java.util.List<fr.axa.automation.webengine.generated.ActionReport>)"
  id: "getResultOfTestCase(java.util.List<fr.axa.automation.webengine.generated.ActionReport>)"
  parent: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor"
  langs:
  - "java"
  name: "getResultOfTestCase(List<ActionReport> actionReportList)"
  nameWithType: "AbstractTestCaseExecutor.getResultOfTestCase(List<ActionReport> actionReportList)"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getResultOfTestCase(List<ActionReport> actionReportList)"
  overload: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getResultOfTestCase*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected Result getResultOfTestCase(List<ActionReport> actionReportList)"
    parameters:
    - id: "actionReportList"
      type: "java.util.List<fr.axa.automation.webengine.generated.ActionReport>"
    return:
      type: "fr.axa.automation.webengine.generated.Result"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getTestCaseContext()"
  id: "getTestCaseContext()"
  parent: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor"
  langs:
  - "java"
  name: "getTestCaseContext()"
  nameWithType: "AbstractTestCaseExecutor.getTestCaseContext()"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getTestCaseContext()"
  overload: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getTestCaseContext*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public abstract AbstractTestCaseContext getTestCaseContext()"
    return:
      type: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.initializeWebDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  id: "initializeWebDriver(fr.axa.automation.webengine.global.AbstractGlobalApplicationContext)"
  parent: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor"
  langs:
  - "java"
  name: "initializeWebDriver(AbstractGlobalApplicationContext globalApplicationContext)"
  nameWithType: "AbstractTestCaseExecutor.initializeWebDriver(AbstractGlobalApplicationContext globalApplicationContext)"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.initializeWebDriver(AbstractGlobalApplicationContext globalApplicationContext)"
  overload: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.initializeWebDriver*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "public abstract Object initializeWebDriver(AbstractGlobalApplicationContext globalApplicationContext)"
    parameters:
    - id: "globalApplicationContext"
      type: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
    return:
      type: "java.lang.Object"
  exceptions:
  - type: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.isIgnoredAllOtherAction(fr.axa.automation.webengine.generated.ActionReport)"
  id: "isIgnoredAllOtherAction(fr.axa.automation.webengine.generated.ActionReport)"
  parent: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor"
  langs:
  - "java"
  name: "isIgnoredAllOtherAction(ActionReport actionReport)"
  nameWithType: "AbstractTestCaseExecutor.isIgnoredAllOtherAction(ActionReport actionReport)"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.isIgnoredAllOtherAction(ActionReport actionReport)"
  overload: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.isIgnoredAllOtherAction*"
  type: "Method"
  package: "fr.axa.automation.webengine.core"
  syntax:
    content: "protected boolean isIgnoredAllOtherAction(ActionReport actionReport)"
    parameters:
    - id: "actionReport"
      type: "fr.axa.automation.webengine.generated.ActionReport"
    return:
      type: "boolean"
references:
- uid: "fr.axa.automation.webengine.core.ITestStepExecutor"
  name: "ITestStepExecutor"
  nameWithType: "ITestStepExecutor"
  fullName: "fr.axa.automation.webengine.core.ITestStepExecutor"
- uid: "fr.axa.automation.webengine.properties.GlobalConfiguration"
  name: "GlobalConfiguration"
  nameWithType: "GlobalConfiguration"
  fullName: "fr.axa.automation.webengine.properties.GlobalConfiguration"
- uid: "fr.axa.automation.webengine.logger.ILoggerService"
  name: "ILoggerService"
  nameWithType: "ILoggerService"
  fullName: "fr.axa.automation.webengine.logger.ILoggerService"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.AbstractTestCaseExecutor*"
  name: "AbstractTestCaseExecutor"
  nameWithType: "AbstractTestCaseExecutor.AbstractTestCaseExecutor"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.AbstractTestCaseExecutor"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.exception.WebEngineException"
  name: "WebEngineException"
  nameWithType: "WebEngineException"
  fullName: "fr.axa.automation.webengine.exception.WebEngineException"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
  name: "AbstractTestCaseContext"
  nameWithType: "AbstractTestCaseContext"
  fullName: "fr.axa.automation.webengine.global.AbstractTestCaseContext"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.createTestCaseContext*"
  name: "createTestCaseContext"
  nameWithType: "AbstractTestCaseExecutor.createTestCaseContext"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.createTestCaseContext"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getTestCaseContext*"
  name: "getTestCaseContext"
  nameWithType: "AbstractTestCaseExecutor.getTestCaseContext"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getTestCaseContext"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
  name: "AbstractGlobalApplicationContext"
  nameWithType: "AbstractGlobalApplicationContext"
  fullName: "fr.axa.automation.webengine.global.AbstractGlobalApplicationContext"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.initializeWebDriver*"
  name: "initializeWebDriver"
  nameWithType: "AbstractTestCaseExecutor.initializeWebDriver"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.initializeWebDriver"
  package: "fr.axa.automation.webengine.core"
- uid: "java.util.List<fr.axa.automation.webengine.generated.ActionReport>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "fr.axa.automation.webengine.generated.ActionReport"
    name: "ActionReport"
    fullName: "fr.axa.automation.webengine.generated.ActionReport"
  - name: ">"
    fullName: ">"
- uid: "fr.axa.automation.webengine.generated.Result"
  name: "Result"
  nameWithType: "Result"
  fullName: "fr.axa.automation.webengine.generated.Result"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getResultOfTestCase*"
  name: "getResultOfTestCase"
  nameWithType: "AbstractTestCaseExecutor.getResultOfTestCase"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getResultOfTestCase"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getResultOfAllAction*"
  name: "getResultOfAllAction"
  nameWithType: "AbstractTestCaseExecutor.getResultOfAllAction"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.getResultOfAllAction"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.generated.ActionReport"
  name: "ActionReport"
  nameWithType: "ActionReport"
  fullName: "fr.axa.automation.webengine.generated.ActionReport"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.isIgnoredAllOtherAction*"
  name: "isIgnoredAllOtherAction"
  nameWithType: "AbstractTestCaseExecutor.isIgnoredAllOtherAction"
  fullName: "fr.axa.automation.webengine.core.AbstractTestCaseExecutor.isIgnoredAllOtherAction"
  package: "fr.axa.automation.webengine.core"
- uid: "fr.axa.automation.webengine.core.ITestCaseExecutor"
  name: "ITestCaseExecutor"
  nameWithType: "ITestCaseExecutor"
  fullName: "fr.axa.automation.webengine.core.ITestCaseExecutor"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
